data/osm/lang2ltl/chicago_1/symbolic_batch12_perm_ltl_formula_9_42_fold0.pkl
RER engine: text-davinci-003
Embedding engine: text-embedding-ada-002
Symbolic translation engine: davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30
known lmk embed: data/osm/lmk_sem_embeds/obj2embed_chicago_1_text-embedding-ada-002.pkl
cached lmk embed: data/osm/lmk_name_embeds/name2embed_chicago_1_text-embedding-ada-002.pkl



RUN: 0
Extracting referring expressions from utterance: 0/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Kanellos Shoe Repair, Central & Devon NB, King Pho, Becker Roofing Company, and Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
Starting new HTTPS connection (1): api.openai.com:443
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1352 request_id=610aadcbd83109fd03582530ee8264cc response_code=200
Extracting referring expressions from utterance: 1/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Becker Roofing Company, Baird & Warner, Edgebrook Coffee Ship, Starbucks, and Creativo! Academy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=579 request_id=6ef46c0e0965c976fb159dc1813bb85f response_code=200
Extracting referring expressions from utterance: 2/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: sometime visit Baird & Warner, Little Nest Care, Ruk Sushi & Thai, Edgebrook Coffee Ship, and Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=788 request_id=9f5fd9636a30142e1a85209fc0cdbd18 response_code=200
Extracting referring expressions from utterance: 3/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: sometime visit US Post Office, Kanellos Shoe Repair, Creativo! Academy, King Pho, and Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=920 request_id=7d0f641065db944a697ba52391125493 response_code=200
Extracting referring expressions from utterance: 4/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: eventually go visit Terry\'s Place, Local Goods Chicago, Little Nest Care, My Sister\'s Closet, and Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 365
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=751 request_id=0bf4e6422f9295193f75c9b645d72e41 response_code=200
Extracting referring expressions from utterance: 5/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: eventually go visit Little Nest Care, Lee Nails, North Branch Arts, Baird & Warner, and Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=701 request_id=1966222741b5b9ba987b6403fc834a5b response_code=200
Extracting referring expressions from utterance: 6/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Starbucks, Becker Roofing Company, US Post Office, Central & Devon NB, and Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1163 request_id=5dc8cced34da6eebfa71f520bcc4d2b7 response_code=200
Extracting referring expressions from utterance: 7/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Becker Roofing Company, Currency Change, Creativo! Academy, North Branch Arts, and My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 366
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=793 request_id=f6eba29b4ae150178a8b5c7046ed18fb response_code=200
Extracting referring expressions from utterance: 8/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon NB, go to Domino\'s, go to Local Goods Chicago, go to Edgebrook Coffee Ship, go to Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 361
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=848 request_id=98036ec57feedba26c8fdf1f5e58ecaa response_code=200
Extracting referring expressions from utterance: 9/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to King Pho, go to Terry\'s Place, go to Local Goods Chicago, go to Central & Devon SB, go to Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=847 request_id=2aab1074f4dc06becf9c46840cae2b18 response_code=200
Extracting referring expressions from utterance: 10/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Kanellos Shoe Repair, Central & Devon SB, Local Goods Chicago, Edgebrook Coffee Ship, King Pho, in any order required\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=968 request_id=2c772ec09859cd555b72ef9b2256a5f2 response_code=200
Extracting referring expressions from utterance: 11/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Associated Bank, Local Goods Chicago, Edgebrook Coffee Ship, Becker Roofing Company, Currency Change, in any order required\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 369
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1163 request_id=c69a8fa1c6dbfbeb6e911f28888f940c response_code=200
Extracting referring expressions from utterance: 12/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit all locations North Branch Arts, US Post Office, Creativo! Academy, Local Goods Chicago, Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1116 request_id=e45b73d23b203209698881a0634576fb response_code=200
Extracting referring expressions from utterance: 13/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit all locations Baird & Warner, Ruk Sushi & Thai, North Branch Arts, Terry\'s Place, King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=839 request_id=110fbf2a93fbb3de50757ab319bc68d1 response_code=200
Extracting referring expressions from utterance: 14/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach the following five locations Lee Nails, Edward Jones, Little Nest Care, Starbucks, Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=751 request_id=ce74783a3567518d7acfa09f747315b6 response_code=200
Extracting referring expressions from utterance: 15/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach the following five locations Kanellos Shoe Repair, Central & Devon NB, Domino\'s, Local Goods Chicago, Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=717 request_id=1b25e571049fe86c9887651285adbfb4 response_code=200
Extracting referring expressions from utterance: 16/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: find the following Local Goods Chicago, Becker Roofing Company, Edgebrook Coffee Ship, Baird & Warner, Ace Hardware\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 365
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1097 request_id=7c3db67db05030d4cc466d151f42f304 response_code=200
Extracting referring expressions from utterance: 17/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: find the following Local Goods Chicago, Currency Change, My Sister\'s Closet, Creativo! Academy, Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 358
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1619 request_id=2f5d81d7ee1a7dd1ddf870cb2260eb72 response_code=200
Extracting referring expressions from utterance: 18/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Edgebrook Coffee Ship, North Branch Arts, US Post Office, Creativo! Academy, and Kanellos Shoe Repair, in arbitrary order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 366
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=817 request_id=4ce3bf70eb31faa6133bdd9b5e8ff08c response_code=200
Extracting referring expressions from utterance: 19/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to US Post Office, Local Goods Chicago, Ruk Sushi & Thai, Edward Jones, and Starbucks, in arbitrary order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=791 request_id=76557563fe05061fc4433f7a01bb9c0d response_code=200
Extracting referring expressions from utterance: 20/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Creativo! Academy, Currency Change, US Post Office, Terry\'s Place, and Associated Bank, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=749 request_id=477e359997a6e566eb20b5dfece0e4b1 response_code=200
Extracting referring expressions from utterance: 21/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure US Post Office, Associated Bank, Central & Devon NB, Ruk Sushi & Thai, and Domino\'s, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=920 request_id=2d5e9aa8506544a24d2b794d085947e6 response_code=200
Extracting referring expressions from utterance: 22/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop until Currency Change, Edgebrook Coffee Ship, Terry\'s Place, Lee Nails, and Baird & Warner, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=615 request_id=7527a2ce7f94817fc19dde3c6f87e82b response_code=200
Extracting referring expressions from utterance: 23/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop until My Sister\'s Closet, Little Nest Care, Ruk Sushi & Thai, US Post Office, and Starbucks, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=722 request_id=c51ae0d053cf0ff34a723d9866db4869 response_code=200
Extracting referring expressions from utterance: 24/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to North Branch Arts, Edward Jones, Local Goods Chicago, Domino\'s, and Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1182 request_id=d4142a78190e6491d81d2edf6a1860d8 response_code=200
Extracting referring expressions from utterance: 25/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Central & Devon NB, US Post Office, Little Nest Care, Currency Change, and Edgebrook Coffee Ship\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 361
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1068 request_id=7001bd6b7fcda1f2213183fcb991890e response_code=200
Extracting referring expressions from utterance: 26/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit My Sister\'s Closet, King Pho, Starbucks, Associated Bank, and Creativo! Academy, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1144 request_id=c901f5a5278e39e8c0e09d9b5a8f2b3c response_code=200
Extracting referring expressions from utterance: 27/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Baird & Warner, Local Goods Chicago, Ruk Sushi & Thai, North Branch Arts, and Associated Bank, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 358
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=620 request_id=84e53e4640246bfa4ed52ba143a3a147 response_code=200
Extracting referring expressions from utterance: 28/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Central & Devon SB, My Sister\'s Closet, Central & Devon NB, Lee Nails, and Edgebrook Coffee Ship, in no particular order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 361
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=953 request_id=9140917dff242f0ea64a0ffac289a49f response_code=200
Extracting referring expressions from utterance: 29/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Domino\'s, Kanellos Shoe Repair, Terry\'s Place, Local Goods Chicago, and Ace Hardware, in no particular order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1052 request_id=c6301a0462d025543cb6a1777088887b response_code=200
Extracting referring expressions from utterance: 30/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Baird & Warner, US Post Office, Lee Nails, My Sister\'s Closet, and Creativo! Academy, at least once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1200 request_id=9d8b58da6cf08e6e96979cdb3e4c13d0 response_code=200
Extracting referring expressions from utterance: 31/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to US Post Office, King Pho, North Branch Arts, Currency Change, and Domino\'s, at least once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=633 request_id=d3e8fd50f3199d258dcbfb705e1c0ab8 response_code=200
Extracting referring expressions from utterance: 32/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Currency Change, Terry\'s Place, Ruk Sushi & Thai, Baird & Warner, and Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 357
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=868 request_id=769708aa642e19be8eab363343af5f62 response_code=200
Extracting referring expressions from utterance: 33/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to My Sister\'s Closet, Edgebrook Coffee Ship, Central & Devon SB, Ace Hardware, and North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1015 request_id=448fe30110238add68e21a3a8f7a182e response_code=200
Extracting referring expressions from utterance: 34/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon NB, Edgebrook Coffee Ship, Local Goods Chicago, My Sister\'s Closet, and Lee Nails, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=787 request_id=09b092a78ff96a4317abb69ffd4ec494 response_code=200
Extracting referring expressions from utterance: 35/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon NB, Associated Bank, Currency Change, North Branch Arts, and Central & Devon SB, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=824 request_id=c62c668adb466a5e11d8ea902d079bc9 response_code=200
Extracting referring expressions from utterance: 36/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Edward Jones, Ruk Sushi & Thai, Domino\'s, Edgebrook Coffee Ship, and Central & Devon SB, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 352
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=924 request_id=04ff5d1f4063c996703c076da78d6786 response_code=200
Extracting referring expressions from utterance: 37/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Ruk Sushi & Thai, Starbucks, Kanellos Shoe Repair, Terry\'s Place, and King Pho, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1068 request_id=ee53a0fcebbc255e42b947e887a071c7 response_code=200
Extracting referring expressions from utterance: 38/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach Little Nest Care, US Post Office, My Sister\'s Closet, Domino\'s, and Creativo! Academy, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=855 request_id=b41dcf77dd0aa9edb67ecd7dbf6fff8d response_code=200
Extracting referring expressions from utterance: 39/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach US Post Office, Baird & Warner, Domino\'s, North Branch Arts, and King Pho, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=800 request_id=34545f87bbdd1bc654c676a0e1473615 response_code=200
Extracting referring expressions from utterance: 40/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you go to Lee Nails, Ace Hardware, Ruk Sushi & Thai, Terry\'s Place, Edward Jones, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=766 request_id=36e9a74b8dacd92af1104d8db0788e7b response_code=200
Extracting referring expressions from utterance: 41/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you go to Edward Jones, King Pho, Starbucks, Ruk Sushi & Thai, Little Nest Care, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=888 request_id=df16215fe7a5d3f8bebc8ae799552d5e response_code=200
Extracting referring expressions from utterance: 42/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Domino\'s, Creativo! Academy, My Sister\'s Closet, Central & Devon SB, Edward Jones, but it can be done in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1033 request_id=c9d529bf127f599bb269181579376136 response_code=200
Extracting referring expressions from utterance: 43/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Little Nest Care, Domino\'s, Kanellos Shoe Repair, Starbucks, Local Goods Chicago, but it can be done in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=785 request_id=cf2e13782505d1e00cce8317a8cee701 response_code=200
Extracting referring expressions from utterance: 44/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: in no particular order visit Edward Jones, Lee Nails, Central & Devon SB, Associated Bank, Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=835 request_id=c7f681d1aaae3a7ae704970504d67b05 response_code=200
Extracting referring expressions from utterance: 45/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: in no particular order visit Central & Devon SB, North Branch Arts, My Sister\'s Closet, Little Nest Care, Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1057 request_id=8480096b1cd018d09de706274061dfda response_code=200
Extracting referring expressions from utterance: 46/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit North Branch Arts, until you visit Starbucks, visit Starbucks, only once do not visit Starbucks, until you visit Local Goods Chicago, visit Local Goods Chicago, only once do no visit Local Goods Chicago, until you visit Central & Devon SB, visit Central & Devon SB, only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=903 request_id=ca66d4e4fb67cf9ffb078f6d1352a199 response_code=200
Extracting referring expressions from utterance: 47/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Kanellos Shoe Repair, until you visit Currency Change, visit Currency Change, only once do not visit Currency Change, until you visit US Post Office, visit US Post Office, only once do no visit US Post Office, until you visit North Branch Arts, visit North Branch Arts, only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=781 request_id=b8e7962c6d286031947de4e285cac1c8 response_code=200
Extracting referring expressions from utterance: 48/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Starbucks, then Ace Hardware, then Lee Nails, and then US Post Office, you can only visit each landmark once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=769 request_id=112b85a92759c7d45e0724fe9ce42d5f response_code=200
Extracting referring expressions from utterance: 49/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Lee Nails, then Local Goods Chicago, then Currency Change, and then US Post Office, you can only visit each landmark once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=498 request_id=7e40448a8b4ba523f164b42ce8f0759b response_code=200
Extracting referring expressions from utterance: 50/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Associated Bank, but not through Creativo! Academy, Currency Change, or Central & Devon SB, and then go to Creativo! Academy, but not through Currency Change, or Central & Devon SB, and then go to Currency Change, but not through Central & Devon SB, and finally go to Central & Devon SB, no revisiting is allowed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=583 request_id=83f149087354c0674640947e12179158 response_code=200
Extracting referring expressions from utterance: 51/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon NB, but not through Starbucks, Associated Bank, or Domino\'s, and then go to Starbucks, but not through Associated Bank, or Domino\'s, and then go to Associated Bank, but not through Domino\'s, and finally go to Domino\'s, no revisiting is allowed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=590 request_id=250e32ce69f933b9fd6bbe1b85ca88af response_code=200
Extracting referring expressions from utterance: 52/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Local Goods Chicago, until Kanellos Shoe Repair, is visited and do not go to Kanellos Shoe Repair, until Terry\'s Place, is visited and do not go to Terry\'s Place, until King Pho, is visited along the path never return to previous location you have been to\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=771 request_id=c6b72e7cf91fa175a72b30335842db7b response_code=200
Extracting referring expressions from utterance: 53/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Terry\'s Place, until Local Goods Chicago, is visited and do not go to Local Goods Chicago, until Creativo! Academy, is visited and do not go to Creativo! Academy, until Becker Roofing Company, is visited along the path never return to previous location you have been to\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=779 request_id=92ba8e22aeef8aeb85e9a89948c3aecf response_code=200
Extracting referring expressions from utterance: 54/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Edward Jones, only after going to US Post Office, before that make your way to US Post Office, only after going to Central & Devon SB, before that make your way to Central & Devon SB, only after going to Central & Devon NB, do not go back to the previous location you have visited while heading to the next\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=565 request_id=26fc93502f535b101567491c7c4a8501 response_code=200
Extracting referring expressions from utterance: 55/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Kanellos Shoe Repair, only after going to Domino\'s, before that make your way to Domino\'s, only after going to Associated Bank, before that make your way to Associated Bank, only after going to Terry\'s Place, do not go back to the previous location you have visited while heading to the next\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=673 request_id=87e922de92ad7d5b944fc203f50b2c22 response_code=200
Extracting referring expressions from utterance: 56/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Local Goods Chicago, but do not visit Lee Nails, Central & Devon SB, or North Branch Arts, and then go to Lee Nails, but do not visit Central & Devon SB, or North Branch Arts, or revisit Local Goods Chicago, and then go to Central & Devon SB, but do not visit North Branch Arts, or revisit Local Goods Chicago, or Lee Nails, and then go to North Branch Arts, but do not revisit Local Goods Chicago, Lee Nails, or Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=554 request_id=582989eb90665c1c42ca6a088d685e17 response_code=200
Extracting referring expressions from utterance: 57/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to King Pho, but do not visit Kanellos Shoe Repair, Little Nest Care, or US Post Office, and then go to Kanellos Shoe Repair, but do not visit Little Nest Care, or US Post Office, or revisit King Pho, and then go to Little Nest Care, but do not visit US Post Office, or revisit King Pho, or Kanellos Shoe Repair, and then go to US Post Office, but do not revisit King Pho, Kanellos Shoe Repair, or Little Nest Care\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=940 request_id=30a0e224c788d4ab6d843868365ab841 response_code=200
Extracting referring expressions from utterance: 58/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Little Nest Care, My Sister\'s Closet, Kanellos Shoe Repair, and Associated Bank, in this order without skipping any one of them do not revisit any one of them once after you have been there\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1084 request_id=a257ba374137de81e0e9516c51e697a9 response_code=200
Extracting referring expressions from utterance: 59/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Ace Hardware, Currency Change, Terry\'s Place, and Little Nest Care, in this order without skipping any one of them do not revisit any one of them once after you have been there\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=657 request_id=6b5f3289a52987a4a2bfcea104094f6d response_code=200
Extracting referring expressions from utterance: 60/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon SB, only once but keep away from Ace Hardware, Baird & Warner, and Kanellos Shoe Repair, and then go to Ace Hardware, only once but keep away from Central & Devon SB, Baird & Warner, and Kanellos Shoe Repair, and then go to Baird & Warner, only once but keep way from Central & Devon SB, Ace Hardware, and Kanellos Shoe Repair, and finally go to Kanellos Shoe Repair, once but keep away from Central & Devon SB, Ace Hardware, and Baird & Warner\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=646 request_id=5e4be4d617769c3553c09901b0762017 response_code=200
Extracting referring expressions from utterance: 61/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Local Goods Chicago, only once but keep away from Currency Change, Becker Roofing Company, and Ruk Sushi & Thai, and then go to Currency Change, only once but keep away from Local Goods Chicago, Becker Roofing Company, and Ruk Sushi & Thai, and then go to Becker Roofing Company, only once but keep way from Local Goods Chicago, Currency Change, and Ruk Sushi & Thai, and finally go to Ruk Sushi & Thai, once but keep away from Local Goods Chicago, Currency Change, and Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=637 request_id=5750470946e318550854887c65dc6292 response_code=200
Extracting referring expressions from utterance: 62/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Baird & Warner, one time but not through King Pho, North Branch Arts, or Ruk Sushi & Thai, and then visit King Pho, once but not through Baird & Warner, North Branch Arts, or Ruk Sushi & Thai, and then visit North Branch Arts, once but not through Baird & Warner, King Pho, or Ruk Sushi & Thai, and then visit Ruk Sushi & Thai, once but not through Baird & Warner, King Pho, or North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=990 request_id=cc2673bb95ac382f6ac0233405eba9a0 response_code=200
Extracting referring expressions from utterance: 63/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Ace Hardware, one time but not through Terry\'s Place, My Sister\'s Closet, or Ruk Sushi & Thai, and then visit Terry\'s Place, once but not through Ace Hardware, My Sister\'s Closet, or Ruk Sushi & Thai, and then visit My Sister\'s Closet, once but not through Ace Hardware, Terry\'s Place, or Ruk Sushi & Thai, and then visit Ruk Sushi & Thai, once but not through Ace Hardware, Terry\'s Place, or My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=635 request_id=92b5bddbc4fd5ae531899497180e830c response_code=200
Extracting referring expressions from utterance: 64/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Edgebrook Coffee Ship, King Pho, and Little Nest Care, until you make Starbucks, single visit to Starbucks, and then make your way to Edgebrook Coffee Ship, while staying away from Starbucks, King Pho, and Little Nest Care, and then make your way to King Pho, while staying away from Starbucks, Edgebrook Coffee Ship, or Little Nest Care, and finally make your way to Little Nest Care, while staying away from Starbucks, Edgebrook Coffee Ship, and King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=438 request_id=efa4cef5c3916cc4b677adb0d03699bd response_code=200
Extracting referring expressions from utterance: 65/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Currency Change, Terry\'s Place, and My Sister\'s Closet, until you make Central & Devon NB, single visit to Central & Devon NB, and then make your way to Currency Change, while staying away from Central & Devon NB, Terry\'s Place, and My Sister\'s Closet, and then make your way to Terry\'s Place, while staying away from Central & Devon NB, Currency Change, or My Sister\'s Closet, and finally make your way to My Sister\'s Closet, while staying away from Central & Devon NB, Currency Change, and Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=a4728540ed392f719a8cfefbb7ccf7f5 response_code=200
Extracting referring expressions from utterance: 66/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: head to Creativo! Academy, King Pho, Currency Change, and North Branch Arts, in this order without skipping or revisiting any one of them\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=584 request_id=2964eef819ae60fcc1541683c9cf65f3 response_code=200
Extracting referring expressions from utterance: 67/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: head to Currency Change, Ruk Sushi & Thai, King Pho, and Terry\'s Place, in this order without skipping or revisiting any one of them\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=853 request_id=3b3a94515850824614f0961e54f4bbb3 response_code=200
Extracting referring expressions from utterance: 68/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit each of Becker Roofing Company, Central & Devon NB, Edward Jones, and North Branch Arts, exactly once in this order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=dd8a05065cc21c7316dcb16543fe7d78 response_code=200
Extracting referring expressions from utterance: 69/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit each of Baird & Warner, Central & Devon NB, Associated Bank, and Ruk Sushi & Thai, exactly once in this order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=740 request_id=392e9fc889e2a0dd8d57095dc91227c9 response_code=200
Extracting referring expressions from utterance: 70/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit North Branch Arts, but before visiting North Branch Arts, you must visit Edward Jones, only after that visit Local Goods Chicago, after visiting Local Goods Chicago, visit Ruk Sushi & Thai, visit each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=595 request_id=1a09d7c454724355ab3c6317b3ed64fd response_code=200
Extracting referring expressions from utterance: 71/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit US Post Office, but before visiting US Post Office, you must visit Lee Nails, only after that visit Central & Devon NB, after visiting Central & Devon NB, visit Creativo! Academy, visit each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=741 request_id=34a061e7338f6a8b7bedff0031eea30a response_code=200
Extracting referring expressions from utterance: 72/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Starbucks, only once while avoiding Ruk Sushi & Thai, then visit Ruk Sushi & Thai, once while avoiding Central & Devon SB, only after visiting Central & Devon SB, once visit North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1034 request_id=9c65e09d7b3b5ca30d6542d0a7ea5914 response_code=200
Extracting referring expressions from utterance: 73/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Starbucks, only once while avoiding Edgebrook Coffee Ship, then visit Edgebrook Coffee Ship, once while avoiding North Branch Arts, only after visiting North Branch Arts, once visit Baird & Warner\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=626 request_id=da96c8ca98eef7e9e0da18a2b166a6b0 response_code=200
Extracting referring expressions from utterance: 74/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Little Nest Care, US Post Office, Edgebrook Coffee Ship, Starbucks, once do not visit US Post Office, without visiting Little Nest Care, and do not visit US Post Office, without visiting Edgebrook Coffee Ship, do not visit Starbucks, without visiting Edgebrook Coffee Ship\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1113 request_id=d37eec9b409c76e2783f74f9a65642ec response_code=200
Extracting referring expressions from utterance: 75/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Starbucks, US Post Office, Creativo! Academy, King Pho, once do not visit US Post Office, without visiting Starbucks, and do not visit US Post Office, without visiting Creativo! Academy, do not visit King Pho, without visiting Creativo! Academy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1057 request_id=2e246572257f10ecedec5dd156d08429 response_code=200
Extracting referring expressions from utterance: 76/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Creativo! Academy, then Little Nest Care, then North Branch Arts, then Ace Hardware, follow this strict order and visit each location only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=831 request_id=75d2f20ae9137ef4fd99609cec8025cb response_code=200
Extracting referring expressions from utterance: 77/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Domino\'s, then Kanellos Shoe Repair, then Lee Nails, then Starbucks, follow this strict order and visit each location only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=802 request_id=bccc4e7767713925b388d8056871c5ab response_code=200
Extracting referring expressions from utterance: 78/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please go to Becker Roofing Company, then North Branch Arts, then Ruk Sushi & Thai, then Little Nest Care, in that specific order without revisiting previously visited location\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=797 request_id=81cd8638eec75d3cf78e46084b6018ee response_code=200
Extracting referring expressions from utterance: 79/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please go to Local Goods Chicago, then Domino\'s, then Little Nest Care, then Central & Devon NB, in that specific order without revisiting previously visited location\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=722 request_id=14a87f9cf8a3bafba38c6d5ac71ea33d response_code=200
Extracting referring expressions from utterance: 80/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Domino\'s, once without visiting Baird & Warner, then go to Baird & Warner, once without visiting King Pho, then go to King Pho, once without visiting Lee Nails, finally go to Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=820 request_id=d6e2d85f46b23b4cefb81f658a02c486 response_code=200
Extracting referring expressions from utterance: 81/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Starbucks, once without visiting Creativo! Academy, then go to Creativo! Academy, once without visiting My Sister\'s Closet, then go to My Sister\'s Closet, once without visiting Central & Devon NB, finally go to Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=718 request_id=280f66ac22ad0e345705b7b972880a28 response_code=200
Extracting referring expressions from utterance: 82/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Lee Nails, once then go to Local Goods Chicago, once while avoiding Becker Roofing Company, then go to Becker Roofing Company, once while avoiding Creativo! Academy, finally go to Creativo! Academy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1027 request_id=7b192a917a1fdc20debf620d228fa13b response_code=200
Extracting referring expressions from utterance: 83/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Domino\'s, once then go to Associated Bank, once while avoiding Central & Devon NB, then go to Central & Devon NB, once while avoiding North Branch Arts, finally go to North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=741 request_id=8c9db217840c78941923e8cadcfa14a2 response_code=200
Extracting referring expressions from utterance: 84/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon NB, without visiting Starbucks, then go to Starbucks, without visiting Little Nest Care, then go to Little Nest Care, without visiting US Post Office, finally go to US Post Office, while only visiting each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1080 request_id=a504273649d1dad61c86439d623feb6f response_code=200
Extracting referring expressions from utterance: 85/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to US Post Office, without visiting Central & Devon SB, then go to Central & Devon SB, without visiting Lee Nails, then go to Lee Nails, without visiting Starbucks, finally go to Starbucks, while only visiting each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=905 request_id=77d86b65dfc2403bd68050d36a9d2b72 response_code=200
Extracting referring expressions from utterance: 86/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Central & Devon SB, then Domino\'s, then My Sister\'s Closet, and then Terry\'s Place, in that strict order without returning to previously visited locations\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=687 request_id=aba1b00d44ca0274759518466ce5f3ae response_code=200
Extracting referring expressions from utterance: 87/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Associated Bank, then Baird & Warner, then Creativo! Academy, and then King Pho, in that strict order without returning to previously visited locations\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=701 request_id=74917af913462617381998873b923393 response_code=200
Extracting referring expressions from utterance: 88/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never stop visiting Starbucks, Little Nest Care, Lee Nails, and Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=549 request_id=22b708a5fb8730ae2b80ff36a5a44634 response_code=200
Extracting referring expressions from utterance: 89/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never stop visiting Edgebrook Coffee Ship, Central & Devon NB, Becker Roofing Company, and Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=629 request_id=cf069a2b31d07750f0f35e8b0f0325d1 response_code=200
Extracting referring expressions from utterance: 90/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: frequent Ace Hardware, Terry\'s Place, Baird & Warner, and US Post Office, infinitely in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=599 request_id=6c053d74891ba92716cbd237a0b2bb0a response_code=200
Extracting referring expressions from utterance: 91/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: frequent Central & Devon NB, North Branch Arts, Associated Bank, and Edward Jones, infinitely in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=447 request_id=cb3990493a6a3d64572bc395fb31ec86 response_code=200
Extracting referring expressions from utterance: 92/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please keep visiting My Sister\'s Closet, North Branch Arts, US Post Office, and Edgebrook Coffee Ship, without stopping\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=599 request_id=dee76834b813c911bf6ff521f1db1088 response_code=200
Extracting referring expressions from utterance: 93/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please keep visiting Central & Devon NB, Edgebrook Coffee Ship, Kanellos Shoe Repair, and Lee Nails, without stopping\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1167 request_id=9505d58b13d0a89dd0bbd3979ece85ff response_code=200
Extracting referring expressions from utterance: 94/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Kanellos Shoe Repair, North Branch Arts, Central & Devon NB, and Edward Jones, are visited infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=b37925784017c661d4785a6c09c01d0c response_code=200
Extracting referring expressions from utterance: 95/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Local Goods Chicago, Lee Nails, Edgebrook Coffee Ship, and Central & Devon NB, are visited infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1256 request_id=f019674969b51939c5b56c961dc918c4 response_code=200
Extracting referring expressions from utterance: 96/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Kanellos Shoe Repair, Domino\'s, King Pho, and Creativo! Academy, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=744 request_id=be81430a403a505fbe8ab59a81593d60 response_code=200
Extracting referring expressions from utterance: 97/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Kanellos Shoe Repair, Edgebrook Coffee Ship, Domino\'s, and Central & Devon SB, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=54348462492d38204c80c3077e0378be response_code=200
Extracting referring expressions from utterance: 98/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit locations Kanellos Shoe Repair, King Pho, North Branch Arts, and Baird & Warner, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=573 request_id=ab161f4fed484b7fb800da4891b073e6 response_code=200
Extracting referring expressions from utterance: 99/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit locations Associated Bank, Becker Roofing Company, Ruk Sushi & Thai, and Kanellos Shoe Repair, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1113 request_id=6dc288dcee2ec18fe3b4b34fa54fb776 response_code=200
Extracting referring expressions from utterance: 100/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Baird & Warner, US Post Office, Local Goods Chicago, and Domino\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=827 request_id=6c07c6c9718b5a3918564e8779082fee response_code=200
Extracting referring expressions from utterance: 101/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Associated Bank, Little Nest Care, Currency Change, and Edgebrook Coffee Ship\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=935 request_id=efa3e9e545578d5ab0016cab908a47a6 response_code=200
Extracting referring expressions from utterance: 102/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Lee Nails, US Post Office, Ruk Sushi & Thai, and Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=901 request_id=05272c4d537eeba2cd0345acceeac96d response_code=200
Extracting referring expressions from utterance: 103/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Edward Jones, Becker Roofing Company, Associated Bank, and Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=832 request_id=f906336525aca2c104080791113d7bc0 response_code=200
Extracting referring expressions from utterance: 104/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Little Nest Care, US Post Office, Becker Roofing Company, and Baird & Warner, over and over again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=542 request_id=32d075d45c85d9844e20bfb0aa54e88c response_code=200
Extracting referring expressions from utterance: 105/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Local Goods Chicago, Lee Nails, Starbucks, and Edgebrook Coffee Ship, over and over again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=697 request_id=c26e72e724da05f1b307436f5d51cded response_code=200
Extracting referring expressions from utterance: 106/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue to stop at Creativo! Academy, Ruk Sushi & Thai, Edward Jones, and Little Nest Care\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=563 request_id=99a370b689994647e5884d7ddeea287c response_code=200
Extracting referring expressions from utterance: 107/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue to stop at Currency Change, Baird & Warner, Central & Devon SB, and Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=700 request_id=a2bbbc0f7dbae09df725a8f46ff52563 response_code=200
Extracting referring expressions from utterance: 108/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continuously visit King Pho, Little Nest Care, Baird & Warner, and North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=642 request_id=15d0939d0e648a71df27d9b6b55043b8 response_code=200
Extracting referring expressions from utterance: 109/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continuously visit Edward Jones, Becker Roofing Company, Edgebrook Coffee Ship, and Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=608 request_id=cb0e7c22c940f891e559dad65c77a72c response_code=200
Extracting referring expressions from utterance: 110/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Edward Jones, Kanellos Shoe Repair, Baird & Warner, and Edgebrook Coffee Ship, Kanellos Shoe Repair, finite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=702 request_id=2bd22fc125121990fe87b20f0dfb5bbb response_code=200
Extracting referring expressions from utterance: 111/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Kanellos Shoe Repair, My Sister\'s Closet, Baird & Warner, and North Branch Arts, My Sister\'s Closet, finite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1138 request_id=66ed12a7e75c3a8dc102164cd53eca6f response_code=200
Extracting referring expressions from utterance: 112/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: perpetually travel to Creativo! Academy, North Branch Arts, and Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=3814591968b6ba4ed95f23ab0766c504 response_code=200
Extracting referring expressions from utterance: 113/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: perpetually travel to Starbucks, Edward Jones, and US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=381 request_id=bde312fd8d65a32e95d81fdecd3b4a01 response_code=200
Extracting referring expressions from utterance: 114/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: explore Ruk Sushi & Thai, Lee Nails, and Edward Jones, endlessy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 308
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=c557aa2b7ce304b52645c0fa6f49ed99 response_code=200
Extracting referring expressions from utterance: 115/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: explore US Post Office, Associated Bank, and Central & Devon NB, endlessy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=578 request_id=c5c710871844c019b593db8db41e20c8 response_code=200
Extracting referring expressions from utterance: 116/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are prohibited from not infinitely going to Kanellos Shoe Repair, North Branch Arts, My Sister\'s Closet, and Baird & Warner\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1192 request_id=56d607ff64d0fa71e3b8dffcc062e743 response_code=200
Extracting referring expressions from utterance: 117/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are prohibited from not infinitely going to Central & Devon NB, Edward Jones, US Post Office, and Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=778 request_id=1f9d65838fb8274fdfcdf0fe026e30ef response_code=200
Extracting referring expressions from utterance: 118/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting King Pho, Little Nest Care, Associated Bank, and Edgebrook Coffee Ship, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=37c0cddb22ca49284af6c2c49ff058b5 response_code=200
Extracting referring expressions from utterance: 119/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Domino\'s, Little Nest Care, Terry\'s Place, and Becker Roofing Company, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=608 request_id=208639dbffed5498354b9e201fefeefa response_code=200
Extracting referring expressions from utterance: 120/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Associated Bank, Kanellos Shoe Repair, Ace Hardware, and Edward Jones, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=620 request_id=45b95752689b33cba228b0e97404e5a1 response_code=200
Extracting referring expressions from utterance: 121/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to King Pho, Associated Bank, Little Nest Care, and US Post Office, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=687 request_id=bd121ced2e76e13a91445e077616979e response_code=200
Extracting referring expressions from utterance: 122/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Central & Devon SB, Domino\'s, Starbucks, and US Post Office, in any order infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1059 request_id=c79c003bfd619a32aef9ca6677fff5a7 response_code=200
Extracting referring expressions from utterance: 123/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting North Branch Arts, Edgebrook Coffee Ship, Central & Devon SB, and King Pho, in any order infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=748 request_id=470f135f690dbcafc348f541daec7321 response_code=200
Extracting referring expressions from utterance: 124/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Edgebrook Coffee Ship, Ruk Sushi & Thai, Domino\'s, and Starbucks, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=612 request_id=53af167c5345228982bf194246a43b09 response_code=200
Extracting referring expressions from utterance: 125/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Edgebrook Coffee Ship, King Pho, US Post Office, and Lee Nails, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=771 request_id=80a60c59e69e1586af2cc834d40d8f49 response_code=200
Extracting referring expressions from utterance: 126/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop going to Kanellos Shoe Repair, Starbucks, Associated Bank, and Baird & Warner, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=638 request_id=f0efa728966f2906ddb814e178ec2951 response_code=200
Extracting referring expressions from utterance: 127/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop going to Kanellos Shoe Repair, Associated Bank, Domino\'s, and Edgebrook Coffee Ship, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=897 request_id=4fc8e1fc7290ddef26ebfe54266d52c1 response_code=200
Extracting referring expressions from utterance: 128/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Terry\'s Place, Local Goods Chicago, Ruk Sushi & Thai, and Currency Change, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=852 request_id=c363f946ce1ad7f5491a760c0663b5b4 response_code=200
Extracting referring expressions from utterance: 129/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Domino\'s, My Sister\'s Closet, Central & Devon SB, and King Pho, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1166 request_id=4246e27eaa565bb54c07ab2dec487e7a response_code=200
Extracting referring expressions from utterance: 130/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Becker Roofing Company, Baird & Warner, Lee Nails, and My Sister\'s Closet, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=656 request_id=485fa1d7ea9d23c13d5d8f6bb6ed51d3 response_code=200
Extracting referring expressions from utterance: 131/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Creativo! Academy, Central & Devon NB, Ace Hardware, and My Sister\'s Closet, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=752 request_id=da668b8fddd8203b18a9d70a4889b437 response_code=200
Extracting referring expressions from utterance: 132/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue visiting Becker Roofing Company, North Branch Arts, Ace Hardware, and Associated Bank, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=817 request_id=f0605bca5e37eb5703c45dd563892023 response_code=200
Extracting referring expressions from utterance: 133/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue visiting Domino\'s, Central & Devon SB, Kanellos Shoe Repair, and US Post Office, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=791 request_id=a49dceefee40d89f68d0d149f75d5929 response_code=200
Extracting referring expressions from utterance: 134/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Creativo! Academy, US Post Office, My Sister\'s Closet, and Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=828 request_id=1c7f2e3340ffe3fcdd82beb2a6dc46c7 response_code=200
Extracting referring expressions from utterance: 135/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Creativo! Academy, Central & Devon NB, Currency Change, and US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=758 request_id=dc5de1cd3bba04129ef4ac37e84eaa39 response_code=200
Extracting referring expressions from utterance: 136/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Currency Change, Local Goods Chicago, or Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=927 request_id=1e180bb919d8b77ff73c9838bd818762 response_code=200
Extracting referring expressions from utterance: 137/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Local Goods Chicago, Terry\'s Place, or Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=462 request_id=8a83ccb3e99309e02cb669f6c8a21007 response_code=200
Extracting referring expressions from utterance: 138/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never visit US Post Office, Edward Jones, or Creativo! Academy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=65683678bcc46788bc4986596bb1c125 response_code=200
Extracting referring expressions from utterance: 139/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never visit Edward Jones, Central & Devon NB, or Ace Hardware\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=651 request_id=9fff95222c103e5b6e5b55e14235120e response_code=200
Extracting referring expressions from utterance: 140/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to King Pho, Little Nest Care, and US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=f06854d7028f4df3173a76b19f387a08 response_code=200
Extracting referring expressions from utterance: 141/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Domino\'s, Edward Jones, and King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=271ed90d5e513c12fe0bb0b33a427e2f response_code=200
Extracting referring expressions from utterance: 142/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Terry\'s Place, Creativo! Academy, and Domino\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=8aa76be3ed5b5dabd20b6a1b479f27db response_code=200
Extracting referring expressions from utterance: 143/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Starbucks, Ace Hardware, and Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=585 request_id=c6ee11ff3053a1a39d8384cd563f814f response_code=200
Extracting referring expressions from utterance: 144/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Currency Change, Local Goods Chicago, and Creativo! Academy, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=633 request_id=7716d74e5b091d5eeb8c26537236cb34 response_code=200
Extracting referring expressions from utterance: 145/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Associated Bank, Kanellos Shoe Repair, and Edgebrook Coffee Ship, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=648 request_id=0d17753aed3e074c1116bd94533ce7dc response_code=200
Extracting referring expressions from utterance: 146/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit US Post Office, Domino\'s, or Kanellos Shoe Repair, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=780 request_id=c55bd626d4aa9c5c19ef42b2a16be680 response_code=200
Extracting referring expressions from utterance: 147/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit King Pho, Ace Hardware, or Becker Roofing Company, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=655 request_id=0af822a06032cb0746ecdcfe58564153 response_code=200
Extracting referring expressions from utterance: 148/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Ace Hardware, Edward Jones, or Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=3e0ff3dcaecdef55d7709fdad84384ad response_code=200
Extracting referring expressions from utterance: 149/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Domino\'s, Little Nest Care, or US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=553 request_id=ad6a6aa51c5e0414f1e2b2016be90cb8 response_code=200
Extracting referring expressions from utterance: 150/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Local Goods Chicago, Ruk Sushi & Thai, and Creativo! Academy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=935fd0723bc964f88f42790c304604f6 response_code=200
Extracting referring expressions from utterance: 151/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Starbucks, Ruk Sushi & Thai, and Creativo! Academy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=670 request_id=036071e8f5c9d6632544383218d25ba1 response_code=200
Extracting referring expressions from utterance: 152/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit either one among Creativo! Academy, Ruk Sushi & Thai, and Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=631 request_id=999bfbe4c3870fc008425e7e6e865e45 response_code=200
Extracting referring expressions from utterance: 153/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit either one among Little Nest Care, Domino\'s, and Ace Hardware\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=662 request_id=7cfd76804d87c56351e3c89c580dc73a response_code=200
Extracting referring expressions from utterance: 154/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach the locations Terry\'s Place, Central & Devon SB, and Little Nest Care\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=550 request_id=db600cdeb4a277168cd6ac4edc862110 response_code=200
Extracting referring expressions from utterance: 155/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach the locations Ace Hardware, Baird & Warner, and Domino\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=af7f373c812d0cb719613c473522aed8 response_code=200
Extracting referring expressions from utterance: 156/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach Baird & Warner, ensure that you never reach Little Nest Care, and ensure that you never reach Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=642 request_id=e594fd582f08ea4d9a4a0ffcc4d5d3cf response_code=200
Extracting referring expressions from utterance: 157/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach My Sister\'s Closet, ensure that you never reach Ruk Sushi & Thai, and ensure that you never reach Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=835 request_id=17e251e7ccc1822b304695cf42d298ba response_code=200
Extracting referring expressions from utterance: 158/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: King Pho, Baird & Warner, and US Post Office, should never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=2002356d3960583f16df3d485feb071d response_code=200
Extracting referring expressions from utterance: 159/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Edgebrook Coffee Ship, Associated Bank, and Central & Devon NB, should never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=629 request_id=ce418f098ae182568b276d4dbc26c3ed response_code=200
Extracting referring expressions from utterance: 160/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Creativo! Academy, My Sister\'s Closet, or Little Nest Care\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=627 request_id=189470ba9733d280bbc05e3538852e50 response_code=200
Extracting referring expressions from utterance: 161/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Domino\'s, King Pho, or Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=824595216edd75667dcb772ff31af879 response_code=200
Extracting referring expressions from utterance: 162/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but North Branch Arts, Baird & Warner, and Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=733 request_id=0a48e9f4e16f103c70f9c1e1d3ba12bf response_code=200
Extracting referring expressions from utterance: 163/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Becker Roofing Company, Ace Hardware, and Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=484 request_id=dc3990c186726b4f3ab844a2339f430d response_code=200
Extracting referring expressions from utterance: 164/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Creativo! Academy, Ace Hardware, and US Post Office, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=498 request_id=ea624fb3b17849a56783e914e8a44a7f response_code=200
Extracting referring expressions from utterance: 165/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Baird & Warner, Central & Devon NB, and Kanellos Shoe Repair, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=784 request_id=04ba813a2c799cf0642df2bdf220438d response_code=200
Extracting referring expressions from utterance: 166/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from My Sister\'s Closet, Starbucks, and Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=616 request_id=89049aeab66ec60e1af73bd93bf97049 response_code=200
Extracting referring expressions from utterance: 167/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Domino\'s, Local Goods Chicago, and Creativo! Academy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=970 request_id=fd93abd40c10b2042a1a14ae71534b7b response_code=200
Extracting referring expressions from utterance: 168/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Creativo! Academy, Starbucks, and Currency Change, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=498 request_id=a266b46621e969d6e53b91b9d7ee9fc6 response_code=200
Extracting referring expressions from utterance: 169/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Edgebrook Coffee Ship, Edward Jones, and Ace Hardware, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=568 request_id=b1529994e232d5dd9bc015886ffea959 response_code=200
Extracting referring expressions from utterance: 170/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Terry\'s Place, US Post Office, or Ace Hardware\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=538 request_id=aee603f3df7a4a8e3ea6c6f4591b6ec9 response_code=200
Extracting referring expressions from utterance: 171/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Little Nest Care, King Pho, or Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=613 request_id=364683447645cbf50937a1516f2cbe0a response_code=200
Extracting referring expressions from utterance: 172/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Edward Jones, North Branch Arts, and Starbucks, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 308
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=946 request_id=9dcb18bf092465d199194b9bab0de3fd response_code=200
Extracting referring expressions from utterance: 173/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Edgebrook Coffee Ship, Central & Devon NB, and US Post Office, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=871 request_id=bc8e1b789b03be9dfccb47e5a0047729 response_code=200
Extracting referring expressions from utterance: 174/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Central & Devon SB, Local Goods Chicago, or Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=17420532b5fb51c042f2b56215411739 response_code=200
Extracting referring expressions from utterance: 175/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Ruk Sushi & Thai, Little Nest Care, or Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=615 request_id=7ddef52d627c15123fb434628fd9cab0 response_code=200
Extracting referring expressions from utterance: 176/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Currency Change, Lee Nails, or Associated Bank, can never become true at any instant\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=384 request_id=e3b2d03fc72cf9f2fa95111bc55afed9 response_code=200
Extracting referring expressions from utterance: 177/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Kanellos Shoe Repair, Associated Bank, or US Post Office, can never become true at any instant\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=549 request_id=ec822042456f5df831c52ca9d28fd420 response_code=200
Extracting referring expressions from utterance: 178/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that Edward Jones, Associated Bank, and Becker Roofing Company, never hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=968 request_id=c911b36b0764a0d6f173fc6175b9db54 response_code=200
Extracting referring expressions from utterance: 179/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that King Pho, Domino\'s, and Ruk Sushi & Thai, never hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=4358c5e66ea63d5ab938f92b69c2c0d0 response_code=200
Extracting referring expressions from utterance: 180/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit King Pho, Associated Bank, Baird & Warner, or Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=615 request_id=e57b56c96a3e915d7fb542fe53b3ff1e response_code=200
Extracting referring expressions from utterance: 181/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit Domino\'s, Kanellos Shoe Repair, Ace Hardware, or Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1050 request_id=f78182ff06c1bdffbb4fd71410368fd0 response_code=200
Extracting referring expressions from utterance: 182/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Little Nest Care, Edgebrook Coffee Ship, Central & Devon NB, or Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1673 request_id=b074493f369f190b87bdd0a7e99696d4 response_code=200
Extracting referring expressions from utterance: 183/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Currency Change, Little Nest Care, Kanellos Shoe Repair, or King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=828 request_id=484aa29ecc0740e57160fc248d54f6eb response_code=200
Extracting referring expressions from utterance: 184/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Domino\'s, Becker Roofing Company, Little Nest Care, or Central & Devon SB, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=764 request_id=44c3faface1c1252f3bffe07f5a5bc8e response_code=200
Extracting referring expressions from utterance: 185/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Ace Hardware, Domino\'s, Kanellos Shoe Repair, or Edgebrook Coffee Ship, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=783 request_id=4cb8a4f84de92224d81cf7fd1d7ee5a4 response_code=200
Extracting referring expressions from utterance: 186/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Terry\'s Place, Kanellos Shoe Repair, Lee Nails, or Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=0e379634e20eb6ba32f71c3da0b0efe0 response_code=200
Extracting referring expressions from utterance: 187/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Ace Hardware, Becker Roofing Company, Creativo! Academy, or Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=758 request_id=1d0db7677bdbdba156eec4060c3bc95e response_code=200
Extracting referring expressions from utterance: 188/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Becker Roofing Company, King Pho, Baird & Warner, or Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=805 request_id=c69886d3eb663a28965bbf7e897b86f8 response_code=200
Extracting referring expressions from utterance: 189/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Edgebrook Coffee Ship, Edward Jones, Little Nest Care, or Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=674 request_id=2d9199cf902ce8fee6a9607c4f8475c8 response_code=200
Extracting referring expressions from utterance: 190/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Ruk Sushi & Thai, Starbucks, Terry\'s Place, and Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=760 request_id=aebdf7655fdba1b895795ff3599723d0 response_code=200
Extracting referring expressions from utterance: 191/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Baird & Warner, Becker Roofing Company, Ruk Sushi & Thai, and North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=663 request_id=fe5e3781b1b30aeb490af10b8e731a06 response_code=200
Extracting referring expressions from utterance: 192/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Central & Devon SB, Central & Devon NB, North Branch Arts, and US Post Office, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=882 request_id=2d5afb42f93af657c140b69be52ed6ac response_code=200
Extracting referring expressions from utterance: 193/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Domino\'s, My Sister\'s Closet, Terry\'s Place, and Kanellos Shoe Repair, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1059 request_id=9d9168e957a6e7e7f0e76fa6f571c7ca response_code=200
Extracting referring expressions from utterance: 194/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit any locations among King Pho, Terry\'s Place, Edward Jones, Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=743 request_id=1bda9f0c5ec97658bb12bc278b59ff9a response_code=200
Extracting referring expressions from utterance: 195/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit any locations among Lee Nails, Ruk Sushi & Thai, Ace Hardware, My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=908 request_id=0c9547a12f25a8185a0f8e2346b58570 response_code=200
Extracting referring expressions from utterance: 196/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure to not reach any of Edgebrook Coffee Ship, Currency Change, Domino\'s, and Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=682 request_id=177053931baed7c5cfed4af45981f4aa response_code=200
Extracting referring expressions from utterance: 197/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure to not reach any of Little Nest Care, Terry\'s Place, US Post Office, and North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=688 request_id=f8bb03f3cd08af14e58e55dc06ca1e35 response_code=200
Extracting referring expressions from utterance: 198/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Central & Devon NB, Ruk Sushi & Thai, Currency Change, and King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=694 request_id=b087aaf6707561c13590fe90da83d8be response_code=200
Extracting referring expressions from utterance: 199/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Baird & Warner, Ace Hardware, Local Goods Chicago, and Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=512 request_id=49e0438bda4460a93cf084779c3a0ee1 response_code=200
Extracting referring expressions from utterance: 200/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Little Nest Care, Creativo! Academy, Edward Jones, and My Sister\'s Closet, must never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=780 request_id=9e437fa047b1e5d8c4cc991cbadbbe5c response_code=200
Extracting referring expressions from utterance: 201/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Edgebrook Coffee Ship, King Pho, Kanellos Shoe Repair, and North Branch Arts, must never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1042 request_id=7571a098078185e288c8da6a97f766df response_code=200
Extracting referring expressions from utterance: 202/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Starbucks, never go to Local Goods Chicago, never go to Edward Jones, and never go to King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=524 request_id=43ba3a3047249b29a01e624dc02c0ae3 response_code=200
Extracting referring expressions from utterance: 203/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to My Sister\'s Closet, never go to Edgebrook Coffee Ship, never go to Creativo! Academy, and never go to Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1039 request_id=1c46b43759b0d82383d548418d9e8097 response_code=200
Extracting referring expressions from utterance: 204/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Central & Devon NB, US Post Office, Central & Devon SB, or Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=632 request_id=e2f527420ce7a80443a1af77c756461a response_code=200
Extracting referring expressions from utterance: 205/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to US Post Office, Local Goods Chicago, Central & Devon NB, or Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=649 request_id=779127c7b25abd8dac8a00f7547c0e3f response_code=200
Extracting referring expressions from utterance: 206/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Associated Bank, Edward Jones, Becker Roofing Company, or Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=817 request_id=697ee784ede58d58deb142e51bce582a response_code=200
Extracting referring expressions from utterance: 207/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Central & Devon SB, North Branch Arts, Creativo! Academy, or King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=555 request_id=6c8477a394b98d9bd65a540cd9f64d81 response_code=200
Extracting referring expressions from utterance: 208/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Local Goods Chicago, Currency Change, Edgebrook Coffee Ship, and Domino\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=896 request_id=64da49e7a3ca44d47ee009c9350e3c25 response_code=200
Extracting referring expressions from utterance: 209/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Kanellos Shoe Repair, US Post Office, Terry\'s Place, and My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=696 request_id=70426c3e67573e10ecee646f64e7c997 response_code=200
Extracting referring expressions from utterance: 210/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: North Branch Arts, Terry\'s Place, Baird & Warner, and Associated Bank, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=c49d2182cab9ccf69dde78649e4f1a81 response_code=200
Extracting referring expressions from utterance: 211/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Edgebrook Coffee Ship, Edward Jones, My Sister\'s Closet, and Little Nest Care, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1837 request_id=88397717c6911fdc36db1b17cbd4f588 response_code=200
Extracting referring expressions from utterance: 212/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Edgebrook Coffee Ship, Currency Change, Ace Hardware, and Little Nest Care\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=efa5a924b2ecd818cd075f0f85e128c6 response_code=200
Extracting referring expressions from utterance: 213/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Domino\'s, Currency Change, North Branch Arts, and Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=908 request_id=d530d53c8a0021fd2bc385c54c5b0dc2 response_code=200
Extracting referring expressions from utterance: 214/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Ruk Sushi & Thai, Edgebrook Coffee Ship, Baird & Warner, and North Branch Arts, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=586 request_id=9cd8349eeb800c9de8991624eb8c78af response_code=200
Extracting referring expressions from utterance: 215/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Kanellos Shoe Repair, Edward Jones, North Branch Arts, and Currency Change, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=930 request_id=31bb3f4662b6ab868667ec631caf6e9e response_code=200
Extracting referring expressions from utterance: 216/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Edgebrook Coffee Ship, Edward Jones, Local Goods Chicago, or Domino\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=594 request_id=9a05ae83509e893e209b01338a35d378 response_code=200
Extracting referring expressions from utterance: 217/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Becker Roofing Company, King Pho, Associated Bank, or Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=829 request_id=574fc72f8c27a3d4f0d807aaf3928e94 response_code=200
Extracting referring expressions from utterance: 218/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Terry\'s Place, Edward Jones, Associated Bank, and Baird & Warner, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=468 request_id=c7d348eca88db06d6a8b3076d27bc638 response_code=200
Extracting referring expressions from utterance: 219/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Local Goods Chicago, Lee Nails, Terry\'s Place, and Becker Roofing Company, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=789 request_id=8b5f20bcd755686d99bd143b3c7c9418 response_code=200
Extracting referring expressions from utterance: 220/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Associated Bank, Currency Change, US Post Office, or Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=99110141f354ba9b5f010a0270875e9a response_code=200
Extracting referring expressions from utterance: 221/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Central & Devon NB, King Pho, Edgebrook Coffee Ship, or US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1034 request_id=4a2d764b0853d7ea99d05611f69106fa response_code=200
Extracting referring expressions from utterance: 222/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Ruk Sushi & Thai, Edward Jones, Local Goods Chicago, and North Branch Arts, must never be allowed to be true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1181 request_id=622a52ea79c65f54f80422ce25c0cc9c response_code=200
Extracting referring expressions from utterance: 223/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Domino\'s, Edgebrook Coffee Ship, Local Goods Chicago, and Associated Bank, must never be allowed to be true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=844 request_id=307a6d9a1953d3a2bfcf369c8dfd6839 response_code=200
Extracting referring expressions from utterance: 224/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go through any of My Sister\'s Closet, Central & Devon NB, Kanellos Shoe Repair, or North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1065 request_id=aa50aab8134b0b723bd8bb9625c3ddd9 response_code=200
Extracting referring expressions from utterance: 225/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go through any of Currency Change, Local Goods Chicago, Lee Nails, or Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1050 request_id=789efd0cc148fb258d726351bd84e52f response_code=200
Extracting referring expressions from utterance: 226/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit Edward Jones, Domino\'s, Local Goods Chicago, North Branch Arts, or My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1075 request_id=c1ee697c920a447482183b48b51ca531 response_code=200
Extracting referring expressions from utterance: 227/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit Central & Devon NB, Edgebrook Coffee Ship, King Pho, Terry\'s Place, or Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=928 request_id=fb3801894903a3da4b4b121b867e0b75 response_code=200
Extracting referring expressions from utterance: 228/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Local Goods Chicago, Domino\'s, Central & Devon SB, Edgebrook Coffee Ship, or Associated Bank\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 358
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=734 request_id=c44881e0b2ccdb5804f80ee9f69c6d34 response_code=200
Extracting referring expressions from utterance: 229/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to King Pho, Edward Jones, Creativo! Academy, Associated Bank, or US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=634 request_id=f81231d428d8257a412cd3223fd18487 response_code=200
Extracting referring expressions from utterance: 230/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to US Post Office, Central & Devon NB, Edgebrook Coffee Ship, My Sister\'s Closet, or North Branch Arts, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 365
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1210 request_id=bac0a30a58376eb4e5df719a2b0587cd response_code=200
Extracting referring expressions from utterance: 231/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Central & Devon SB, Ruk Sushi & Thai, King Pho, Little Nest Care, or Central & Devon NB, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1377 request_id=fc5797c4f3d64926688dee752a082689 response_code=200
Extracting referring expressions from utterance: 232/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Associated Bank, King Pho, Domino\'s, Ruk Sushi & Thai, or US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=893 request_id=079e27409ea705f778612136470e7fdb response_code=200
Extracting referring expressions from utterance: 233/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit My Sister\'s Closet, Associated Bank, Edgebrook Coffee Ship, Ace Hardware, or Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 352
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=971 request_id=e9ed56dcab753cef6e7a28c992d062b5 response_code=200
Extracting referring expressions from utterance: 234/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Edward Jones, King Pho, Currency Change, Domino\'s, and Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=621 request_id=bd8099c2762c89339f2d80089c031cbe response_code=200
Extracting referring expressions from utterance: 235/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to US Post Office, Little Nest Care, My Sister\'s Closet, Ruk Sushi & Thai, and Baird & Warner\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1103 request_id=dc71a35ca4b08c88d8ca77b7c6152139 response_code=200
Extracting referring expressions from utterance: 236/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Kanellos Shoe Repair, Domino\'s, Lee Nails, My Sister\'s Closet, and Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1094 request_id=350d11ec394342554ecc47498f2f3653 response_code=200
Extracting referring expressions from utterance: 237/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Lee Nails, Associated Bank, Local Goods Chicago, Ruk Sushi & Thai, and My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=918 request_id=e12368d5d255779a352684c60cfd114c response_code=200
Extracting referring expressions from utterance: 238/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid US Post Office, Starbucks, Central & Devon SB, Kanellos Shoe Repair, and Terry\'s Place, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=760 request_id=8d18abc75c1a7958cff55687c680c913 response_code=200
Extracting referring expressions from utterance: 239/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Currency Change, Terry\'s Place, Starbucks, Baird & Warner, and Lee Nails, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=925 request_id=e2220e448b03f7e093fb695df6d028d0 response_code=200
Extracting referring expressions from utterance: 240/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Baird & Warner, never go to Domino\'s, never go to Creativo! Academy, never reach Local Goods Chicago, and never reach Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=892 request_id=3f81f8d2e7e7e1ad9e80d2ea6d48621b response_code=200
Extracting referring expressions from utterance: 241/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Lee Nails, never go to Ace Hardware, never go to Little Nest Care, never reach Baird & Warner, and never reach Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=783 request_id=39b44d95a9707348baa167260977c441 response_code=200
Extracting referring expressions from utterance: 242/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never reach the following locations Ace Hardware, Little Nest Care, My Sister\'s Closet, Domino\'s, and US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=650 request_id=c2d85b0f4d67a71f4b44b5ac22adba16 response_code=200
Extracting referring expressions from utterance: 243/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never reach the following locations Central & Devon SB, Currency Change, Domino\'s, Starbucks, and Associated Bank\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=599 request_id=5d361903b91925493661a61ca4531258 response_code=200
Extracting referring expressions from utterance: 244/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that North Branch Arts, Edgebrook Coffee Ship, Lee Nails, Ruk Sushi & Thai, and Starbucks, are never visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1084 request_id=a2fdea393e40118a73bfdbe56d7efe54 response_code=200
Extracting referring expressions from utterance: 245/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that Local Goods Chicago, Currency Change, Little Nest Care, Starbucks, and US Post Office, are never visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=921 request_id=96ed58480ff86561987ba04a0ce9305e response_code=200
Extracting referring expressions from utterance: 246/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Little Nest Care, Central & Devon SB, Starbucks, Currency Change, and Domino\'s, should never be reached\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=773 request_id=11358907c68f57c0e054bcc026386a06 response_code=200
Extracting referring expressions from utterance: 247/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Ace Hardware, Associated Bank, Kanellos Shoe Repair, Central & Devon NB, and My Sister\'s Closet, should never be reached\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1062 request_id=693542c367a0c0ba7bcc92834c25d725 response_code=200
Extracting referring expressions from utterance: 248/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Edward Jones, Central & Devon NB, Currency Change, Creativo! Academy, or Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1192 request_id=8459a01fbd49296fb85985ec00ec03ad response_code=200
Extracting referring expressions from utterance: 249/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Terry\'s Place, Central & Devon SB, Ace Hardware, Currency Change, or Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=719 request_id=73c2ac096c51914a23ed7092c52f2e64 response_code=200
Extracting referring expressions from utterance: 250/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Baird & Warner, My Sister\'s Closet, Currency Change, Associated Bank, or Domino\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=741 request_id=00a0089f7b38265da2cf370ddde42611 response_code=200
Extracting referring expressions from utterance: 251/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Little Nest Care, Ruk Sushi & Thai, Local Goods Chicago, Creativo! Academy, or Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=907 request_id=67bab70554a4a439a154323e67c8d0f1 response_code=200
Extracting referring expressions from utterance: 252/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Starbucks, My Sister\'s Closet, Creativo! Academy, Central & Devon NB, and Associated Bank\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=843 request_id=c6c4ba2fe386431d6832e0ec6aba0621 response_code=200
Extracting referring expressions from utterance: 253/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Terry\'s Place, Becker Roofing Company, Ruk Sushi & Thai, Associated Bank, and Little Nest Care\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=822 request_id=8cdcd325400ac7d3d0574e367ebac435 response_code=200
Extracting referring expressions from utterance: 254/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Terry\'s Place, Edgebrook Coffee Ship, My Sister\'s Closet, US Post Office, and Ruk Sushi & Thai, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1343 request_id=b07d16154ec8ea27d8ac1b3a956cd010 response_code=200
Extracting referring expressions from utterance: 255/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Baird & Warner, Ace Hardware, Central & Devon SB, US Post Office, and North Branch Arts, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 352
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=597 request_id=26175e9978639d53c711a8559bb731b3 response_code=200
Extracting referring expressions from utterance: 256/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Baird & Warner, My Sister\'s Closet, Edward Jones, Ruk Sushi & Thai, and Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1073 request_id=84481e2da4883dbd6ed8c2245ee02535 response_code=200
Extracting referring expressions from utterance: 257/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from North Branch Arts, Becker Roofing Company, Edward Jones, My Sister\'s Closet, and Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=807 request_id=e5dc37612c2c3c86b3c7c05757fcc73b response_code=200
Extracting referring expressions from utterance: 258/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Central & Devon NB, Currency Change, Local Goods Chicago, Associated Bank, and Lee Nails, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=720 request_id=196dd312260ba00ab8c1a0f9c8f37f16 response_code=200
Extracting referring expressions from utterance: 259/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Kanellos Shoe Repair, Becker Roofing Company, Ace Hardware, Terry\'s Place, and Lee Nails, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=822 request_id=8d424c20795b0c64edf18622eefc326a response_code=200
Extracting referring expressions from utterance: 260/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Little Nest Care, Lee Nails, Baird & Warner, Associated Bank, or North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1241 request_id=63530fad0b60aef25147fbfa91e923cb response_code=200
Extracting referring expressions from utterance: 261/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Little Nest Care, Becker Roofing Company, Lee Nails, Edgebrook Coffee Ship, or Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=882 request_id=92ef9f689373f679ea4c8d94ae1b5b0e response_code=200
Extracting referring expressions from utterance: 262/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Edgebrook Coffee Ship, US Post Office, Central & Devon NB, Currency Change, and Starbucks, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=830 request_id=9565a417d7f986e5405a2193ed37339a response_code=200
Extracting referring expressions from utterance: 263/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Associated Bank, Edward Jones, North Branch Arts, Domino\'s, and Lee Nails, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=566 request_id=c77d458bf3b0e2437ad686775ba5fa0e response_code=200
Extracting referring expressions from utterance: 264/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to My Sister\'s Closet, Kanellos Shoe Repair, Creativo! Academy, Domino\'s, or Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1319 request_id=d991b3ce9ff870aca7329560f1ba5542 response_code=200
Extracting referring expressions from utterance: 265/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Domino\'s, North Branch Arts, Creativo! Academy, Ruk Sushi & Thai, or Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1013 request_id=edc7b043ee3a0c5e6b4724b1e05a65aa response_code=200
Extracting referring expressions from utterance: 266/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that none among US Post Office, My Sister\'s Closet, Starbucks, North Branch Arts, and Creativo! Academy, are ever visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 352
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=771 request_id=f038f80dd63c91147ea1889c206d8b11 response_code=200
Extracting referring expressions from utterance: 267/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that none among Creativo! Academy, Currency Change, Lee Nails, Edward Jones, and Domino\'s, are ever visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=552 request_id=26e64177be09b77e3343fd568ab634c8 response_code=200
Extracting referring expressions from utterance: 268/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Lee Nails, Central & Devon NB, Terry\'s Place, Domino\'s, and Starbucks, must never be allowed to hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=576 request_id=ee6e9848eecc6f79d6d568896e2ce06d response_code=200
Extracting referring expressions from utterance: 269/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Central & Devon SB, US Post Office, Starbucks, Kanellos Shoe Repair, and My Sister\'s Closet, must never be allowed to hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=880 request_id=acf688c76ef182c75ca3de0bfec9c92b response_code=200
Extracting referring expressions from utterance: 270/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Domino\'s, until you see Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=654 request_id=34211f531c6572b0d86b9e17f831f312 response_code=200
Extracting referring expressions from utterance: 271/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to US Post Office, until you see Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=523 request_id=0fe434d1ff48edf6b293c6e0c142ec9f response_code=200
Extracting referring expressions from utterance: 272/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid visiting Baird & Warner, till you observe Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=281 request_id=69d8de1a86a7cd223ba8b5a756d49762 response_code=200
Extracting referring expressions from utterance: 273/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid visiting Associated Bank, till you observe Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=81e90f0236ab91669122d4bb42188298 response_code=200
Extracting referring expressions from utterance: 274/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Central & Devon NB, until Baird & Warner, has occured\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=22d23460f4d75901010c165cba803618 response_code=200
Extracting referring expressions from utterance: 275/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Ruk Sushi & Thai, until Currency Change, has occured\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=4cb3bc56f6f92e9364c3644be5cfb50e response_code=200
Extracting referring expressions from utterance: 276/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you observe Becker Roofing Company, only then are you allowed to go to Little Nest Care\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=466 request_id=e9b8b0132c6495ba990ea385b2927538 response_code=200
Extracting referring expressions from utterance: 277/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you observe Creativo! Academy, only then are you allowed to go to Little Nest Care\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=681 request_id=efa313a668b9a29b7720146ae48d2550 response_code=200
Extracting referring expressions from utterance: 278/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Associated Bank, only after seeing Creativo! Academy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=418 request_id=2480f61eb8df4368f006566665d67bec response_code=200
Extracting referring expressions from utterance: 279/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Creativo! Academy, only after seeing Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=420 request_id=e4334fd8d3e90070274e47f29e26bd25 response_code=200
Extracting referring expressions from utterance: 280/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Currency Change, until you go to Edgebrook Coffee Ship\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=545 request_id=bec696673bb9820c9399202a662977a0 response_code=200
Extracting referring expressions from utterance: 281/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Ruk Sushi & Thai, until you go to North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=313 request_id=efc7b19aa70bae13d5b7e6dd12ca0c27 response_code=200
Extracting referring expressions from utterance: 282/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Terry\'s Place, until you reach Domino\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=314 request_id=1b57df4c66a1b394f05a6329ddede578 response_code=200
Extracting referring expressions from utterance: 283/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Edward Jones, until you reach Baird & Warner\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=284 request_id=f16c293f4c0afee6a9237b16e8be9433 response_code=200
Extracting referring expressions from utterance: 284/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Local Goods Chicago, until you move to Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=228 request_id=45ab53da5241ace87010cebb9f361d50 response_code=200
Extracting referring expressions from utterance: 285/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Lee Nails, until you move to Baird & Warner\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1124 request_id=230a4f865d791945679b3606b5354e22 response_code=200
Extracting referring expressions from utterance: 286/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not move to Terry\'s Place, until you arrive at Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=dc2f5e7368c1d10b56f0484248d20acd response_code=200
Extracting referring expressions from utterance: 287/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not move to My Sister\'s Closet, until you arrive at Edgebrook Coffee Ship\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=519 request_id=bfe8385ca0fe888834c8c2c026675409 response_code=200
Extracting referring expressions from utterance: 288/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to King Pho, until you have gone to Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1149 request_id=6b962fd48edc555a568c98ef3201ef08 response_code=200
Extracting referring expressions from utterance: 289/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to My Sister\'s Closet, until you have gone to Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=393 request_id=419615e0c03442352e56e0ed62dc1d3b response_code=200
Extracting referring expressions from utterance: 290/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Associated Bank, at all costs until you reach Becker Roofing Company, first\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=15529bae4ec7a059e50889569e40c19a response_code=200
Extracting referring expressions from utterance: 291/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Central & Devon NB, at all costs until you reach Lee Nails, first\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=c617a7f43565d0b0ad250714dbd0dea9 response_code=200
Extracting referring expressions from utterance: 292/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: until you have gone to Central & Devon NB, you can not go to Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=04acbe155090f4b9c251d88bf0316d0c response_code=200
Extracting referring expressions from utterance: 293/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: until you have gone to Kanellos Shoe Repair, you can not go to King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=572 request_id=b68102cee2029a199de24220d04ed478 response_code=200
Extracting referring expressions from utterance: 294/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Baird & Warner, until you go to Becker Roofing Company\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=565 request_id=79ac4fe689ad5115141021723fb3b393 response_code=200
Extracting referring expressions from utterance: 295/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Creativo! Academy, until you go to Ace Hardware\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=470 request_id=44eccc458f58f3d5632b67188fa3ff57 response_code=200
Extracting referring expressions from utterance: 296/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Starbucks, until you see Ruk Sushi & Thai\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=526 request_id=6d00fb31dc2516a43d6814efce91d615 response_code=200
Extracting referring expressions from utterance: 297/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Baird & Warner, until you see Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=796 request_id=e8272098d254dda02748cdf431e5277e response_code=200
Extracting referring expressions from utterance: 298/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Currency Change, before North Branch Arts, happens\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=493 request_id=7dc286ccf0169269525b9f3eb6eb0021 response_code=200
Extracting referring expressions from utterance: 299/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Baird & Warner, before Kanellos Shoe Repair, happens\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=a884243d15283fb42d1dfa41b9b3ca8d response_code=200
Extracting referring expressions from utterance: 300/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can only go to Kanellos Shoe Repair, after Ruk Sushi & Thai, is seen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=591 request_id=81802d58310a328bfb42f446055eddce response_code=200
Extracting referring expressions from utterance: 301/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can only go to Kanellos Shoe Repair, after Becker Roofing Company, is seen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=1760e71d3164bf5d6a2d04c75e7ba3ec response_code=200
Extracting referring expressions from utterance: 302/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Central & Devon NB, must be observed before visiting My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=543 request_id=22256c3a4e878a855642e3467842d9c7 response_code=200
Extracting referring expressions from utterance: 303/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: US Post Office, must be observed before visiting Baird & Warner\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=275 request_id=6a2c69d66dee74f4a6a33a707f71aca8 response_code=200
Extracting referring expressions from utterance: 304/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Ace Hardware, but only after you see Associated Bank\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=260 request_id=32e5f92f451b1d95cff3b046aabd7d15 response_code=200
Extracting referring expressions from utterance: 305/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Currency Change, but only after you see Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=869f162a60ae61e3ce4cdf104da77438 response_code=200
Extracting referring expressions from utterance: 306/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Associated Bank, has to be observed prior to any visit to Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=403 request_id=a61b3acbc7021260c7b266dd16935d92 response_code=200
Extracting referring expressions from utterance: 307/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Little Nest Care, has to be observed prior to any visit to US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=413 request_id=bf88ea737b3781bd9ffd72b5b6d5723b response_code=200
Extracting referring expressions from utterance: 308/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you see My Sister\'s Closet, before going to Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=986 request_id=73e8a2d9b23099343f31b557454f38a5 response_code=200
Extracting referring expressions from utterance: 309/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you see Associated Bank, before going to My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=411 request_id=79e5f1b539a7420ff7c499120699ce93 response_code=200
Extracting referring expressions from utterance: 310/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not make any visit to Becker Roofing Company, when Edward Jones, remains unseen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=310 request_id=353f269f848bf0769c2949e894c04e81 response_code=200
Extracting referring expressions from utterance: 311/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not make any visit to Creativo! Academy, when US Post Office, remains unseen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=391 request_id=de43c203b2c854ee0257a5a59c136aab response_code=200
Extracting referring expressions from utterance: 312/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Central & Devon NB, till you observe Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=435 request_id=ada76cd60b0055015185dd4efee12adb response_code=200
Extracting referring expressions from utterance: 313/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Ruk Sushi & Thai, till you observe Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=444 request_id=e99633ac10adf76baab5312c887f61ed response_code=200
Extracting referring expressions from utterance: 314/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing King Pho, unlocks Edgebrook Coffee Ship\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=cbbcc2f3798db23f9fc7c461bca01e04 response_code=200
Extracting referring expressions from utterance: 315/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing My Sister\'s Closet, unlocks Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=898 request_id=a659e068d548e54fb8235196d41313af response_code=200
Extracting referring expressions from utterance: 316/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Edward Jones, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=207 request_id=3aa7ede786a8e672f4029241b7343ede response_code=200
Extracting referring expressions from utterance: 317/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Central & Devon NB, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=163 request_id=2bd8376ff6d53278eb6dec8b5c9649d3 response_code=200
Extracting referring expressions from utterance: 318/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Becker Roofing Company, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=f694702ae0385dc3fb2fdc5af3ab4091 response_code=200
Extracting referring expressions from utterance: 319/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon NB, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=241 request_id=cbd68812820c68dc37b19656c331ba7c response_code=200
Extracting referring expressions from utterance: 320/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Starbucks, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=7bffde8f01820edfed2fc5c742b8a55a response_code=200
Extracting referring expressions from utterance: 321/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Creativo! Academy, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=263 request_id=1ea5d8929ee65e13bf96853a5af25a9e response_code=200
Extracting referring expressions from utterance: 322/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Central & Devon SB, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=283 request_id=a7c72df83e623c740dcf75d1a1f5440f response_code=200
Extracting referring expressions from utterance: 323/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Becker Roofing Company, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=181 request_id=39bb3d002b19087cfa7f454b01a4c94a response_code=200
Extracting referring expressions from utterance: 324/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Central & Devon NB, at least five times or more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=303 request_id=3ff5d1945fa29b1d92a96faa1db9fde6 response_code=200
Extracting referring expressions from utterance: 325/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Central & Devon NB, at least five times or more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=f4aca1e2fb27390573eb8bb4eecb249b response_code=200
Extracting referring expressions from utterance: 326/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit Kanellos Shoe Repair, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=382 request_id=d58a9ea5327aef16b5e46d44aaeaf784 response_code=200
Extracting referring expressions from utterance: 327/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit Domino\'s, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=172 request_id=d43f8bd5dd60d76d1ba1ee5cff7c1f61 response_code=200
Extracting referring expressions from utterance: 328/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Becker Roofing Company, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=230 request_id=91c2348fa266622b88ad0c47a79d2a44 response_code=200
Extracting referring expressions from utterance: 329/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Domino\'s, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=175 request_id=1dc754ea890f03f0d5eff64ab5c0a0f5 response_code=200
Extracting referring expressions from utterance: 330/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Creativo! Academy, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=401 request_id=718edbcc951f5c32aafbfa1af1b71053 response_code=200
Extracting referring expressions from utterance: 331/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Domino\'s, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=297 request_id=07a97663b83faf8679305faf7a386e58 response_code=200
Extracting referring expressions from utterance: 332/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: your task is to go to Currency Change, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=566 request_id=7d8d2ebeb2a8da638da17c4728878d4f response_code=200
Extracting referring expressions from utterance: 333/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: your task is to go to Baird & Warner, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=244 request_id=7257c8c313420fbf9aee90826dba03ae response_code=200
Extracting referring expressions from utterance: 334/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Associated Bank, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=cdfd8e2ecd99df43e0f32d5f97c27711 response_code=200
Extracting referring expressions from utterance: 335/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Domino\'s, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=143 request_id=5543172ae5b4392fe7616f3064ac4c55 response_code=200
Extracting referring expressions from utterance: 336/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you visit Kanellos Shoe Repair, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=8f182b3ce1765fa443c81d6e3f12f508 response_code=200
Extracting referring expressions from utterance: 337/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you visit Terry\'s Place, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=598 request_id=a75943d06ee0f51824186dcb16be2c04 response_code=200
Extracting referring expressions from utterance: 338/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to reach Becker Roofing Company, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=286 request_id=b0bbb9a879e5f2119b9b025599681318 response_code=200
Extracting referring expressions from utterance: 339/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to reach Starbucks, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=545 request_id=ff26860c494567d2b0f8317f47f66417 response_code=200
Extracting referring expressions from utterance: 340/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Central & Devon SB, equal or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=214 request_id=c985eae88198287cb03c5ff0ed087400 response_code=200
Extracting referring expressions from utterance: 341/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Central & Devon NB, equal or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=3bf5d6aa6b59c98e019528a8704743f8 response_code=200
Extracting referring expressions from utterance: 342/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to Baird & Warner, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=723 request_id=014d4803b058a894992b4f83fcff00fd response_code=200
Extracting referring expressions from utterance: 343/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to Lee Nails, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=de8dc68e4875bff3da812a0b36ef6aff response_code=200
Extracting referring expressions from utterance: 344/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Associated Bank, has to be visited at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=256 request_id=9fce95c4cf9e7bb4c57656818bf9cc47 response_code=200
Extracting referring expressions from utterance: 345/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Ruk Sushi & Thai, has to be visited at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=467 request_id=5b9acd7eb5526c4500ee93be1668ce5d response_code=200
Extracting referring expressions from utterance: 346/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit and then leave North Branch Arts, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=207 request_id=3cb2d20fb314fde4055eec75a168c8b6 response_code=200
Extracting referring expressions from utterance: 347/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit and then leave Starbucks, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=2b61d6977e7ff42343770e67b5bb6070 response_code=200
Extracting referring expressions from utterance: 348/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to US Post Office, then leave US Post Office, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=221 request_id=d12543625c3c2921c7a01b8a7d36a81a response_code=200
Extracting referring expressions from utterance: 349/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Little Nest Care, then leave Little Nest Care, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=1cb4fee27a60a2cc9019bcdd0e3975b1 response_code=200
Extracting referring expressions from utterance: 350/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must pass through Central & Devon SB, on at least five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=177 request_id=c35eb47ece51f83bea066554eee662ec response_code=200
Extracting referring expressions from utterance: 351/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must pass through Ruk Sushi & Thai, on at least five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=395 request_id=c0154b043efe4391a10d54226a8781d9 response_code=200
Extracting referring expressions from utterance: 352/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the minimum number of times you must visit Becker Roofing Company, is five\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=7b5afd7f7b50d6e831fae72066acd47c response_code=200
Extracting referring expressions from utterance: 353/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the minimum number of times you must visit Becker Roofing Company, is five\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=204 request_id=1881cef6fe8421181af8754bae46f9ef response_code=200
Extracting referring expressions from utterance: 354/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach North Branch Arts, then leave North Branch Arts, and repeat this at least four more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=7ddf53f650e9e7b2215a2f589c9c48f4 response_code=200
Extracting referring expressions from utterance: 355/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach Ruk Sushi & Thai, then leave Ruk Sushi & Thai, and repeat this at least four more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=241 request_id=7d3c3a3b7778695eb032fb641d9d293f response_code=200
Extracting referring expressions from utterance: 356/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not complete the task without visiting King Pho, on five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=162 request_id=c9d2b811b6d7a88b7787177f07dd4aa8 response_code=200
Extracting referring expressions from utterance: 357/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not complete the task without visiting Ace Hardware, on five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=f0cfdfe181d639c4ebbee7379de11167 response_code=200
Extracting referring expressions from utterance: 358/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Central & Devon SB, any fewer than five separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=680 request_id=b19a9f0be1230e9bb9ea18ccfdaf8dc3 response_code=200
Extracting referring expressions from utterance: 359/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit US Post Office, any fewer than five separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=d847999cc721aa8a4961edc0b2463936 response_code=200
Extracting referring expressions from utterance: 360/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you have at least five separate times where you reach Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=206 request_id=3b78156369bc1e1ebbb8e26939671063 response_code=200
Extracting referring expressions from utterance: 361/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you have at least five separate times where you reach Baird & Warner\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=235 request_id=31631ca4e73d14de79acdca2d7c8450f response_code=200
Extracting referring expressions from utterance: 362/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Baird & Warner, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=40429e31175190c9782eeebc9f917f7d response_code=200
Extracting referring expressions from utterance: 363/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Starbucks, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=190 request_id=20058672229544efd48f24553d09fa98 response_code=200
Extracting referring expressions from utterance: 364/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon NB, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=82a4d8249e47c9aedb2586392e032aa8 response_code=200
Extracting referring expressions from utterance: 365/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central & Devon NB, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=568 request_id=a96393578aaf9f9d59fa78bd114cc760 response_code=200
Extracting referring expressions from utterance: 366/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Edward Jones, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=192 request_id=7197384bb61367fd3a80266e25236062 response_code=200
Extracting referring expressions from utterance: 367/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Central & Devon NB, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=b817eb78beb1d12d8629f4ad946652a7 response_code=200
Extracting referring expressions from utterance: 368/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Baird & Warner, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=237 request_id=1198df77a41ff985be93faaff1f5bafc response_code=200
Extracting referring expressions from utterance: 369/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Central & Devon NB, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=60a68e4a716a9528804bcbe0a5b2e5f7 response_code=200
Extracting referring expressions from utterance: 370/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must reach Edward Jones, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=325 request_id=e3c29a858f4cab9372c4bf04a1466508 response_code=200
Extracting referring expressions from utterance: 371/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must reach North Branch Arts, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=221 request_id=fece7fbce91fde1d988ff79c31aa433f response_code=200
Extracting referring expressions from utterance: 372/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: navigate to Becker Roofing Company, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=572a4d7d515acf17100ea120350e35b3 response_code=200
Extracting referring expressions from utterance: 373/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: navigate to Kanellos Shoe Repair, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=5a9c18fcc0615ae862c7f20c5304a567 response_code=200
Extracting referring expressions from utterance: 374/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit North Branch Arts, exactly three times no more no less\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=451 request_id=eaf25005188f6d5d103f437ca3f96ba8 response_code=200
Extracting referring expressions from utterance: 375/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Kanellos Shoe Repair, exactly three times no more no less\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=465 request_id=e1ea997df3f1907142762d4572becfcd response_code=200
Extracting referring expressions from utterance: 376/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to US Post Office, and you can not go there more or less than three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=356 request_id=b4fdad97696e0f17170943e0331b9e3c response_code=200
Extracting referring expressions from utterance: 377/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to My Sister\'s Closet, and you can not go there more or less than three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=452 request_id=732d6eddaf9c3f83eb8db71493198d68 response_code=200
Extracting referring expressions from utterance: 378/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to King Pho, more or less than three times is prohibited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=59f104e1790c947f54e913dba0f7249f response_code=200
Extracting referring expressions from utterance: 379/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Starbucks, more or less than three times is prohibited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=311 request_id=51c0f42ade89fbc19cf216fc5397b563 response_code=200
Extracting referring expressions from utterance: 380/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Edward Jones, three times and do not visit it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=179 request_id=250c6d3a38d1c5e0b8164b31ff8a0b5d response_code=200
Extracting referring expressions from utterance: 381/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Domino\'s, three times and do not visit it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=204 request_id=840d9028887651d79c76d79a0310828d response_code=200
Extracting referring expressions from utterance: 382/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Edward Jones, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=232 request_id=e1d70f966bdedb305fd3da6e3ed30ce2 response_code=200
Extracting referring expressions from utterance: 383/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Central & Devon NB, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=253 request_id=dfbb21597e86939c98815b69cdb505c6 response_code=200
Extracting referring expressions from utterance: 384/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit King Pho, three times and never revisit it again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=fa805f7ccec6353ec78b919480e65169 response_code=200
Extracting referring expressions from utterance: 385/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit My Sister\'s Closet, three times and never revisit it again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=57926c699e17e5b62c4cdde7235e78b3 response_code=200
Extracting referring expressions from utterance: 386/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must go to Lee Nails, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=330 request_id=59b96afa7f1ec8328b32eb9ef14ae832 response_code=200
Extracting referring expressions from utterance: 387/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must go to Local Goods Chicago, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=223 request_id=8cbc355a678f556a00fbc935ac0ec095 response_code=200
Extracting referring expressions from utterance: 388/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Associated Bank, three times and then stop visiting it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=543 request_id=d227b642fac37062748108bc7ec3e064 response_code=200
Extracting referring expressions from utterance: 389/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Terry\'s Place, three times and then stop visiting it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=179 request_id=9a2b27abb9746b8aa89941a9b4cf08e6 response_code=200
Extracting referring expressions from utterance: 390/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are required to visit Lee Nails, on exactly three separate instances\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=1e146cf3f1358f11ad5247f907e7312b response_code=200
Extracting referring expressions from utterance: 391/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are required to visit Kanellos Shoe Repair, on exactly three separate instances\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=433 request_id=16c810620de79f44418cb4657ae83b40 response_code=200
Extracting referring expressions from utterance: 392/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the required number of separate visits to Terry\'s Place, is exactly three\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=09f45cf455ad3cf431edcb5caa0415e6 response_code=200
Extracting referring expressions from utterance: 393/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the required number of separate visits to Edgebrook Coffee Ship, is exactly three\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=9a8144799162f84308c169d1ceea3aec response_code=200
Extracting referring expressions from utterance: 394/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit King Pho, exactly three separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=273 request_id=28d61fd8e5f2359794b28414ab7e4d3a response_code=200
Extracting referring expressions from utterance: 395/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit North Branch Arts, exactly three separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=252 request_id=d19dfca609dd824d2a72274816363275 response_code=200
Extracting referring expressions from utterance: 396/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: pass through US Post Office, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=6bfcd81892495d73510a68df11e04004 response_code=200
Extracting referring expressions from utterance: 397/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: pass through Domino\'s, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=259 request_id=448036dfa0b6512c0b59c1543210467d response_code=200
Extracting referring expressions from utterance: 398/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Associated Bank, then leave Associated Bank, and then repeat this exactly two more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=230 request_id=5ac2dddfae028bbe4587c2caaad43023 response_code=200
Extracting referring expressions from utterance: 399/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Little Nest Care, then leave Little Nest Care, and then repeat this exactly two more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=436 request_id=1289c05d31f0791b85f1f3ba17f84724 response_code=200
Extracting referring expressions from utterance: 400/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure that you have exactly three separate visits to Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=a357ec6e29c346ba395f15e2e8511f68 response_code=200
Extracting referring expressions from utterance: 401/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure that you have exactly three separate visits to Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=240 request_id=ed69853f9c65a2884dc41065c4e5363f response_code=200
Extracting referring expressions from utterance: 402/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not exceed or fall short on three separate visits to Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=524 request_id=748df3f3faeca28932af9c0a7b08a9ac response_code=200
Extracting referring expressions from utterance: 403/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not exceed or fall short on three separate visits to US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=214 request_id=1a1a12978e76438f107dd88b9453c150 response_code=200
Extracting referring expressions from utterance: 404/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Ace Hardware, once you have visited North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=81e7cd2a800616bec6d9bc5901d1a1e6 response_code=200
Extracting referring expressions from utterance: 405/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to North Branch Arts, once you have visited Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=360 request_id=fb0bf8c8643d8d1d8bddfabc797d1751 response_code=200
Extracting referring expressions from utterance: 406/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Creativo! Academy, once you go to Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=745 request_id=dcb8652d456ab65535ab2505c6237091 response_code=200
Extracting referring expressions from utterance: 407/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Local Goods Chicago, once you go to Ace Hardware\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=420 request_id=a9c058976a4537d16a7536ee48811504 response_code=200
Extracting referring expressions from utterance: 408/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you visit Domino\'s, you can not visit US Post Office, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=1bc6c064d9dca60d7700bdb63da75008 response_code=200
Extracting referring expressions from utterance: 409/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you visit Starbucks, you can not visit Lee Nails, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=aac68ed214c20e55f661a367ad8da5f4 response_code=200
Extracting referring expressions from utterance: 410/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once Central & Devon NB, is visited you can not go to Edward Jones, any more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=dfb51905921e2c36b64cdc2696eb4311 response_code=200
Extracting referring expressions from utterance: 411/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once Creativo! Academy, is visited you can not go to King Pho, any more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=574 request_id=25e7d56ce900689e36955f3fb7ebe91d response_code=200
Extracting referring expressions from utterance: 412/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Ruk Sushi & Thai, before Baird & Warner, is visited but you can never visit Ruk Sushi & Thai, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=726 request_id=9b7d870e13848260f7bbc3c51e2352c3 response_code=200
Extracting referring expressions from utterance: 413/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Edward Jones, before Central & Devon NB, is visited but you can never visit Edward Jones, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=770 request_id=20fb70dc1ab4aa55eea22508720d3f9e response_code=200
Extracting referring expressions from utterance: 414/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you go to Domino\'s, you have to avoid Lee Nails\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=567 request_id=a58a5db21041896a3c040b49921de6fe response_code=200
Extracting referring expressions from utterance: 415/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you go to Central & Devon SB, you have to avoid Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=588 request_id=69771be0ad5e9adba2bdb70386b38919 response_code=200
Extracting referring expressions from utterance: 416/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Central & Devon SB, only after you go to Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=214 request_id=2781746c5f749862f97043c2b58bb381 response_code=200
Extracting referring expressions from utterance: 417/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Central & Devon SB, only after you go to Central & Devon SB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=781239b61a07e824f41dc96864020123 response_code=200
Extracting referring expressions from utterance: 418/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you have gone to Central & Devon NB, you must stay away from Edgebrook Coffee Ship\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=634 request_id=b794b16c6a490d7f65eb52210452d68e response_code=200
Extracting referring expressions from utterance: 419/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you have gone to My Sister\'s Closet, you must stay away from North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=498 request_id=e7b151efc26298fd06a9aa6f061d0ba8 response_code=200
Extracting referring expressions from utterance: 420/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must stay away from Lee Nails, once you have gone to Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=ef3c2c46f1223ddff417f0e38551502a response_code=200
Extracting referring expressions from utterance: 421/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must stay away from Central & Devon NB, once you have gone to King Pho\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=b7e473bd714c40f3bc7c56e95e67697e response_code=200
Extracting referring expressions from utterance: 422/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not move to Local Goods Chicago, after you reach Central & Devon NB\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=382 request_id=23aad0a6d276a933de3b73a7514a6481 response_code=200
Extracting referring expressions from utterance: 423/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not move to Ace Hardware, after you reach Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=350 request_id=96172ea12220ee37f017a8a81864c0b0 response_code=200
Extracting referring expressions from utterance: 424/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you reach Domino\'s, you can not move to Currency Change\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=290 request_id=6a477d188e4ecb7427eaf60a6c49b5a2 response_code=200
Extracting referring expressions from utterance: 425/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you reach Edward Jones, you can not move to Local Goods Chicago\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=694 request_id=f3bc83473eda43847bdfb65e11113694 response_code=200
Extracting referring expressions from utterance: 426/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you go to Becker Roofing Company, you have to avoid Little Nest Care, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=554 request_id=e9ea82978b9e7b3071527c25f6c6176d response_code=200
Extracting referring expressions from utterance: 427/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you go to Local Goods Chicago, you have to avoid Creativo! Academy, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=947 request_id=79c4af6dd4e6f93925efa0c9a80b3b0b response_code=200
Extracting referring expressions from utterance: 428/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Ace Hardware, once you go to Terry\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=458 request_id=a2c2b9707ecf3626894d9bd053f618ac response_code=200
Extracting referring expressions from utterance: 429/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Currency Change, once you go to North Branch Arts\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=264 request_id=450712d7c3170bc1c9a89d5c9a787ef7 response_code=200
Extracting referring expressions from utterance: 430/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Ruk Sushi & Thai, after Edward Jones, is visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=496 request_id=5f1b321b3ef32d48ed3dce0d30abbecc response_code=200
Extracting referring expressions from utterance: 431/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Lee Nails, after Central & Devon NB, is visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=682 request_id=47d98e09fa83cd7555b76a5dd5d2620b response_code=200
Extracting referring expressions from utterance: 432/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go to Local Goods Chicago, but you must not go to Creativo! Academy, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=922 request_id=7944917a242873d8f279097b48e7015a response_code=200
Extracting referring expressions from utterance: 433/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go to Kanellos Shoe Repair, but you must not go to My Sister\'s Closet, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=535 request_id=a1e516eaa2c5c39e3b40417a1979e8e4 response_code=200
Extracting referring expressions from utterance: 434/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: any visit to Baird & Warner, is not allowed after you visit Domino\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=dc127c03ff8da8d1a5717701c09fd2d6 response_code=200
Extracting referring expressions from utterance: 435/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: any visit to Central & Devon NB, is not allowed after you visit My Sister\'s Closet\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=0295d36a23b5b98280e577e7c5a60251 response_code=200
Extracting referring expressions from utterance: 436/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once My Sister\'s Closet, is reached after that you can never visit Edward Jones\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=454 request_id=dcfaabfd8e19516073d55555370c6313 response_code=200
Extracting referring expressions from utterance: 437/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once Central & Devon SB, is reached after that you can never visit Kanellos Shoe Repair\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=583 request_id=56069329d011451cfced436cc2f7d9e6 response_code=200
Extracting referring expressions from utterance: 438/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Creativo! Academy, can never be visited once Central & Devon SB, occurs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=bf4c2e0c6a76ac4faf9d7d0749f77eb1 response_code=200
Extracting referring expressions from utterance: 439/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Creativo! Academy, can never be visited once Baird & Warner, occurs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=491 request_id=df0c57be367e417ef3bf04be231c9ff7 response_code=200
Extracting referring expressions from utterance: 440/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you go to King Pho, you can never go to Becker Roofing Company, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=533 request_id=19d0dc68989ce3d3bf8b8eaf857f6fbc response_code=200
Extracting referring expressions from utterance: 441/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you go to Creativo! Academy, you can never go to Edward Jones, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=363 request_id=6d87785d6bcd5ffaccf80004647e249e response_code=200
Extracting referring expressions from utterance: 442/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if US Post Office, happens that prevents North Branch Arts, from happening afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=525 request_id=628eef19382e3244d9d183f8d61266e2 response_code=200
Extracting referring expressions from utterance: 443/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if Currency Change, happens that prevents Ruk Sushi & Thai, from happening afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=4a369cfaaf48512ec7c1f55db29107de response_code=200
Extracting referring expressions from utterance: 444/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you visit Kanellos Shoe Repair, you are not allowed to reach Edgebrook Coffee Ship, afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=871 request_id=7b2a9444cfd2390c2fecd97e6d7c8dfa response_code=200
Extracting referring expressions from utterance: 445/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you visit Becker Roofing Company, you are not allowed to reach Ruk Sushi & Thai, afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=521 request_id=b2d93d8429fe5fa09374033f3efb3466 response_code=200
Extracting referring expressions from utterance: 446/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: whenever you observe Starbucks, this locks Local Goods Chicago, from becoming true from the next instance\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=395 request_id=4a4c4f7242ac8ba9e92e2f97fecb4c01 response_code=200
Extracting referring expressions from utterance: 447/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: whenever you observe Starbucks, this locks Domino\'s, from becoming true from the next instance\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=232 request_id=7e455aef8cfcb7f5ac2f19cc1d76abac response_code=200
Extracting referring expressions from utterance: 448/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing US Post Office, locks Ruk Sushi & Thai, from being true for all time instances starting from the next one\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=681 request_id=70b9e97c1d8579d4d6640d5826190784 response_code=200
Extracting referring expressions from utterance: 449/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing Starbucks, locks Currency Change, from being true for all time instances starting from the next one\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=242 request_id=ad9876a1afe85c60e76aa62acd7a28c6 response_code=200
Extracting referring expressions from utterance: 450/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you get to Lee Nails, you must avoid US Post Office\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=c699e8fd97d9e578bd987fbc09ec9775 response_code=200
Extracting referring expressions from utterance: 451/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you get to Becker Roofing Company, you must avoid Ace Hardware\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=88cc8d2f6b0838ffc50ddd9924c53213 response_code=200
grounding landmark: North Branch Arts
use cached embedding: North Branch Arts
grounding landmark: Creativo! Academy
use cached embedding: Creativo! Academy
grounding landmark: Ruk Sushi & Thai
use cached embedding: Ruk Sushi & Thai
grounding landmark: US Post Office
use cached embedding: US Post Office
grounding landmark: Terry's Place
use cached embedding: Terry's Place
grounding landmark: Kanellos Shoe Repair
use cached embedding: Kanellos Shoe Repair
grounding landmark: My Sister's Closet
use cached embedding: My Sister's Closet
grounding landmark: Locks Currency Change
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["Locks Currency Change"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 8417
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=105 request_id=cc549b27aab95416be39ed03f1b5cf35 response_code=200
grounding landmark: Baird & Warner
use cached embedding: Baird & Warner
grounding landmark: Associated Bank
use cached embedding: Associated Bank
grounding landmark: Central & Devon NB
use cached embedding: Central & Devon NB
grounding landmark: Becker Roofing Company
use cached embedding: Becker Roofing Company
grounding landmark: Currency Change
use cached embedding: Currency Change
grounding landmark: King Pho
use cached embedding: King Pho
grounding landmark: Central & Devon SB
use cached embedding: Central & Devon SB
grounding landmark: Domino's
use cached embedding: Domino's
grounding landmark: Edgebrook Coffee Ship
use cached embedding: Edgebrook Coffee Ship
grounding landmark: Little Nest Care
use cached embedding: Little Nest Care
grounding landmark: Ace Hardware
use cached embedding: Ace Hardware
grounding landmark: Local Goods Chicago
use cached embedding: Local Goods Chicago
grounding landmark: Lee Nails
use cached embedding: Lee Nails
grounding landmark: Starbucks
use cached embedding: Starbucks
grounding landmark: Edward Jones
use cached embedding: Edward Jones
Symbolic Translation: 0/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d c a h and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=637 request_id=b283f7cb99f1a2e0056e16ebab65e4a7 response_code=200
Symbolic Translation: 1/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d b c h and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=558 request_id=20e7c18d0b710c20d34f3e9a9363e4ce response_code=200
Symbolic Translation: 2/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: sometime visit b d a c and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=562 request_id=38ba33f84c6b97ebd02be44ac82b3456 response_code=200
Symbolic Translation: 3/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: sometime visit d h b a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=567 request_id=32becac299ac13e0b9b5ff45c7e63f0f response_code=200
Symbolic Translation: 4/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: eventually go visit c a b h and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=d378ef1f9c0130c55bb35a78b535a7b8 response_code=200
Symbolic Translation: 5/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: eventually go visit d b a c and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=674bfd29e179bea885e0d30febcce804 response_code=200
Symbolic Translation: 6/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to h d b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=c84bbee3079b790625957daf7a8aeabd response_code=200
Symbolic Translation: 7/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c h b a and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=cc3ba7aec1f73fd2dc492425ae5a8c46 response_code=200
Symbolic Translation: 8/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to h go to b go to c go to d go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=394b8a5991ce0213d7a77e046490ca9d response_code=200
Symbolic Translation: 9/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a go to d go to c go to b go to h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=220547bb22de4b370dade6b0eac92345 response_code=200
Symbolic Translation: 10/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit h b c d a in any order required\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=c2ba80a335e755f83ffe534d4e6d395e response_code=200
Symbolic Translation: 11/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b a c d h in any order required\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=40b21d5350c02093932773907ac480bd response_code=200
Symbolic Translation: 12/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit all locations a h b d c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=979f86bd99f7e24c5d7cc122e5557b6c response_code=200
Symbolic Translation: 13/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit all locations d c a h b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=491 request_id=5fe271d11674804fcff3a91e52fb047a response_code=200
Symbolic Translation: 14/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach the following five locations a d b c h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=8ef54adb5ca37dac06bf8846c9f732d6 response_code=200
Symbolic Translation: 15/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach the following five locations h d a b c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=3514622f3a838b1fa1848af210ba1e19 response_code=200
Symbolic Translation: 16/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: find the following a d c b h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=a0709098f7a94dea515f1e1b020f9cfb response_code=200
Symbolic Translation: 17/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: find the following b h c a d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=bc18117be5f88c1ba62c60ae77fdb46c response_code=200
Symbolic Translation: 18/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c a d b and h in arbitrary order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=492 request_id=b1c2663b54d89d3cb0a91f66e31ea36f response_code=200
Symbolic Translation: 19/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c b a h and d in arbitrary order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=e0fcebfc6a8a7016537995bb01efb154 response_code=200
Symbolic Translation: 20/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure a h c d and b are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=e7133fd1e81d954f493499ad4356a9e8 response_code=200
Symbolic Translation: 21/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure d c h b and a are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=229a53b9e49b7e8b56befe02654b1031 response_code=200
Symbolic Translation: 22/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop until h c d a and b are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=483 request_id=44af4793e2e62062140f53b981684e42 response_code=200
Symbolic Translation: 23/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop until h c a b and d are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=6514006fbb1dde8ef8982edf958a3740 response_code=200
Symbolic Translation: 24/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a h c b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=fc8cc6ddceb5d80369eb6625f1f5d2c5 response_code=200
Symbolic Translation: 25/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to d c b h and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=13021f63a208e396366a544610f94b1a response_code=200
Symbolic Translation: 26/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit h a d c and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=7628749117e0711a23225ef754ee780c response_code=200
Symbolic Translation: 27/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d c b a and h in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=2650c675273460e3f7aef52140b3d89b response_code=200
Symbolic Translation: 28/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a h d b and c in no particular order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=21bd53aa14d2e3a82df6fa4c3253e7c7 response_code=200
Symbolic Translation: 29/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a d c b and h in no particular order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=d1db7c82bc707c1783646601b4aea65b response_code=200
Symbolic Translation: 30/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c d b h and a at least once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=c553e12894b0feb20592d09085529d77 response_code=200
Symbolic Translation: 31/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d b a h and c at least once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=b462251fbea430dffec592c64a84d044 response_code=200
Symbolic Translation: 32/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to h c a b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=a52a1a800c92daa4b6b778f15c195e8d response_code=200
Symbolic Translation: 33/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d c b h and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=dc26934a9bb6cda6dc200ef34d6c4077 response_code=200
Symbolic Translation: 34/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d c a h and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=c95fa8680e903b90a88b16d790230706 response_code=200
Symbolic Translation: 35/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d c h a and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=7b251a0c02cc73141e8856a93df7af4b response_code=200
Symbolic Translation: 36/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit h c b d and a in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=a77730cea5dfd58b89340ba4a4d6be59 response_code=200
Symbolic Translation: 37/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b h d c and a in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=f33c44d3b6d5781e7714936da22850bc response_code=200
Symbolic Translation: 38/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach d c h b and a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=657c3d55f84ce260717ff7235f169f5a response_code=200
Symbolic Translation: 39/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach h d c a and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=71165b47951c5c0162a1ae71ed48e85a response_code=200
Symbolic Translation: 40/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you go to b h a c d in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=84b79c4f4c7314ee300f07cbd3d46d0d response_code=200
Symbolic Translation: 41/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you go to h a d b c in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=501 request_id=61a8e0290559c479d2552439392cccbb response_code=200
Symbolic Translation: 42/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit c a d b h but it can be done in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=494 request_id=47805c9f3cf080115d2064e35687b9b1 response_code=200
Symbolic Translation: 43/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit c a d h b but it can be done in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=bc431510d67e36ab67d934302980dc6a response_code=200
Symbolic Translation: 44/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: in no particular order visit h b a c d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=da3965bae9f99cc2211c4be96d1dedbe response_code=200
Symbolic Translation: 45/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: in no particular order visit b a h d c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=71402e88a4201497d05be276760a879b response_code=200
Symbolic Translation: 46/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a until you visit d visit d only once do not visit d until you visit c visit c only once do no visit c until you visit b visit b only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1635 request_id=83a8b7785f7058bf71c52311daa7b074 response_code=200
Symbolic Translation: 47/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit b until you visit d visit d only once do not visit d until you visit c visit c only once do no visit c until you visit a visit a only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1634 request_id=5eeaead720cd0d8f94dfcc9582a9cc35 response_code=200
Symbolic Translation: 48/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a then d then c and then b you can only visit each landmark once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1625 request_id=deef5538d61a61cae8c21e40831fc7e5 response_code=200
Symbolic Translation: 49/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a then c then d and then b you can only visit each landmark once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1634 request_id=82669125fadb4e020a8814e034be506d response_code=200
Symbolic Translation: 50/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a but not through b d or c and then go to b but not through d or c and then go to d but not through c and finally go to c no revisiting is allowed\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1633 request_id=16d3fca1f4eb761f4a2769f2cfb737d7 response_code=200
Symbolic Translation: 51/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b but not through d a or c and then go to d but not through a or c and then go to a but not through c and finally go to c no revisiting is allowed\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1634 request_id=1396d818c9d7493945554f947d003b61 response_code=200
Symbolic Translation: 52/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to c until b is visited and do not go to b until d is visited and do not go to d until a is visited along the path never return to previous location you have been to\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1636 request_id=92d5c84058386adad00483699343fa4f response_code=200
Symbolic Translation: 53/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to d until c is visited and do not go to c until a is visited and do not go to a until b is visited along the path never return to previous location you have been to\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1634 request_id=1c91bb2e179cf39596a1368f67ce50f9 response_code=200
Symbolic Translation: 54/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to d only after going to c before that make your way to c only after going to b before that make your way to b only after going to a do not go back to the previous location you have visited while heading to the next\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1638 request_id=9995b8fd5212c5388bfbfc1c2e2a578e response_code=200
Symbolic Translation: 55/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to b only after going to c before that make your way to c only after going to a before that make your way to a only after going to d do not go back to the previous location you have visited while heading to the next\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1652 request_id=9ac3d135d41ae63dcc4ec9a28dfeb1e1 response_code=200
Symbolic Translation: 56/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c but do not visit d b or a and then go to d but do not visit b or a or revisit c and then go to b but do not visit a or revisit c or d and then go to a but do not revisit c d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1640 request_id=d5f63ba4d5ed3560eec1343afad2ced9 response_code=200
Symbolic Translation: 57/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b but do not visit c d or a and then go to c but do not visit d or a or revisit b and then go to d but do not visit a or revisit b or c and then go to a but do not revisit b c or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1643 request_id=13c33215d39dadc89d4c44b3ad887acd response_code=200
Symbolic Translation: 58/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d c b and a in this order without skipping any one of them do not revisit any one of them once after you have been there\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1634 request_id=8ead5a854adb2c3c10c519b8bfd0a316 response_code=200
Symbolic Translation: 59/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a c d and b in this order without skipping any one of them do not revisit any one of them once after you have been there\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1631 request_id=a603749835a5766512c98bcd9037034a response_code=200
Symbolic Translation: 60/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c only once but keep away from a d and b and then go to a only once but keep away from c d and b and then go to d only once but keep way from c a and b and finally go to b once but keep away from c a and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1639 request_id=69c68ab6422507112b58a8a3402392a2 response_code=200
Symbolic Translation: 61/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c only once but keep away from d b and a and then go to d only once but keep away from c b and a and then go to b only once but keep way from c d and a and finally go to a once but keep away from c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1668 request_id=292d04b4ac9764049c5bd6c6e947b5cb response_code=200
Symbolic Translation: 62/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d one time but not through b a or c and then visit b once but not through d a or c and then visit a once but not through d b or c and then visit c once but not through d b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1637 request_id=84e0acf08af46363b5bb3381792b21f8 response_code=200
Symbolic Translation: 63/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d one time but not through c a or b and then visit c once but not through d a or b and then visit a once but not through d c or b and then visit b once but not through d c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1707 request_id=6a8cfd6f353d403145460239cd64bc75 response_code=200
Symbolic Translation: 64/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from b a and c until you make d single visit to d and then make your way to b while staying away from d a and c and then make your way to a while staying away from d b or c and finally make your way to c while staying away from d b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=719 request_id=c42720453486e08a2271a1f91f6520b8 response_code=200
Symbolic Translation: 65/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from c d and b until you make a single visit to a and then make your way to c while staying away from a d and b and then make your way to d while staying away from a c or b and finally make your way to b while staying away from a c and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=797 request_id=11c52c1b11246668a5a9e89d570212f9 response_code=200
Symbolic Translation: 66/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: head to b c d and a in this order without skipping or revisiting any one of them\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1717 request_id=f0ca3648d3b0cf3b5a23bbf7f7a6576f response_code=200
Symbolic Translation: 67/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: head to c b a and d in this order without skipping or revisiting any one of them\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1713 request_id=a312eca169fbc1a9d44b7c52408fd2ad response_code=200
Symbolic Translation: 68/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit each of b a c and d exactly once in this order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1625 request_id=fa79c986ce19b76db54691bd33f8303a response_code=200
Symbolic Translation: 69/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit each of d b a and c exactly once in this order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1627 request_id=6a2bffe52ca1cbf86573f270a1ba6dca response_code=200
Symbolic Translation: 70/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a but before visiting a you must visit c only after that visit d after visiting d visit b visit each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1634 request_id=fc341687c88c9800ab72921613853481 response_code=200
Symbolic Translation: 71/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c but before visiting c you must visit d only after that visit a after visiting a visit b visit each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1626 request_id=8037a0f77339672c1c16e8a2f4e8a4a4 response_code=200
Symbolic Translation: 72/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d only once while avoiding c then visit c once while avoiding b only after visiting b once visit a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1636 request_id=5db691ac913f66432a3005fe3d44c80c response_code=200
Symbolic Translation: 73/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c only once while avoiding b then visit b once while avoiding a only after visiting a once visit d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1626 request_id=4eedd7dd0c9f58d8f87a849601281e00 response_code=200
Symbolic Translation: 74/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c a b d once do not visit a without visiting c and do not visit a without visiting b do not visit d without visiting b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1630 request_id=b9cbec99d3b6292343daf42c011a5420 response_code=200
Symbolic Translation: 75/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d c b a once do not visit c without visiting d and do not visit c without visiting b do not visit a without visiting b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1645 request_id=a74bc8b1c865ac323d9c052f40e3d7f1 response_code=200
Symbolic Translation: 76/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b then c then a then d follow this strict order and visit each location only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1628 request_id=6a1bf941b1de3990b9ced02a6d72504c response_code=200
Symbolic Translation: 77/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b then a then c then d follow this strict order and visit each location only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1624 request_id=17efe5fdbc5eb7a1972c37697b1a8e2b response_code=200
Symbolic Translation: 78/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please go to b then a then c then d in that specific order without revisiting previously visited location\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1645 request_id=40a53f6ec257e674b5faa3c2dfaa4bf5 response_code=200
Symbolic Translation: 79/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please go to d then b then c then a in that specific order without revisiting previously visited location\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1706 request_id=76bf8b3733c0548053fd3f36cfed1ce6 response_code=200
Symbolic Translation: 80/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to b once without visiting d then go to d once without visiting a then go to a once without visiting c finally go to c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1625 request_id=8be2a7fde3af5f155dc24b3a88a91ee0 response_code=200
Symbolic Translation: 81/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to d once without visiting b then go to b once without visiting c then go to c once without visiting a finally go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1628 request_id=0b0d6ef96fbd668009e22869395adcf2 response_code=200
Symbolic Translation: 82/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to d once then go to c once while avoiding b then go to b once while avoiding a finally go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1624 request_id=fe708ea703ff8eb887618ee192a08d32 response_code=200
Symbolic Translation: 83/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to c once then go to a once while avoiding b then go to b once while avoiding d finally go to d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1626 request_id=328b3110d86cd3d56b06485b5da5474d response_code=200
Symbolic Translation: 84/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a without visiting b then go to b without visiting c then go to c without visiting d finally go to d while only visiting each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1635 request_id=87b4d215f01b6d4878a9a3c6040b85ff response_code=200
Symbolic Translation: 85/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b without visiting a then go to a without visiting c then go to c without visiting d finally go to d while only visiting each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1635 request_id=0885f906a00f17ab398ca9ac19f29a1e response_code=200
Symbolic Translation: 86/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a then c then b and then d in that strict order without returning to previously visited locations\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1626 request_id=caa4dcb45df81d3490cf94bead3ff617 response_code=200
Symbolic Translation: 87/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a then d then c and then b in that strict order without returning to previously visited locations\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1630 request_id=611fc003062518557e0a48bfcadf1fe1 response_code=200
Symbolic Translation: 88/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never stop visiting d a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=b1ec83de11a85760e75f6db71bbe9c62 response_code=200
Symbolic Translation: 89/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never stop visiting b a c and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=702 request_id=11fd0ea95b9443d581a0441c13d223cf response_code=200
Symbolic Translation: 90/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: frequent a c d and b infinitely in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=939f01c6dab970260b0284ea868e7c67 response_code=200
Symbolic Translation: 91/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: frequent b d a and c infinitely in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=724 request_id=98367bf776e99f1cf37a2bced355c0c9 response_code=200
Symbolic Translation: 92/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please keep visiting c a d and b without stopping\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=9833ab683a10062607875b79c9118ebc response_code=200
Symbolic Translation: 93/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please keep visiting a b c and d without stopping\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=ff41579f87ad58f987742135654325dd response_code=200
Symbolic Translation: 94/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure b d a and c are visited infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=607e901556d72e3bb1516c5874f19aec response_code=200
Symbolic Translation: 95/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure c d b and a are visited infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=726 request_id=34ccb274cd67d27e05955ea3a9363891 response_code=200
Symbolic Translation: 96/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting c d a and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=0a2833e6c0f6130dbeeed118b3e8fc45 response_code=200
Symbolic Translation: 97/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b a c and d in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=fe0ce81bc2901b3e0c66ba089226e192 response_code=200
Symbolic Translation: 98/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit locations b c a and d an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=6f06dbd8886745e008c82da3cbde6536 response_code=200
Symbolic Translation: 99/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit locations a c d and b an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=d268322f46d0128560f057bc28b67423 response_code=200
Symbolic Translation: 100/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting d b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=e273a3ed6693cc52d683219c1a16e530 response_code=200
Symbolic Translation: 101/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=82378aa7fda746824300d3ca683d436d response_code=200
Symbolic Translation: 102/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to d b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=31350c4efcfded6a3cf13ca622b66daf response_code=200
Symbolic Translation: 103/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to d c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=720 request_id=4af596ecccc84401852ee4b4476ed72d response_code=200
Symbolic Translation: 104/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d b c and a over and over again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=4085ca414b5f88bc9268809874d4e432 response_code=200
Symbolic Translation: 105/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b c d and a over and over again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=c04d43ce2c0637ce3e04c23fa5137fa9 response_code=200
Symbolic Translation: 106/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue to stop at b d a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=ee4d49d6209cd482a1920f21907551b6 response_code=200
Symbolic Translation: 107/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue to stop at c d a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=fe254a741d6d2baba7a9ce220c0c6aad response_code=200
Symbolic Translation: 108/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continuously visit b c d and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=32fd7ec8eb10d8e9272e20f8562430b7 response_code=200
Symbolic Translation: 109/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continuously visit a c b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=f8aa79284b2e0638fce28c04f74135d2 response_code=200
Symbolic Translation: 110/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to c b d and a b finite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1623 request_id=af92fda6a2a4ced259527ccffd5d1b63 response_code=200
Symbolic Translation: 111/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b c d and a c finite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1621 request_id=45d6f8021b209526bcba72dc28fb38eb response_code=200
Symbolic Translation: 112/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: perpetually travel to b a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=586 request_id=60d0b8abc4dc40a4497a717b40b690b2 response_code=200
Symbolic Translation: 113/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: perpetually travel to c b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=cc4346a71d3fb2a1b6741c794528db38 response_code=200
Symbolic Translation: 114/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: explore b c and a endlessy\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=559 request_id=ab45d5ee59e7fe98ee8ff8f90627a94f response_code=200
Symbolic Translation: 115/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: explore c a and b endlessy\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=370556a391ade02da3dd3730d5129c98 response_code=200
Symbolic Translation: 116/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are prohibited from not infinitely going to b a c and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=787 request_id=dec0965527adf70550cc8281cdede892 response_code=200
Symbolic Translation: 117/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are prohibited from not infinitely going to a c b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=cd9616ab69319620ea0257cb76cd655d response_code=200
Symbolic Translation: 118/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b d a and c in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=673655e4dd6f48980dcc54f18c7976ef response_code=200
Symbolic Translation: 119/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a d c and b in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=720 request_id=9996d7812d8406537aff2d77dd52eff5 response_code=200
Symbolic Translation: 120/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to a b d and c in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=770 request_id=94a3294b56939a1e87b7226a1193d23e response_code=200
Symbolic Translation: 121/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to c a d and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=e13c6e8be5e069571975db6ec8edaa5d response_code=200
Symbolic Translation: 122/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a c d and b in any order infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=d1abf53d2d048419715ad0440f4a0685 response_code=200
Symbolic Translation: 123/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a b c and d in any order infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=1b08e3df64133a8e1c9fe461ddf0ffd9 response_code=200
Symbolic Translation: 124/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting a c b and d in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=53b92ad173bcdd7fa67613795ebf43c3 response_code=200
Symbolic Translation: 125/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting b a c and d in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=0d6bba74c499a019776d8ebfa1e49031 response_code=200
Symbolic Translation: 126/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop going to b c a and d in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=8de5c7e04dbfe1bff0e3aefb996ff13c response_code=200
Symbolic Translation: 127/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop going to c a d and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=725 request_id=d7a65bc5e019f0c27f0ad1d5632de85d response_code=200
Symbolic Translation: 128/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to d b a and c an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=2e2370d51e1a2e302697956343cdea47 response_code=200
Symbolic Translation: 129/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to d c b and a an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=8377f4d5b4b967d47ed92f5e0e75e059 response_code=200
Symbolic Translation: 130/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a d c and b an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=ced7231c3b715f9a0eeba6dfd3c73f33 response_code=200
Symbolic Translation: 131/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b a d and c an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=f8c408869737c0197024a51f7e11777c response_code=200
Symbolic Translation: 132/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue visiting c b d and a an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=942b0af72bdf88fb956b9b298e76bc54 response_code=200
Symbolic Translation: 133/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue visiting c d a and b an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=cea554b254a2c13179e7e94e8f33ae83 response_code=200
Symbolic Translation: 134/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting b a d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=cd4f47431261d9c2a08f74e7ec52caeb response_code=200
Symbolic Translation: 135/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting b a d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=e4d0c90c14af53698eba91ab271328b0 response_code=200
Symbolic Translation: 136/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to c b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=6a2cc9fa54135f30051fe2eb3a995bfa response_code=200
Symbolic Translation: 137/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=eaf846b3785398754cb01c5fb288129f response_code=200
Symbolic Translation: 138/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never visit b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=9cc6814f3372672a73e9687f79073f17 response_code=200
Symbolic Translation: 139/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never visit b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=535 request_id=954728ee1ec5705a5345517682575d00 response_code=200
Symbolic Translation: 140/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=31bcacc10f9ca2740366817e7c158c93 response_code=200
Symbolic Translation: 141/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=860 request_id=d855225210509cb3d27003387975f91f response_code=200
Symbolic Translation: 142/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=8db1f2f17e105ebc90e18ac4874daf57 response_code=200
Symbolic Translation: 143/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=9ffbff514982798b26a3eabad6598f7f response_code=200
Symbolic Translation: 144/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid c b and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=a2a7523f3f5216fe74c057a30bcc2852 response_code=200
Symbolic Translation: 145/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid a c and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=e5acf1d789e80bcc789cf75d2ad9c105 response_code=200
Symbolic Translation: 146/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit b c or a at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=626a9d2826e25134a12e0d7a88bc9b72 response_code=200
Symbolic Translation: 147/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a c or b at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=3e4bad54301958aa6c2a5331df68fa0b response_code=200
Symbolic Translation: 148/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit c a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=6132b02f571d805a42dc2916c37b9e95 response_code=200
Symbolic Translation: 149/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=65e2296ae0104cec4ac88061380e8974 response_code=200
Symbolic Translation: 150/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=6477b7a2a95879db0621c8b8f35a7ca8 response_code=200
Symbolic Translation: 151/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to c b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=b44554f5ec30d6e4d4474826872ee48d response_code=200
Symbolic Translation: 152/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit either one among a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=484 request_id=ed6ae6e14f4be846b77b4430177fb7fe response_code=200
Symbolic Translation: 153/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit either one among b a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=9a656272cb2f6c2cf5775e92d6aca764 response_code=200
Symbolic Translation: 154/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach the locations c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=7c12f4338204b1efb2d7058a1cecf553 response_code=200
Symbolic Translation: 155/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach the locations a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=113fea4209bb1ae80a2d7637d5a78cf5 response_code=200
Symbolic Translation: 156/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach a ensure that you never reach c and ensure that you never reach b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=762cd576f3111027ac182b9ac9dc62c6 response_code=200
Symbolic Translation: 157/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach a ensure that you never reach b and ensure that you never reach c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=8cf7d96cd0b3573dd3af9da20821a2b8 response_code=200
Symbolic Translation: 158/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a c and b should never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=fe51b6861b44c9cd1cc5ce6940c0eeb8 response_code=200
Symbolic Translation: 159/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c a and b should never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=8d37c67e19b84e16d9190627f0875342 response_code=200
Symbolic Translation: 160/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1007 request_id=046b2aa9804fbfeb0bfa4136cbabda05 response_code=200
Symbolic Translation: 161/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=914aeac4066fb694a6027d839d8c443e response_code=200
Symbolic Translation: 162/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=6640788f434b9aca05530019619c2c9b response_code=200
Symbolic Translation: 163/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=2e3d699ea161174bdba890d9374a16b5 response_code=200
Symbolic Translation: 164/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a c and b can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=13cf219a4da125c816a44f295694d860 response_code=200
Symbolic Translation: 165/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c a and b can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=2ebba9666efdf2f66200b09ab94cc29c response_code=200
Symbolic Translation: 166/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=f47b398dad54b83da0289005f28ddd0d response_code=200
Symbolic Translation: 167/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=3acbd1bbbe08d37d1c06cc6fe8dd0b06 response_code=200
Symbolic Translation: 168/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a c and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=7e8dbabdad816c8ea3d5cc7341f65b83 response_code=200
Symbolic Translation: 169/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a b and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=14bf84ae6a609387d6dad3263dbbf028 response_code=200
Symbolic Translation: 170/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=fb02766a9ec2a7db2f3009e1797f080b response_code=200
Symbolic Translation: 171/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=1126fd01e0f475492b8f1f42a24907fd response_code=200
Symbolic Translation: 172/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b a and c forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=0ab74bc99bc931ee44bfd829822c08ec response_code=200
Symbolic Translation: 173/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b a and c forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=adb976d9d6ff5cd1a56840d61b992097 response_code=200
Symbolic Translation: 174/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=ff034fefb72a1ce6eafa59b66219f0ef response_code=200
Symbolic Translation: 175/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=487 request_id=17205982330b015ffd40e101fed50fde response_code=200
Symbolic Translation: 176/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c b or a can never become true at any instant\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=fbcee8d487cffaf16fcbec5de9c25de8 response_code=200
Symbolic Translation: 177/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b a or c can never become true at any instant\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=0d4976b32b91ccb196728b6f31afc110 response_code=200
Symbolic Translation: 178/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that c a and b never hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=ff9b504ff5e4b9ae39a908f5543c32a7 response_code=200
Symbolic Translation: 179/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that a b and c never hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=4078b8af00053764309dc6a4c0c24e3c response_code=200
Symbolic Translation: 180/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit b a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=d80a77f4a0091d4d5e8be82b2bf7534a response_code=200
Symbolic Translation: 181/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit b a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=e0699690e8b0c213429c6253902a661e response_code=200
Symbolic Translation: 182/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to d b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=716 request_id=d894e40519b2f9a91362f04b5fccfe3a response_code=200
Symbolic Translation: 183/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to d c b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=a95983ced2eb4bb22d44dcdc3bf2df05 response_code=200
Symbolic Translation: 184/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to c b d or a at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=e3908f49e91d7377cfebcf7d7a1beec4 response_code=200
Symbolic Translation: 185/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to d c b or a at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=b66689f2b5abb2de5367098185b01e71 response_code=200
Symbolic Translation: 186/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit d a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=733 request_id=0c84dbf643832262f730179b32f9826c response_code=200
Symbolic Translation: 187/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit d b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=1d0eef8fc21af56aca5eb0eccccabdf6 response_code=200
Symbolic Translation: 188/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to b a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=716 request_id=2c20264a24cd2059e8d4f4695b73b729 response_code=200
Symbolic Translation: 189/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to a c b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=2f8e57c2b1e4445a7597a4cee6e7aad7 response_code=200
Symbolic Translation: 190/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from b d c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=416e423bebcc3ba406c0ba674e258439 response_code=200
Symbolic Translation: 191/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from d b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=f962b9d80cc5883b8259694a843c213b response_code=200
Symbolic Translation: 192/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid b a d and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=367e32706bce1722120e6c9b6f3b3c16 response_code=200
Symbolic Translation: 193/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid c b d and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=ed892285cc372c17a166613453b82f83 response_code=200
Symbolic Translation: 194/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit any locations among b d a c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=782 request_id=406a3d06b543bd14c6dd8ec35a43614f response_code=200
Symbolic Translation: 195/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit any locations among c b d a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=5dd3e0a664e4a1c994504160ca220522 response_code=200
Symbolic Translation: 196/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure to not reach any of a d b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=774 request_id=6fd787c3150e142e986cf3dac0d4d02a response_code=200
Symbolic Translation: 197/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure to not reach any of b c d and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=722 request_id=a02a1799735491f5390eec6482a4381f response_code=200
Symbolic Translation: 198/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to a c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=1051ec58e2380c92ad8d7df06dfd7b6d response_code=200
Symbolic Translation: 199/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to d a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=2ddf030899e7282ac651eb09b8c7f8e1 response_code=200
Symbolic Translation: 200/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: d a c and b must never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=777 request_id=bb0930154db599d915403ab78181f82c response_code=200
Symbolic Translation: 201/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b d c and a must never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=beb708ea30fecb46eca36ee82f33efec response_code=200
Symbolic Translation: 202/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to d never go to c never go to a and never go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=9eb59def15e7784b2eb8aa0111fdd5cd response_code=200
Symbolic Translation: 203/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b never go to a never go to d and never go to c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=e5bf0b3419a7d61aab4334dcb87be4e3 response_code=200
Symbolic Translation: 204/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a c b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 361
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=d2c5b238e8dd2f9848262a467064429f response_code=200
Symbolic Translation: 205/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b c a or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1619 request_id=5b2c1bb6d70ddd256678495939cccd90 response_code=200
Symbolic Translation: 206/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a c b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=0a248efbc5a8736c5a8ad5a4528957fe response_code=200
Symbolic Translation: 207/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to c a b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=738bd24f977f24c60148b579832f625d response_code=200
Symbolic Translation: 208/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but c d a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=792 request_id=55bf268784f0dcb52e2880abb0f1355d response_code=200
Symbolic Translation: 209/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but b a d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=b2233493f6923bd6436ab93e8533bc7d response_code=200
Symbolic Translation: 210/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b c d and a can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=dd851741ac84e099358a48a49ea3e251 response_code=200
Symbolic Translation: 211/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a c b and d can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=a3c7135717c4433b4c4c4e419efdfa08 response_code=200
Symbolic Translation: 212/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from a c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=7b71c7ef9418c7e753939c5722fd072a response_code=200
Symbolic Translation: 213/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from c a d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=3a8d2a78cda5cb2bfdec2be7fa1832a8 response_code=200
Symbolic Translation: 214/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid c b d and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=8218425192e8139b165a87cae13ffbdf response_code=200
Symbolic Translation: 215/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid b c a and d at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=80d980a65e4a98ff907ea06944cd0eb4 response_code=200
Symbolic Translation: 216/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=3e30ac3df43030835f3d0cb12cced976 response_code=200
Symbolic Translation: 217/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to d c a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=334309a2a3863f36ab62d746ee95c4a7 response_code=200
Symbolic Translation: 218/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid c b a and d forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=372d18d7e47a750bd30e818bd0f8f8c7 response_code=200
Symbolic Translation: 219/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid c a d and b forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=729 request_id=f2ddf85f28cb65a4706bee9f6fb03501 response_code=200
Symbolic Translation: 220/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a d c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=a6748afad63529cce4f88074a24294a2 response_code=200
Symbolic Translation: 221/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a c b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=812c197edbf044954fef520111d63936 response_code=200
Symbolic Translation: 222/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b c d and a must never be allowed to be true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=87f20e1430619a5013da7adb74e31966 response_code=200
Symbolic Translation: 223/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c b d and a must never be allowed to be true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=9e917642f1e906195165ba9650876ddd response_code=200
Symbolic Translation: 224/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go through any of c a b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=681b9a3d7659f3310abdf38d7070d6f1 response_code=200
Symbolic Translation: 225/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go through any of c b d or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=718 request_id=95fe16b6e963001ee46b53da4efc89be response_code=200
Symbolic Translation: 226/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit h b c a or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=4295b5459ff5f17d4ce512032bae28a1 response_code=200
Symbolic Translation: 227/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit h c a d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=723 request_id=fb2c7f2869c9a96ed92447e2867df519 response_code=200
Symbolic Translation: 228/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to c b a h or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=8c9bc80c384228841b862a4e699223d8 response_code=200
Symbolic Translation: 229/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to a h b c or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=8575936c28bd09684d38a3989ea2ce34 response_code=200
Symbolic Translation: 230/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to c d b h or a at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=94157bbe7eedc1683fe052da9bb553bd response_code=200
Symbolic Translation: 231/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b c a d or h at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=ab5b0dab65f825799102a4e019075d52 response_code=200
Symbolic Translation: 232/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit d a b c or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=713 request_id=782336a2b67ac1eb36a7aa4d62a079a3 response_code=200
Symbolic Translation: 233/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit d b c h or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=b58c419810d4fe741477099dcfc99479 response_code=200
Symbolic Translation: 234/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to d a h b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=958602f896a15faad09952a5cf70ecaf response_code=200
Symbolic Translation: 235/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to c d h a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=724 request_id=7ec0de80c91d99ad5e0be6d8b2360917 response_code=200
Symbolic Translation: 236/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from c a b d and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=5ca28503a91e9942a3cd97fe8d0df10e response_code=200
Symbolic Translation: 237/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from c d b a and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=78242ad36f6272dbc64702a6c6240399 response_code=200
Symbolic Translation: 238/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid b h a d and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=89ac57035619a1b78841552a1cadbb5a response_code=200
Symbolic Translation: 239/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid h c d b and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=47563e4edcb20a911ba9fdb256d13354 response_code=200
Symbolic Translation: 240/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to d never go to b never go to a never reach c and never reach h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=82a9dffd5b57ead6e15a57e910697139 response_code=200
Symbolic Translation: 241/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a never go to h never go to c never reach b and never reach d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=018df987e1791657b92ba5a079240132 response_code=200
Symbolic Translation: 242/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never reach the following locations h c d a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=726 request_id=e648c87b1a38222a97b7faa53e139e62 response_code=200
Symbolic Translation: 243/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never reach the following locations a h b d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=6923ddfdd4333b244a7ae758e054390f response_code=200
Symbolic Translation: 244/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that a d c b and h are never visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1015 request_id=305133cc4db469798fe80c408f1c4d67 response_code=200
Symbolic Translation: 245/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that a h c d and b are never visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=abd0c67eb24e7c5fd0aeede0bd51b65d response_code=200
Symbolic Translation: 246/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c a d h and b should never be reached\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=7a2d94490f98cab742ed4f9d91733f24 response_code=200
Symbolic Translation: 247/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: h a c b and d should never be reached\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=85bb0e6097cdaf7bd58dcb1b2f626e88 response_code=200
Symbolic Translation: 248/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to d b h a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=eefd75d0dfcf8df5fa8c3858c71ed985 response_code=200
Symbolic Translation: 249/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b a h d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=fcdc0bf35d414c4540b8a75c39ee8276 response_code=200
Symbolic Translation: 250/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b d h c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=8fbf0487d14257e314989a5aa954c54f response_code=200
Symbolic Translation: 251/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to d c b a or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=60f3341c96057c14f7b9ffe574c1240d response_code=200
Symbolic Translation: 252/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but d h a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=fbc5809f08054af21b1768f6173a4c6e response_code=200
Symbolic Translation: 253/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but d h a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=720 request_id=879bf96f7d3f1fc2e98106896abaa2c3 response_code=200
Symbolic Translation: 254/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: d b h c and a can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=a74231b71da143e03689724508227fc2 response_code=200
Symbolic Translation: 255/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c h b d and a can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=6e713a9bcee6ec1dc8101710887bcd62 response_code=200
Symbolic Translation: 256/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from c d h a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=4d352d22aa131547a7c0c1ada472b799 response_code=200
Symbolic Translation: 257/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from a c h d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=b00d1ce1085ad98c7b1ed02091bcfc85 response_code=200
Symbolic Translation: 258/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid d h a c and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=e96a9e859c24b2c93b6a769663d9a82c response_code=200
Symbolic Translation: 259/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid c d h b and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=443ebb035c5ebbf794b9c2924b266ffb response_code=200
Symbolic Translation: 260/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to h b c d or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=885473345c5901663b69f21a267667c2 response_code=200
Symbolic Translation: 261/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to c h a b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=793 request_id=f31f9cdab1a6c26c83b953d4acad5f22 response_code=200
Symbolic Translation: 262/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a b c h and d forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=24d2df8d5f11d8004a9efb46dca8f021 response_code=200
Symbolic Translation: 263/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid d h a b and c forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=787 request_id=2d9e55e9a48352f6297df4fe2e84ec8d response_code=200
Symbolic Translation: 264/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to h d a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=115af99c3a8ae18a0b038402e576d67a response_code=200
Symbolic Translation: 265/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to c a b d or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=726 request_id=095b40912585f3cfcd233e896366f661 response_code=200
Symbolic Translation: 266/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that none among c h d a and b are ever visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=649b7e992c1ff60bc0eae2de1fb69cfd response_code=200
Symbolic Translation: 267/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that none among a h c d and b are ever visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=887856ada0f1e0e7022ffca35df8cbc8 response_code=200
Symbolic Translation: 268/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b d c a and h must never be allowed to hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=292b81031397307a8df4b1557e33c468 response_code=200
Symbolic Translation: 269/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a b d c and h must never be allowed to hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=a9fc05fadba1295cbefc44a3888c5f01 response_code=200
Symbolic Translation: 270/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=8c282f1e069e9899eaf1ea24b4b2391c response_code=200
Symbolic Translation: 271/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until you see b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=71a69cf6ea11eb96f1466856bd51f531 response_code=200
Symbolic Translation: 272/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid visiting b till you observe a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=3b3a4f7ef1167c92d59e95d9627b90b8 response_code=200
Symbolic Translation: 273/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid visiting a till you observe b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=bdd09f62a48f78fe92b0efd28de24a74 response_code=200
Symbolic Translation: 274/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until b has occured\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=57261049a18fb7b78ca350322309cbb5 response_code=200
Symbolic Translation: 275/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until b has occured\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=7234b92a1f4f59365058180201a9e381 response_code=200
Symbolic Translation: 276/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you observe a only then are you allowed to go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=251 request_id=261adc541f9f0814a76680b1fe16bfcd response_code=200
Symbolic Translation: 277/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you observe a only then are you allowed to go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=242 request_id=641a6fd3878513db0613523352fb2c6d response_code=200
Symbolic Translation: 278/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit a only after seeing b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=544 request_id=7551fdb8fb571ebc70914329aad18d9c response_code=200
Symbolic Translation: 279/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit a only after seeing b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=241749d04060832ff73397d618057ce1 response_code=200
Symbolic Translation: 280/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=d460d1b8082e5752fef3750f876e7671 response_code=200
Symbolic Translation: 281/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=4b7c48c91ea5229cdbe0f654019f3bc1 response_code=200
Symbolic Translation: 282/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b until you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=622423626ae2c31566024f679d119a21 response_code=200
Symbolic Translation: 283/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a until you reach b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=3eb43c79d5ed253df2ca508afd862c38 response_code=200
Symbolic Translation: 284/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from a until you move to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=260 request_id=cf90d20fc70a8725d61f9056ee23ffe1 response_code=200
Symbolic Translation: 285/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from a until you move to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=3ba61f756c0d25b5e7c8a832bbd984e1 response_code=200
Symbolic Translation: 286/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not move to b until you arrive at a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=3afc2fcc445d6e92cab0da50575b729a response_code=200
Symbolic Translation: 287/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not move to b until you arrive at a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=eb0bc25b8dd5fa50140090e1682ee55a response_code=200
Symbolic Translation: 288/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until you have gone to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=485 request_id=88dd23ac2a2d8c9ecf83097e470688ab response_code=200
Symbolic Translation: 289/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you have gone to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=2ced8d4912e2255803c6665cad4ae421 response_code=200
Symbolic Translation: 290/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a at all costs until you reach b first\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=c808be039ddd495b1147fc2d339ddf63 response_code=200
Symbolic Translation: 291/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a at all costs until you reach b first\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=6e5ca5e88df339ae5a2ace63983bf196 response_code=200
Symbolic Translation: 292/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: until you have gone to a you can not go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=256 request_id=0ac489d996f6d26dc89ecbd3792280bc response_code=200
Symbolic Translation: 293/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: until you have gone to b you can not go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=4c043489d0825cb70bffe2e271c72156 response_code=200
Symbolic Translation: 294/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b until you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=4f9ca5c7f88d1eedf2b69fc8baa94548 response_code=200
Symbolic Translation: 295/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to a until you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=42aec7517001ed8856cd5fb06ce35fea response_code=200
Symbolic Translation: 296/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b until you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=2bff193c40ea9b84b57bce34c432dfcf response_code=200
Symbolic Translation: 297/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b until you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=4c7c4a4b95147791deff1f88a0760647 response_code=200
Symbolic Translation: 298/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b before a happens\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=758707e3d03daa78f93af6e3a2fa6be5 response_code=200
Symbolic Translation: 299/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b before a happens\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=3bab004eca96d9e98be4667eb66e6a00 response_code=200
Symbolic Translation: 300/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can only go to a after b is seen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=99f3a3de2185b1f5c72481cd8340ab0f response_code=200
Symbolic Translation: 301/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can only go to a after b is seen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=eccf4a32cd30845816f4cb34517815bf response_code=200
Symbolic Translation: 302/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a must be observed before visiting b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=6210d48de0e43f0e2c6070a4e7be5656 response_code=200
Symbolic Translation: 303/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a must be observed before visiting b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=61462b99b222321add7f37c91b65cfe2 response_code=200
Symbolic Translation: 304/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b but only after you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=438010c5c6304a2c564c78bfde2ca1d4 response_code=200
Symbolic Translation: 305/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b but only after you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=ab81ec8d1bf50bc04f496263f58d8703 response_code=200
Symbolic Translation: 306/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a has to be observed prior to any visit to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=b715abb0289ebc581ada59ae382a4308 response_code=200
Symbolic Translation: 307/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b has to be observed prior to any visit to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=5a08cdcf4783826456a2da97039b09b0 response_code=200
Symbolic Translation: 308/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you see a before going to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=7146e3ba4336b0fadb15d2709ac82e5b response_code=200
Symbolic Translation: 309/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you see a before going to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=adaa2303c55837046088b1b0d723fe8b response_code=200
Symbolic Translation: 310/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not make any visit to a when b remains unseen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=213955cfa92e6e186078d3514c11c76e response_code=200
Symbolic Translation: 311/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not make any visit to a when b remains unseen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=252 request_id=ad5a6ab195b546b9e27d7c9fa3b8cbaf response_code=200
Symbolic Translation: 312/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a till you observe b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=ebe013fea4d4a5cfa93dda18863dd698 response_code=200
Symbolic Translation: 313/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a till you observe b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=4590cf63ac889ae64a2f59cacb765c84 response_code=200
Symbolic Translation: 314/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing a unlocks b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=e906441c276da830bccfbc301241ed27 response_code=200
Symbolic Translation: 315/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing a unlocks b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=41be75c573913da4dfbd951ef8923e13 response_code=200
Symbolic Translation: 316/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=d1ecfc337a193201c4d9c22e8ffa339e response_code=200
Symbolic Translation: 317/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=fe0d1310b6c34b9673d7095c1bce3e8d response_code=200
Symbolic Translation: 318/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=c6ea831222f5d577e9cd34c0662ec0e5 response_code=200
Symbolic Translation: 319/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1395 request_id=9aac72c3d45b6ac4274458f3e321078a response_code=200
Symbolic Translation: 320/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1398 request_id=7f842d3a724dbd0f9917dbd102018e47 response_code=200
Symbolic Translation: 321/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=1354713e417ed35a5131f2c7be368957 response_code=200
Symbolic Translation: 322/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1397 request_id=7e5fc005d7060337a5d5377629bfc6be response_code=200
Symbolic Translation: 323/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1409 request_id=1f98892403533d8a56ba8a0fb80b6ac6 response_code=200
Symbolic Translation: 324/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times or more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1409 request_id=5d6812b8120e296563e59b58965e7558 response_code=200
Symbolic Translation: 325/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times or more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=51165170ad153c2b09605e0071c3ef2d response_code=200
Symbolic Translation: 326/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=8af30541a08d38abb0605ffe38db70f7 response_code=200
Symbolic Translation: 327/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=3d68607d8b1b1892b66d7e8b956a795f response_code=200
Symbolic Translation: 328/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1407 request_id=bb481d9b2867a5801ba04f1b8eac590f response_code=200
Symbolic Translation: 329/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=548144eedc4c9041696c2bf3a1395e5c response_code=200
Symbolic Translation: 330/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1397 request_id=9a0d6a0164dec765a24167b0c5345b18 response_code=200
Symbolic Translation: 331/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1395 request_id=8b8476496e716c9e5e1bfb233b33773f response_code=200
Symbolic Translation: 332/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: your task is to go to a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1400 request_id=784ce9a470ab0393cc8204b312f4763d response_code=200
Symbolic Translation: 333/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: your task is to go to a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1397 request_id=53b33134483047c295cf2d2cee8d8497 response_code=200
Symbolic Translation: 334/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=03fb6427c0c30685b68d9e8d3f4e34d9 response_code=200
Symbolic Translation: 335/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1391 request_id=e8c7a47198b468d576d6f1423788d6e4 response_code=200
Symbolic Translation: 336/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you visit a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1513 request_id=3c4ee25fc4a51b2e38923eb402b89a61 response_code=200
Symbolic Translation: 337/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you visit a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=baee81068321244a41fd17035d1ce5a1 response_code=200
Symbolic Translation: 338/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to reach a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1492 request_id=27885daed9d1ec51f1f291cba2fb51a5 response_code=200
Symbolic Translation: 339/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to reach a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=ff799646e8233039a9e490af63c09688 response_code=200
Symbolic Translation: 340/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a equal or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1398 request_id=888cea4986c79d6eec231456442c2916 response_code=200
Symbolic Translation: 341/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a equal or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1395 request_id=32e257cfa564ec065ca86fc0efe9b66a response_code=200
Symbolic Translation: 342/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1416 request_id=cd9b2effc77bd77616532d7a951f8c3c response_code=200
Symbolic Translation: 343/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1416 request_id=be3bd5f17637d4cc0faa067c692be286 response_code=200
Symbolic Translation: 344/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a has to be visited at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1397 request_id=18e8041d3e0a01e4c6c10dd3ac586298 response_code=200
Symbolic Translation: 345/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a has to be visited at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1409 request_id=3c7e34951cdcdef1276743d57cc4b63e response_code=200
Symbolic Translation: 346/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit and then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1472 request_id=4c6620796c11b9a7e46325c5aebeea03 response_code=200
Symbolic Translation: 347/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit and then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1409 request_id=4f2fabdf82bde3f7de67b6dff25b814c response_code=200
Symbolic Translation: 348/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1431 request_id=e0c47549b9f42457dcd5404c187ed76d response_code=200
Symbolic Translation: 349/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=b3799b70fdd7a9d94f7556ff5f3106c3 response_code=200
Symbolic Translation: 350/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must pass through a on at least five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1401 request_id=89afcf288f7e9a0263a18d27814cd60f response_code=200
Symbolic Translation: 351/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must pass through a on at least five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=67045acc50e361c3cea43e1229d0cc21 response_code=200
Symbolic Translation: 352/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the minimum number of times you must visit a is five\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1409 request_id=7db0997ffd2d44072e7b5a8a397f3c40 response_code=200
Symbolic Translation: 353/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the minimum number of times you must visit a is five\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1472 request_id=8afa295d9d5bf0ea2934ca5795c2437b response_code=200
Symbolic Translation: 354/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach a then leave a and repeat this at least four more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1166 request_id=452b81d9116639a6456cf10a195bfd2d response_code=200
Symbolic Translation: 355/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach a then leave a and repeat this at least four more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1172 request_id=be240257291fcb5b321150443b18943d response_code=200
Symbolic Translation: 356/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not complete the task without visiting a on five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1416 request_id=4c3be88bfdb40166967979bd7484f52c response_code=200
Symbolic Translation: 357/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not complete the task without visiting a on five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=47a1d15d1e063c50ac97813490f2a8e9 response_code=200
Symbolic Translation: 358/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a any fewer than five separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=fe8fb3f0480dbc2a4e5f2a81a1eb9b78 response_code=200
Symbolic Translation: 359/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a any fewer than five separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=800f6ea145521e5545a304721c006592 response_code=200
Symbolic Translation: 360/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you have at least five separate times where you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1398 request_id=aeef9a6c3940d822b6ddf0cf499983cd response_code=200
Symbolic Translation: 361/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you have at least five separate times where you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1402 request_id=82e253d5bad532f1a8c2cbdaaf1d228b response_code=200
Symbolic Translation: 362/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1412 request_id=6816ffba07cf5a40c78907aaf75946b9 response_code=200
Symbolic Translation: 363/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1397 request_id=7aa4e02a03a95f007f1d2d804c00235b response_code=200
Symbolic Translation: 364/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=f86ef172b180826beceaa407705cf7e5 response_code=200
Symbolic Translation: 365/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1395 request_id=bfb2a12004833999d643ddef66198360 response_code=200
Symbolic Translation: 366/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=fd2a5142e4d90304ccb893cbd1b03f13 response_code=200
Symbolic Translation: 367/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1411 request_id=1ae06230051dd6a8c6379b5ac9a14568 response_code=200
Symbolic Translation: 368/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=2db7dcf55ada3c49df477120eea63bcd response_code=200
Symbolic Translation: 369/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1398 request_id=2c97907b6d3d159451eeae4a4427ca53 response_code=200
Symbolic Translation: 370/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must reach a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=7a2d482340f3104ddce8f5a1db0bd0e7 response_code=200
Symbolic Translation: 371/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must reach a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=8923a16c0a2ef32e0a6704220ce4226c response_code=200
Symbolic Translation: 372/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: navigate to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1400 request_id=a18ab998e1c8f29a0f6d7742de1494fa response_code=200
Symbolic Translation: 373/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: navigate to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=5df39d7dc720fc4ce761a7f7516daa77 response_code=200
Symbolic Translation: 374/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times no more no less\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=6497 request_id=73f031e5f2c536297a1b96e2cbb556b8 response_code=200
Symbolic Translation: 375/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times no more no less\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1479 request_id=85b7521e3f36b345cf6a910ba3cefa3c response_code=200
Symbolic Translation: 376/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a and you can not go there more or less than three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1400 request_id=4cb9232a4517a4b0a4385795f9dea802 response_code=200
Symbolic Translation: 377/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a and you can not go there more or less than three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1398 request_id=32753c61a50cbb08891c9512ed3eebf3 response_code=200
Symbolic Translation: 378/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a more or less than three times is prohibited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1422 request_id=f02ee731a1f228527fb00954104bd1cb response_code=200
Symbolic Translation: 379/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a more or less than three times is prohibited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=d41275c807d7dc6a4c5692ff56a12711 response_code=200
Symbolic Translation: 380/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a three times and do not visit it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1400 request_id=17b4ca48dd3cdaf22bc72a89863492a0 response_code=200
Symbolic Translation: 381/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a three times and do not visit it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=1be9e3dc87ae20619ed79c6f02fa6f4c response_code=200
Symbolic Translation: 382/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1458 request_id=5d89b84f86784c15ef4faf6a350f1b0b response_code=200
Symbolic Translation: 383/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1395 request_id=35911640a2db9f1eab676f082aba4bf1 response_code=200
Symbolic Translation: 384/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and never revisit it again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=e6f4351ca95003088a2e75822d1c0fc8 response_code=200
Symbolic Translation: 385/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and never revisit it again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=87001267b255133f1a693f503164d88e response_code=200
Symbolic Translation: 386/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=71c4f1d710e174d68045f90dfce8022f response_code=200
Symbolic Translation: 387/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=863f4530d6a35cb344b1a40ffd1b06bc response_code=200
Symbolic Translation: 388/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and then stop visiting it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1417 request_id=8e45c46644bf0d02fe8d89e3dd8826ce response_code=200
Symbolic Translation: 389/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and then stop visiting it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1395 request_id=30d9cdf4149aedec88ca105a74df0b77 response_code=200
Symbolic Translation: 390/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are required to visit a on exactly three separate instances\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1531 request_id=4c8f24d73baa0dbb6aca0749919fa105 response_code=200
Symbolic Translation: 391/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are required to visit a on exactly three separate instances\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1181 request_id=4901cd22347155d3e239bdae1475a1f2 response_code=200
Symbolic Translation: 392/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the required number of separate visits to a is exactly three\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=3bf32e14d9f041cb9dcc3df0f832f532 response_code=200
Symbolic Translation: 393/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the required number of separate visits to a is exactly three\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1398 request_id=f5c1015614c302913e947be4181966fd response_code=200
Symbolic Translation: 394/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=bb97d670a1c897d7ed7a44e5a5ec13c7 response_code=200
Symbolic Translation: 395/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=9ac609971a86d9fba5c1c1034e9e7669 response_code=200
Symbolic Translation: 396/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: pass through a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=e50c47b8c1f56467774a7c974367f71f response_code=200
Symbolic Translation: 397/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: pass through a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1398 request_id=804445d9b4ba42a9d31f909fe7d752ce response_code=200
Symbolic Translation: 398/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a and then repeat this exactly two more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 431
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1626 request_id=587660e67fd7365bb300c12945cb9f2a response_code=200
Symbolic Translation: 399/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a and then repeat this exactly two more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 431
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1636 request_id=a191e8e6f995eea6eefa6c4042889c33 response_code=200
Symbolic Translation: 400/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure that you have exactly three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1398 request_id=2a3735f4bbad5f15d2cd6806473600bf response_code=200
Symbolic Translation: 401/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure that you have exactly three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=66c8388347421fd5bb5a94f9ef3a2bec response_code=200
Symbolic Translation: 402/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not exceed or fall short on three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 367
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=c206eafbfba52a65c592ef2329553e5a response_code=200
Symbolic Translation: 403/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not exceed or fall short on three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 367
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=5eb9f3b756d8a0f752b12266ae676d5f response_code=200
Symbolic Translation: 404/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b once you have visited a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=483 request_id=238d1a0c7cbe37473fd66b5b44d60356 response_code=200
Symbolic Translation: 405/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a once you have visited b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=494 request_id=aa4dc6b5315f6c357241ae879729ffe1 response_code=200
Symbolic Translation: 406/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a once you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=9bc2bbdc57a0ac9862f9e9b224d1c448 response_code=200
Symbolic Translation: 407/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a once you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=252 request_id=dfa1f3e0afe64a926db94688ab22d668 response_code=200
Symbolic Translation: 408/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you visit a you can not visit b afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=260 request_id=a4e53b801ca888b635949de1c9391f80 response_code=200
Symbolic Translation: 409/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you visit b you can not visit a afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=258 request_id=bb1915af6303da2c33b4ca8b79646df1 response_code=200
Symbolic Translation: 410/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once a is visited you can not go to b any more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=9c879ecf5bff37b16a3378cf7b765ca9 response_code=200
Symbolic Translation: 411/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once b is visited you can not go to a any more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=df4c3f7686a0e2a4c17976c54e6f244e response_code=200
Symbolic Translation: 412/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit a before b is visited but you can never visit a afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=9be860c84db94a7a77867d1b074854e8 response_code=200
Symbolic Translation: 413/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b before a is visited but you can never visit b afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=0ec80ebb7479e6b612e347465072cdfe response_code=200
Symbolic Translation: 414/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you go to a you have to avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=339844d3ceeadae2b41389c5d6e996b0 response_code=200
Symbolic Translation: 415/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you go to a you have to avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=73a8a5274f9e75ff6a9d83b3961fc484 response_code=200
Symbolic Translation: 416/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a only after you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=69cc7cf1ecc5cfd84e228beea0715b9b response_code=200
Symbolic Translation: 417/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a only after you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=1c8be3b63f9befce6d9848843d082457 response_code=200
Symbolic Translation: 418/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you have gone to a you must stay away from b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=254 request_id=7b77fe46e171353660d94dadc942dfb7 response_code=200
Symbolic Translation: 419/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you have gone to b you must stay away from a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=effe74d7acb978a386c35287d6c89581 response_code=200
Symbolic Translation: 420/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must stay away from a once you have gone to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=e526029f8e3451bc76c5ddd1f2ba250c response_code=200
Symbolic Translation: 421/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must stay away from a once you have gone to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=122e516e302a5673d228c1573da61587 response_code=200
Symbolic Translation: 422/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not move to b after you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=eda1e6c26f2e9135d1d52dd5da78d199 response_code=200
Symbolic Translation: 423/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not move to b after you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=254 request_id=1273ab416cf12b40b5489237c3c53ce4 response_code=200
Symbolic Translation: 424/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you reach a you can not move to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=e7cda765daed800581d60cc291fa52f5 response_code=200
Symbolic Translation: 425/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you reach a you can not move to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=1819a69e91a3709ca93ea1d95b3e40c7 response_code=200
Symbolic Translation: 426/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you go to a you have to avoid b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=251 request_id=52f3f0f166db361d61b20fcf5fe10feb response_code=200
Symbolic Translation: 427/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you go to b you have to avoid a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=2bf84b64d9377e78f8714a683abe619d response_code=200
Symbolic Translation: 428/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid b once you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=9961b99e82356f58e961f0de0304f9ff response_code=200
Symbolic Translation: 429/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid b once you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=254914101ea0eabab69c1fcb8d68f617 response_code=200
Symbolic Translation: 430/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit b after a is visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=255 request_id=2f4b61760f9d0e669772da8cc1a880b2 response_code=200
Symbolic Translation: 431/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit b after a is visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=f9689e31de7ad484f595c82844aab903 response_code=200
Symbolic Translation: 432/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go to b but you must not go to a after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=2a0b6417d661ec648ed1ff3a032e033b response_code=200
Symbolic Translation: 433/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go to a but you must not go to b after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=36905e3e92a99c27373a67bb946e227b response_code=200
Symbolic Translation: 434/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: any visit to b is not allowed after you visit a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=d4fd2bcf09c3da103ff458f0c5797f64 response_code=200
Symbolic Translation: 435/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: any visit to a is not allowed after you visit b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=15d00973f315edbec7755d23ae1d1f7b response_code=200
Symbolic Translation: 436/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once a is reached after that you can never visit b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=981ec6cf3615b23992ce83f82b4291fd response_code=200
Symbolic Translation: 437/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once b is reached after that you can never visit a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=b70dd9cc6932bade5746d8fa19fcb0f2 response_code=200
Symbolic Translation: 438/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a can never be visited once b occurs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=07deac113f9ab8b09ef187573d830d73 response_code=200
Symbolic Translation: 439/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a can never be visited once b occurs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=252 request_id=d8ffb39d6ff1c82bf6db256ed48666df response_code=200
Symbolic Translation: 440/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you go to a you can never go to b after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=252 request_id=029b427ea5c3668a81862f7baaf6a09f response_code=200
Symbolic Translation: 441/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you go to a you can never go to b after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=243 request_id=e8bdc269c38a448ea2cca9e2c0183b09 response_code=200
Symbolic Translation: 442/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if b happens that prevents a from happening afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=39c56fe35095723ac47ebfecca87fbca response_code=200
Symbolic Translation: 443/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if b happens that prevents a from happening afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=328690a7c0dae95c29fb4777159426d9 response_code=200
Symbolic Translation: 444/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you visit b you are not allowed to reach a afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=d728b294db12777e29d92a7f9ba50e2d response_code=200
Symbolic Translation: 445/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you visit a you are not allowed to reach b afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=252 request_id=cf549cb2f3a063f8a1ecffba47d91e01 response_code=200
Symbolic Translation: 446/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: whenever you observe b this locks a from becoming true from the next instance\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=f4b4a525642db27bc6fd28eae3c09cd9 response_code=200
Symbolic Translation: 447/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: whenever you observe b this locks a from becoming true from the next instance\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=1c6ce71ae9c5463e95e3e19e912171a8 response_code=200
Symbolic Translation: 448/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing a locks b from being true for all time instances starting from the next one\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=251 request_id=8ecbf0452f0f6d06b2af9c5a7d39269a response_code=200
Symbolic Translation: 449/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing b locks a from being true for all time instances starting from the next one\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=fe38f3ea6ab51fc5de5f44a6cb5905f1 response_code=200
Symbolic Translation: 450/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you get to b you must avoid a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=4bdfa39629d76f95b5c1c987843ebde3 response_code=200
Symbolic Translation: 451/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you get to a you must avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=d91597b6e784dfa5730b8dc9c64301f5 response_code=200
Syntax error OR formula too long:
& F baird_&_warner & F ruk_sushi_&_thai & F little_nest_care & F central_&_devon_nb F edgebrook_coffee_ship
& F baird_&_warner & F little_nest_care & F ruk_sushi_&_thai & F edgebrook_coffee_ship F central_&_devon_nb
shorten LTLs:
& F a & F b & F c & F d F h
& F a & F c & F b & F h F d

Syntax error OR formula too long:
& F terrys_place & F currency_change & F baird_&_warner & F becker_roofing_company F ruk_sushi_&_thai
& F currency_change & F terrys_place & F ruk_sushi_&_thai & F baird_&_warner F becker_roofing_company
shorten LTLs:
& F a & F b & F c & F d F h
& F b & F a & F h & F c F d

Syntax error OR formula too long:
& F edgebrook_coffee_ship & F my_sisters_closet & F ace_hardware & F north_branch_arts F central_&_devon_sb
& F my_sisters_closet & F edgebrook_coffee_ship & F central_&_devon_sb & F ace_hardware F north_branch_arts
shorten LTLs:
& F a & F b & F c & F d F h
& F b & F a & F h & F c F d

Syntax error OR formula too long:
& F lee_nails & F local_goods_chicago & F edgebrook_coffee_ship & F my_sisters_closet F central_&_devon_nb
& F my_sisters_closet & F central_&_devon_nb & F lee_nails & F local_goods_chicago F edgebrook_coffee_ship
shorten LTLs:
& F a & F b & F c & F d F h
& F d & F h & F a & F b F c

Syntax error OR formula too long:
& F central_&_devon_sb & F currency_change & F associated_bank & F north_branch_arts F central_&_devon_nb
& F north_branch_arts & F central_&_devon_nb & F central_&_devon_sb & F currency_change F associated_bank
shorten LTLs:
& F a & F b & F c & F d F h
& F d & F h & F a & F b F c

Syntax error OR formula too long:
& F edward_jones & F ruk_sushi_&_thai & F dominos & F edgebrook_coffee_ship F central_&_devon_sb
& F ruk_sushi_&_thai & F edward_jones & F dominos & F edgebrook_coffee_ship F central_&_devon_sb
shorten LTLs:
& F a & F b & F c & F d F h
& F b & F a & F c & F d F h

Syntax error OR formula too long:
& & U ! local_goods_chicago central_&_devon_sb & U ! starbucks local_goods_chicago & U ! north_branch_arts starbucks F north_branch_arts & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago starbucks U ! starbucks U starbucks U ! starbucks north_branch_arts
& & U ! local_goods_chicago central_&_devon_sb & U ! starbucks local_goods_chicago & U ! north_branch_arts starbucks F north_branch_arts & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago starbucks & U ! starbucks U starbucks U ! starbucks north_branch_arts
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! us_post_office north_branch_arts & U ! currency_change us_post_office & U ! kanellos_shoe_repair currency_change F kanellos_shoe_repair & U ! north_branch_arts U north_branch_arts U ! north_branch_arts us_post_office & U ! us_post_office U us_post_office U ! us_post_office currency_change U ! currency_change U currency_change U ! currency_change kanellos_shoe_repair
& & U ! us_post_office north_branch_arts & U ! currency_change us_post_office & U ! kanellos_shoe_repair currency_change F kanellos_shoe_repair & U ! north_branch_arts U north_branch_arts U ! north_branch_arts us_post_office & U ! us_post_office U us_post_office U ! us_post_office currency_change & U ! currency_change U currency_change U ! currency_change kanellos_shoe_repair
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! ace_hardware starbucks & U ! lee_nails ace_hardware & U ! us_post_office lee_nails F us_post_office & U ! starbucks U starbucks U ! starbucks ace_hardware & U ! ace_hardware U ace_hardware U ! ace_hardware lee_nails U ! lee_nails U lee_nails U ! lee_nails us_post_office
& & U ! ace_hardware starbucks & U ! lee_nails ace_hardware & U ! us_post_office lee_nails F us_post_office & U ! starbucks U starbucks U ! starbucks ace_hardware & U ! ace_hardware U ace_hardware U ! ace_hardware lee_nails & U ! lee_nails U lee_nails U ! lee_nails us_post_office
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! creativo_academy associated_bank & U ! currency_change creativo_academy & U ! central_&_devon_sb currency_change F central_&_devon_sb & U ! associated_bank U associated_bank U ! associated_bank creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy currency_change U ! currency_change U currency_change U ! currency_change central_&_devon_sb
& & U ! creativo_academy associated_bank & U ! currency_change creativo_academy & U ! central_&_devon_sb currency_change F central_&_devon_sb & U ! associated_bank U associated_bank U ! associated_bank creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy currency_change & U ! currency_change U currency_change U ! currency_change central_&_devon_sb
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! starbucks central_&_devon_nb & U ! associated_bank starbucks & U ! dominos associated_bank F dominos & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb starbucks & U ! starbucks U starbucks U ! starbucks associated_bank U ! associated_bank U associated_bank U ! associated_bank dominos
& & U ! starbucks central_&_devon_nb & U ! associated_bank starbucks & U ! dominos associated_bank F dominos & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb starbucks & U ! starbucks U starbucks U ! starbucks associated_bank & U ! associated_bank U associated_bank U ! associated_bank dominos
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! terrys_place king_pho & U ! kanellos_shoe_repair terrys_place & U ! local_goods_chicago kanellos_shoe_repair F local_goods_chicago & U ! king_pho U king_pho U ! king_pho terrys_place & U ! terrys_place U terrys_place U ! terrys_place kanellos_shoe_repair U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair local_goods_chicago
& & U ! terrys_place king_pho & U ! kanellos_shoe_repair terrys_place & U ! local_goods_chicago kanellos_shoe_repair F local_goods_chicago & U ! king_pho U king_pho U ! king_pho terrys_place & U ! terrys_place U terrys_place U ! terrys_place kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair local_goods_chicago
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! creativo_academy becker_roofing_company & U ! local_goods_chicago creativo_academy & U ! terrys_place local_goods_chicago F terrys_place & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy local_goods_chicago U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago terrys_place
& & U ! creativo_academy becker_roofing_company & U ! local_goods_chicago creativo_academy & U ! terrys_place local_goods_chicago F terrys_place & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago terrys_place
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! central_&_devon_sb central_&_devon_nb & U ! us_post_office central_&_devon_sb & U ! edward_jones us_post_office F edward_jones & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb us_post_office U ! us_post_office U us_post_office U ! us_post_office edward_jones
& & U ! central_&_devon_sb central_&_devon_nb & U ! us_post_office central_&_devon_sb & U ! edward_jones us_post_office F edward_jones & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb us_post_office & U ! us_post_office U us_post_office U ! us_post_office edward_jones
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! associated_bank terrys_place & U ! dominos associated_bank & U ! kanellos_shoe_repair dominos F kanellos_shoe_repair & U ! terrys_place U terrys_place U ! terrys_place associated_bank & U ! associated_bank U associated_bank U ! associated_bank dominos U ! dominos U dominos U ! dominos kanellos_shoe_repair
& & U ! associated_bank terrys_place & U ! dominos associated_bank & U ! kanellos_shoe_repair dominos F kanellos_shoe_repair & U ! terrys_place U terrys_place U ! terrys_place associated_bank & U ! associated_bank U associated_bank U ! associated_bank dominos & U ! dominos U dominos U ! dominos kanellos_shoe_repair
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! lee_nails local_goods_chicago & U ! central_&_devon_sb lee_nails & U ! north_branch_arts central_&_devon_sb F north_branch_arts & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago lee_nails & U ! lee_nails U lee_nails U ! lee_nails central_&_devon_sb U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb north_branch_arts
& & U ! lee_nails local_goods_chicago & U ! central_&_devon_sb lee_nails & U ! north_branch_arts central_&_devon_sb F north_branch_arts & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago lee_nails & U ! lee_nails U lee_nails U ! lee_nails central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb north_branch_arts
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! kanellos_shoe_repair king_pho & U ! little_nest_care kanellos_shoe_repair & U ! us_post_office little_nest_care F us_post_office & U ! king_pho U king_pho U ! king_pho kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair little_nest_care U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office
& & U ! kanellos_shoe_repair king_pho & U ! little_nest_care kanellos_shoe_repair & U ! us_post_office little_nest_care F us_post_office & U ! king_pho U king_pho U ! king_pho kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! my_sisters_closet little_nest_care & U ! kanellos_shoe_repair my_sisters_closet & U ! associated_bank kanellos_shoe_repair F associated_bank & U ! little_nest_care U little_nest_care U ! little_nest_care my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet kanellos_shoe_repair U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair associated_bank
& & U ! my_sisters_closet little_nest_care & U ! kanellos_shoe_repair my_sisters_closet & U ! associated_bank kanellos_shoe_repair F associated_bank & U ! little_nest_care U little_nest_care U ! little_nest_care my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair associated_bank
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! ace_hardware central_&_devon_sb & U ! baird_&_warner ace_hardware & U ! kanellos_shoe_repair baird_&_warner F kanellos_shoe_repair & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb ace_hardware & U ! ace_hardware U ace_hardware U ! ace_hardware baird_&_warner U ! baird_&_warner U baird_&_warner U ! baird_&_warner kanellos_shoe_repair
& & U ! ace_hardware central_&_devon_sb & U ! baird_&_warner ace_hardware & U ! kanellos_shoe_repair baird_&_warner F kanellos_shoe_repair & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb ace_hardware & U ! ace_hardware U ace_hardware U ! ace_hardware baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner kanellos_shoe_repair
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! currency_change local_goods_chicago & U ! becker_roofing_company currency_change & U ! ruk_sushi_&_thai becker_roofing_company F ruk_sushi_&_thai & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago currency_change & U ! currency_change U currency_change U ! currency_change becker_roofing_company U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company ruk_sushi_&_thai
& & U ! currency_change local_goods_chicago & U ! becker_roofing_company currency_change & U ! ruk_sushi_&_thai becker_roofing_company F ruk_sushi_&_thai & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago currency_change & U ! currency_change U currency_change U ! currency_change becker_roofing_company & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company ruk_sushi_&_thai
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! king_pho baird_&_warner & U ! north_branch_arts king_pho & U ! ruk_sushi_&_thai north_branch_arts F ruk_sushi_&_thai & U ! baird_&_warner U baird_&_warner U ! baird_&_warner king_pho & U ! king_pho U king_pho U ! king_pho north_branch_arts U ! north_branch_arts U north_branch_arts U ! north_branch_arts ruk_sushi_&_thai
& & U ! king_pho baird_&_warner & U ! north_branch_arts king_pho & U ! ruk_sushi_&_thai north_branch_arts F ruk_sushi_&_thai & U ! baird_&_warner U baird_&_warner U ! baird_&_warner king_pho & U ! king_pho U king_pho U ! king_pho north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts ruk_sushi_&_thai
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! terrys_place ace_hardware & U ! my_sisters_closet terrys_place & U ! ruk_sushi_&_thai my_sisters_closet F ruk_sushi_&_thai & U ! ace_hardware U ace_hardware U ! ace_hardware terrys_place & U ! terrys_place U terrys_place U ! terrys_place my_sisters_closet U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet ruk_sushi_&_thai
& & U ! terrys_place ace_hardware & U ! my_sisters_closet terrys_place & U ! ruk_sushi_&_thai my_sisters_closet F ruk_sushi_&_thai & U ! ace_hardware U ace_hardware U ! ace_hardware terrys_place & U ! terrys_place U terrys_place U ! terrys_place my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet ruk_sushi_&_thai
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! king_pho creativo_academy & U ! currency_change king_pho & U ! north_branch_arts currency_change F north_branch_arts & U ! creativo_academy U creativo_academy U ! creativo_academy king_pho & U ! king_pho U king_pho U ! king_pho currency_change U ! currency_change U currency_change U ! currency_change north_branch_arts
& & U ! king_pho creativo_academy & U ! currency_change king_pho & U ! north_branch_arts currency_change F north_branch_arts & U ! creativo_academy U creativo_academy U ! creativo_academy king_pho & U ! king_pho U king_pho U ! king_pho currency_change & U ! currency_change U currency_change U ! currency_change north_branch_arts
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! ruk_sushi_&_thai currency_change & U ! king_pho ruk_sushi_&_thai & U ! terrys_place king_pho F terrys_place & U ! currency_change U currency_change U ! currency_change ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai king_pho U ! king_pho U king_pho U ! king_pho terrys_place
& & U ! ruk_sushi_&_thai currency_change & U ! king_pho ruk_sushi_&_thai & U ! terrys_place king_pho F terrys_place & U ! currency_change U currency_change U ! currency_change ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai king_pho & U ! king_pho U king_pho U ! king_pho terrys_place
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! central_&_devon_nb becker_roofing_company & U ! edward_jones central_&_devon_nb & U ! north_branch_arts edward_jones F north_branch_arts & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb edward_jones U ! edward_jones U edward_jones U ! edward_jones north_branch_arts
& & U ! central_&_devon_nb becker_roofing_company & U ! edward_jones central_&_devon_nb & U ! north_branch_arts edward_jones F north_branch_arts & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb edward_jones & U ! edward_jones U edward_jones U ! edward_jones north_branch_arts
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! central_&_devon_nb baird_&_warner & U ! associated_bank central_&_devon_nb & U ! ruk_sushi_&_thai associated_bank F ruk_sushi_&_thai & U ! baird_&_warner U baird_&_warner U ! baird_&_warner central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb associated_bank U ! associated_bank U associated_bank U ! associated_bank ruk_sushi_&_thai
& & U ! central_&_devon_nb baird_&_warner & U ! associated_bank central_&_devon_nb & U ! ruk_sushi_&_thai associated_bank F ruk_sushi_&_thai & U ! baird_&_warner U baird_&_warner U ! baird_&_warner central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb associated_bank & U ! associated_bank U associated_bank U ! associated_bank ruk_sushi_&_thai
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! us_post_office lee_nails & U ! central_&_devon_nb us_post_office & U ! creativo_academy central_&_devon_nb F creativo_academy & U ! lee_nails U lee_nails U ! lee_nails us_post_office & U ! us_post_office U us_post_office U ! us_post_office central_&_devon_nb U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb creativo_academy
& & U ! us_post_office lee_nails & U ! central_&_devon_nb us_post_office & U ! creativo_academy central_&_devon_nb F creativo_academy & U ! lee_nails U lee_nails U ! lee_nails us_post_office & U ! us_post_office U us_post_office U ! us_post_office central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb creativo_academy
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! ruk_sushi_&_thai starbucks & U ! central_&_devon_sb ruk_sushi_&_thai & U ! north_branch_arts central_&_devon_sb F north_branch_arts & U ! starbucks U starbucks U ! starbucks ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai central_&_devon_sb U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb north_branch_arts
& & U ! ruk_sushi_&_thai starbucks & U ! central_&_devon_sb ruk_sushi_&_thai & U ! north_branch_arts central_&_devon_sb F north_branch_arts & U ! starbucks U starbucks U ! starbucks ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb north_branch_arts
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! edgebrook_coffee_ship starbucks & U ! north_branch_arts edgebrook_coffee_ship & U ! baird_&_warner north_branch_arts F baird_&_warner & U ! starbucks U starbucks U ! starbucks edgebrook_coffee_ship & U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship north_branch_arts U ! north_branch_arts U north_branch_arts U ! north_branch_arts baird_&_warner
& & U ! edgebrook_coffee_ship starbucks & U ! north_branch_arts edgebrook_coffee_ship & U ! baird_&_warner north_branch_arts F baird_&_warner & U ! starbucks U starbucks U ! starbucks edgebrook_coffee_ship & U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts baird_&_warner
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! us_post_office little_nest_care & U ! edgebrook_coffee_ship us_post_office & U ! starbucks edgebrook_coffee_ship F starbucks & U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office & U ! us_post_office U us_post_office U ! us_post_office edgebrook_coffee_ship U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship starbucks
& & U ! us_post_office little_nest_care & U ! edgebrook_coffee_ship us_post_office & U ! starbucks edgebrook_coffee_ship F starbucks & U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office & U ! us_post_office U us_post_office U ! us_post_office edgebrook_coffee_ship & U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship starbucks
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! us_post_office starbucks & U ! creativo_academy us_post_office & U ! king_pho creativo_academy F king_pho & U ! starbucks U starbucks U ! starbucks us_post_office & U ! us_post_office U us_post_office U ! us_post_office creativo_academy U ! creativo_academy U creativo_academy U ! creativo_academy king_pho
& & U ! us_post_office starbucks & U ! creativo_academy us_post_office & U ! king_pho creativo_academy F king_pho & U ! starbucks U starbucks U ! starbucks us_post_office & U ! us_post_office U us_post_office U ! us_post_office creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy king_pho
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! little_nest_care creativo_academy & U ! north_branch_arts little_nest_care & U ! ace_hardware north_branch_arts F ace_hardware & U ! creativo_academy U creativo_academy U ! creativo_academy little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care north_branch_arts U ! north_branch_arts U north_branch_arts U ! north_branch_arts ace_hardware
& & U ! little_nest_care creativo_academy & U ! north_branch_arts little_nest_care & U ! ace_hardware north_branch_arts F ace_hardware & U ! creativo_academy U creativo_academy U ! creativo_academy little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts ace_hardware
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! kanellos_shoe_repair dominos & U ! lee_nails kanellos_shoe_repair & U ! starbucks lee_nails F starbucks & U ! dominos U dominos U ! dominos kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair lee_nails U ! lee_nails U lee_nails U ! lee_nails starbucks
& & U ! kanellos_shoe_repair dominos & U ! lee_nails kanellos_shoe_repair & U ! starbucks lee_nails F starbucks & U ! dominos U dominos U ! dominos kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair lee_nails & U ! lee_nails U lee_nails U ! lee_nails starbucks
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! north_branch_arts becker_roofing_company & U ! ruk_sushi_&_thai north_branch_arts & U ! little_nest_care ruk_sushi_&_thai F little_nest_care & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts ruk_sushi_&_thai U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai little_nest_care
& & U ! north_branch_arts becker_roofing_company & U ! ruk_sushi_&_thai north_branch_arts & U ! little_nest_care ruk_sushi_&_thai F little_nest_care & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai little_nest_care
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! dominos local_goods_chicago & U ! little_nest_care dominos & U ! central_&_devon_nb little_nest_care F central_&_devon_nb & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago dominos & U ! dominos U dominos U ! dominos little_nest_care U ! little_nest_care U little_nest_care U ! little_nest_care central_&_devon_nb
& & U ! dominos local_goods_chicago & U ! little_nest_care dominos & U ! central_&_devon_nb little_nest_care F central_&_devon_nb & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago dominos & U ! dominos U dominos U ! dominos little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care central_&_devon_nb
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! baird_&_warner dominos & U ! king_pho baird_&_warner & U ! lee_nails king_pho F lee_nails & U ! dominos U dominos U ! dominos baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner king_pho U ! king_pho U king_pho U ! king_pho lee_nails
& & U ! baird_&_warner dominos & U ! king_pho baird_&_warner & U ! lee_nails king_pho F lee_nails & U ! dominos U dominos U ! dominos baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner king_pho & U ! king_pho U king_pho U ! king_pho lee_nails
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! creativo_academy starbucks & U ! my_sisters_closet creativo_academy & U ! central_&_devon_nb my_sisters_closet F central_&_devon_nb & U ! starbucks U starbucks U ! starbucks creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy my_sisters_closet U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet central_&_devon_nb
& & U ! creativo_academy starbucks & U ! my_sisters_closet creativo_academy & U ! central_&_devon_nb my_sisters_closet F central_&_devon_nb & U ! starbucks U starbucks U ! starbucks creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet central_&_devon_nb
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! local_goods_chicago lee_nails & U ! becker_roofing_company local_goods_chicago & U ! creativo_academy becker_roofing_company F creativo_academy & U ! lee_nails U lee_nails U ! lee_nails local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago becker_roofing_company U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company creativo_academy
& & U ! local_goods_chicago lee_nails & U ! becker_roofing_company local_goods_chicago & U ! creativo_academy becker_roofing_company F creativo_academy & U ! lee_nails U lee_nails U ! lee_nails local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago becker_roofing_company & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company creativo_academy
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! starbucks central_&_devon_nb & U ! little_nest_care starbucks & U ! us_post_office little_nest_care F us_post_office & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb starbucks & U ! starbucks U starbucks U ! starbucks little_nest_care U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office
& & U ! starbucks central_&_devon_nb & U ! little_nest_care starbucks & U ! us_post_office little_nest_care F us_post_office & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb starbucks & U ! starbucks U starbucks U ! starbucks little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! central_&_devon_sb us_post_office & U ! lee_nails central_&_devon_sb & U ! starbucks lee_nails F starbucks & U ! us_post_office U us_post_office U ! us_post_office central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb lee_nails U ! lee_nails U lee_nails U ! lee_nails starbucks
& & U ! central_&_devon_sb us_post_office & U ! lee_nails central_&_devon_sb & U ! starbucks lee_nails F starbucks & U ! us_post_office U us_post_office U ! us_post_office central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb lee_nails & U ! lee_nails U lee_nails U ! lee_nails starbucks
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! dominos central_&_devon_sb & U ! my_sisters_closet dominos & U ! terrys_place my_sisters_closet F terrys_place & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb dominos & U ! dominos U dominos U ! dominos my_sisters_closet U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet terrys_place
& & U ! dominos central_&_devon_sb & U ! my_sisters_closet dominos & U ! terrys_place my_sisters_closet F terrys_place & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb dominos & U ! dominos U dominos U ! dominos my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet terrys_place
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! baird_&_warner associated_bank & U ! creativo_academy baird_&_warner & U ! king_pho creativo_academy F king_pho & U ! associated_bank U associated_bank U ! associated_bank baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner creativo_academy U ! creativo_academy U creativo_academy U ! creativo_academy king_pho
& & U ! baird_&_warner associated_bank & U ! creativo_academy baird_&_warner & U ! king_pho creativo_academy F king_pho & U ! associated_bank U associated_bank U ! associated_bank baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy king_pho
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& G F kanellos_shoe_repair & G F king_pho & G F north_branch_arts G F baird_&_warner
& G F king_pho & G F kanellos_shoe_repair & G F north_branch_arts G F baird_&_warner
shorten LTLs:
& G F a & G F b & G F c G F d
& G F b & G F a & G F c G F d

Syntax error OR formula too long:
& G F baird_&_warner & G F us_post_office & G F local_goods_chicago G F dominos
& G F us_post_office & G F local_goods_chicago & G F dominos G F baird_&_warner
shorten LTLs:
& G F a & G F b & G F c G F d
& G F b & G F c & G F d G F a

Syntax error OR formula too long:
& G F kanellos_shoe_repair & G F edgebrook_coffee_ship & G F edward_jones G F baird_&_warner
& & U ! kanellos_shoe_repair edward_jones & U ! baird_&_warner kanellos_shoe_repair & U ! edgebrook_coffee_ship baird_&_warner F edgebrook_coffee_ship & U ! edward_jones U edward_jones U ! edward_jones kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner edgebrook_coffee_ship
shorten LTLs:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b

Syntax error:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b

Syntax error OR formula too long:
& G F my_sisters_closet & G F north_branch_arts & G F kanellos_shoe_repair G F baird_&_warner
& & U ! my_sisters_closet kanellos_shoe_repair & U ! baird_&_warner my_sisters_closet & U ! north_branch_arts baird_&_warner F north_branch_arts & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner north_branch_arts
shorten LTLs:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b

Syntax error:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b

Syntax error OR formula too long:
& G F associated_bank & G F us_post_office & G F central_&_devon_nb G F terrys_place
& G F associated_bank & G F us_post_office G F central_&_devon_nb
Syntax error OR formula too long:
& G F us_post_office & G F starbucks & G F edward_jones G F central_&_devon_nb
& G F edward_jones & G F us_post_office & G F starbucks G F central_&_devon_nb
shorten LTLs:
& G F a & G F b & G F c G F d
& G F c & G F a & G F b G F d

Syntax error OR formula too long:
& G ! dominos & G ! becker_roofing_company & G ! little_nest_care G ! central_&_devon_sb
& G ! becker_roofing_company & G ! little_nest_care & G ! central_&_devon_sb G dominos
shorten LTLs:
& G ! a & G ! b & G ! c G ! d
& G ! b & G ! c & G ! d G a

Syntax error OR formula too long:
& G ! us_post_office & G ! local_goods_chicago & G ! central_&_devon_nb G ! edward_jones
& G ! local_goods_chicago & G ! central_&_devon_nb & G ! us_post_office & G ! edward_jones G local_goods_chicago & G central_&_devon_nb & G us_post_office & G edward_jones G ! local_goods_chicago G local_goods_chicago G ! central_&_devon_nb G central_&_devon_nb G ! us_post_office G us_post_office G ! edward_jones G edward_jones
shorten LTLs:
& G ! a & G ! b & G ! c G ! d
& G ! b & G ! c & G ! a & G ! d G b & G c & G a & G d G ! b G b G ! c G c G ! a G a G ! d G d

Syntax error:
& G ! a & G ! b & G ! c G ! d
& G ! b & G ! c & G ! a & G ! d G b & G c & G a & G d G ! b G b G ! c G c G ! a G a G ! d G d

Syntax error OR formula too long:
& G ! becker_roofing_company & G ! king_pho & G ! associated_bank G ! central_&_devon_nb
& G ! king_pho & G ! associated_bank & G ! becker_roofing_company G ! central_&_devon_nb
shorten LTLs:
& G ! a & G ! b & G ! c G ! d
& G ! b & G ! c & G ! a G ! d

Syntax error OR formula too long:
& G ! central_&_devon_sb & G ! ruk_sushi_&_thai & G ! king_pho & G ! little_nest_care G ! central_&_devon_nb
& G ! ruk_sushi_&_thai & G ! king_pho & G ! little_nest_care G ! central_&_devon_nb
shorten LTLs:
& G ! a & G ! b & G ! c & G ! d G ! h
& G ! b & G ! c & G ! d G ! h

Syntax error OR formula too long:
& G ! little_nest_care & G ! ruk_sushi_&_thai & G ! local_goods_chicago & G ! creativo_academy G ! central_&_devon_nb
& G ! ruk_sushi_&_thai & G ! local_goods_chicago & G ! creativo_academy G ! central_&_devon_nb
shorten LTLs:
& G ! a & G ! b & G ! c & G ! d G ! h
& G ! b & G ! c & G ! d G ! h

Syntax error OR formula too long:
U ! dominos central_&_devon_sb
U dominos central_&_devon_sb
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
U ! us_post_office ruk_sushi_&_thai
U us_post_office ruk_sushi_&_thai
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
U ! associated_bank central_&_devon_sb
U associated_bank central_&_devon_sb
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
U ! central_&_devon_nb baird_&_warner
& U ! central_&_devon_nb baird_&_warner F central_&_devon_nb
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! ruk_sushi_&_thai currency_change
& U ! ruk_sushi_&_thai currency_change F ruk_sushi_&_thai
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! ruk_sushi_&_thai north_branch_arts
& U ! ruk_sushi_&_thai north_branch_arts F ruk_sushi_&_thai
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! edward_jones baird_&_warner
U edward_jones baird_&_warner
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
U ! lee_nails baird_&_warner
U lee_nails baird_&_warner
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
U ! my_sisters_closet central_&_devon_sb
& U ! my_sisters_closet central_&_devon_sb F my_sisters_closet
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! ruk_sushi_&_thai central_&_devon_nb
U central_&_devon_nb ruk_sushi_&_thai
shorten LTLs:
U ! a b
U b a

Syntax error OR formula too long:
U ! baird_&_warner becker_roofing_company
& U ! baird_&_warner becker_roofing_company F baird_&_warner
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! starbucks ruk_sushi_&_thai
U starbucks ruk_sushi_&_thai
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
U ! baird_&_warner kanellos_shoe_repair
U kanellos_shoe_repair baird_&_warner
shorten LTLs:
U ! a b
U b a

Syntax error OR formula too long:
U ! kanellos_shoe_repair ruk_sushi_&_thai
G i ruk_sushi_&_thai X kanellos_shoe_repair
shorten LTLs:
U ! a b
G i b X a

Syntax error OR formula too long:
U ! my_sisters_closet central_&_devon_nb
& U ! my_sisters_closet central_&_devon_nb F my_sisters_closet
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! baird_&_warner us_post_office
& U ! baird_&_warner us_post_office F baird_&_warner
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! central_&_devon_sb associated_bank
G e associated_bank F central_&_devon_sb
shorten LTLs:
U ! a b
G e b F a

Syntax error OR formula too long:
F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F ruk_sushi_&_thai
F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F ruk_sushi_&_thai
shorten LTLs:
F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a

Syntax error OR formula too long:
M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
& & U ! edward_jones U edward_jones & U ! edward_jones U edward_jones & U ! edward_jones U edward_jones F edward_jones
shorten LTLs:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error OR formula too long:
M & us_post_office F & ! us_post_office F & us_post_office F & ! us_post_office F us_post_office | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G ! us_post_office
& & U ! us_post_office U us_post_office & U ! us_post_office U us_post_office & U ! us_post_office U us_post_office F us_post_office
shorten LTLs:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error OR formula too long:
G i baird_&_warner X G ! ruk_sushi_&_thai
G e ruk_sushi_&_thai X baird_&_warner
shorten LTLs:
G i a X G ! b
G e b X a

Syntax error OR formula too long:
G i central_&_devon_nb X G ! central_&_devon_sb
& U ! central_&_devon_sb G central_&_devon_sb
Syntax error OR formula too long:
G i currency_change X G ! central_&_devon_sb
& U ! central_&_devon_sb G central_&_devon_sb
Syntax error OR formula too long:
G i king_pho X G ! central_&_devon_nb
G i king_pho X central_&_devon_nb
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i edward_jones X G ! ruk_sushi_&_thai
! F & edward_jones F ruk_sushi_&_thai
shorten LTLs:
G i a X G ! b
! F & a F b

Syntax error OR formula too long:
G i dominos X G ! baird_&_warner
G i dominos X baird_&_warner
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i my_sisters_closet X G ! central_&_devon_nb
G i my_sisters_closet X central_&_devon_nb
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i my_sisters_closet X G ! edward_jones
G ! edward_jones G my_sisters_closet
shorten LTLs:
G i a X G ! b
G ! b G a

Syntax error:
G i a X G ! b
G ! b G a

Syntax error OR formula too long:
G i central_&_devon_sb X G ! kanellos_shoe_repair
G ! kanellos_shoe_repair G central_&_devon_sb
shorten LTLs:
G i a X G ! b
G ! b G a

Syntax error:
G i a X G ! b
G ! b G a

Syntax error OR formula too long:
G i central_&_devon_sb X G ! creativo_academy
G ! central_&_devon_sb G creativo_academy
shorten LTLs:
G i a X G ! b
G ! a G b

Syntax error:
G i a X G ! b
G ! a G b

Syntax error OR formula too long:
G i baird_&_warner X G ! creativo_academy
G ! baird_&_warner G creativo_academy
shorten LTLs:
G i a X G ! b
G ! a G b

Syntax error:
G i a X G ! b
G ! a G b

Syntax error OR formula too long:
G i currency_change X G ! ruk_sushi_&_thai
G i currency_change X ruk_sushi_&_thai
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i becker_roofing_company X G ! ruk_sushi_&_thai
G i becker_roofing_company X ruk_sushi_&_thai
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i us_post_office X G ! ruk_sushi_&_thai
G ! ruk_sushi_&_thai
shorten LTLs:
G i a X G ! b
G ! b

0
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Kanellos Shoe Repair, Central & Devon NB, King Pho, Becker Roofing Company, and Lee Nails
True Ground LTL: & F kanellos_shoe_repair & F central_&_devon_nb & F king_pho & F becker_roofing_company F lee_nails
Out Ground LTL: & F kanellos_shoe_repair & F central_&_devon_nb & F king_pho & F becker_roofing_company F lee_nails
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F a & F h F b
True Lmks: ('Kanellos Shoe Repair', 'Central & Devon NB', 'King Pho', 'Becker Roofing Company', 'Lee Nails')
Out Lmks:['King Pho', 'Lee Nails', 'Central & Devon NB', 'Kanellos Shoe Repair', 'Becker Roofing Company']
Out Grounds: {'King Pho', 'Lee Nails', 'Central & Devon NB', 'Kanellos Shoe Repair', 'Becker Roofing Company'}
Placeholder Map: {'King Pho': 'a', 'Lee Nails': 'b', 'Central & Devon NB': 'c', 'Kanellos Shoe Repair': 'd', 'Becker Roofing Company': 'h'}
True

1
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Becker Roofing Company, Baird & Warner, Edgebrook Coffee Ship, Starbucks, and Creativo! Academy
True Ground LTL: & F becker_roofing_company & F baird_&_warner & F edgebrook_coffee_ship & F starbucks F creativo_academy
Out Ground LTL: & F becker_roofing_company & F baird_&_warner & F edgebrook_coffee_ship & F starbucks F creativo_academy
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F c & F h F a
True Lmks: ('Becker Roofing Company', 'Baird & Warner', 'Edgebrook Coffee Ship', 'Starbucks', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Baird & Warner', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Starbucks']
Out Grounds: {'Creativo! Academy', 'Baird & Warner', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Starbucks'}
Placeholder Map: {'Creativo! Academy': 'a', 'Baird & Warner': 'b', 'Edgebrook Coffee Ship': 'c', 'Becker Roofing Company': 'd', 'Starbucks': 'h'}
True

2
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: sometime visit Baird & Warner, Little Nest Care, Ruk Sushi & Thai, Edgebrook Coffee Ship, and Central & Devon NB
True Ground LTL: & F baird_&_warner & F ruk_sushi_&_thai & F little_nest_care & F central_&_devon_nb F edgebrook_coffee_ship
Out Ground LTL: & F baird_&_warner & F little_nest_care & F ruk_sushi_&_thai & F edgebrook_coffee_ship F central_&_devon_nb
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F d & F a & F c F h
True Lmks: ('Baird & Warner', 'Ruk Sushi & Thai', 'Little Nest Care', 'Central & Devon NB', 'Edgebrook Coffee Ship')
Out Lmks:['Ruk Sushi & Thai', 'Baird & Warner', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Central & Devon NB']
Out Grounds: {'Ruk Sushi & Thai', 'Baird & Warner', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Central & Devon NB'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Baird & Warner': 'b', 'Edgebrook Coffee Ship': 'c', 'Little Nest Care': 'd', 'Central & Devon NB': 'h'}
True

3
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: sometime visit US Post Office, Kanellos Shoe Repair, Creativo! Academy, King Pho, and Local Goods Chicago
True Ground LTL: & F us_post_office & F creativo_academy & F kanellos_shoe_repair & F local_goods_chicago F king_pho
Out Ground LTL: & F us_post_office & F kanellos_shoe_repair & F creativo_academy & F king_pho F local_goods_chicago
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F h & F b & F a F c
True Lmks: ('US Post Office', 'Creativo! Academy', 'Kanellos Shoe Repair', 'Local Goods Chicago', 'King Pho')
Out Lmks:['King Pho', 'Creativo! Academy', 'Local Goods Chicago', 'US Post Office', 'Kanellos Shoe Repair']
Out Grounds: {'King Pho', 'Creativo! Academy', 'Local Goods Chicago', 'US Post Office', 'Kanellos Shoe Repair'}
Placeholder Map: {'King Pho': 'a', 'Creativo! Academy': 'b', 'Local Goods Chicago': 'c', 'US Post Office': 'd', 'Kanellos Shoe Repair': 'h'}
True

4
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: eventually go visit Terry's Place, Local Goods Chicago, Little Nest Care, My Sister's Closet, and Becker Roofing Company
True Ground LTL: & F terrys_place & F local_goods_chicago & F becker_roofing_company & F my_sisters_closet F little_nest_care
Out Ground LTL: & F terrys_place & F local_goods_chicago & F little_nest_care & F my_sisters_closet F becker_roofing_company
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F a & F b & F h F d
True Lmks: ("Terry's Place", 'Local Goods Chicago', 'Becker Roofing Company', "My Sister's Closet", 'Little Nest Care')
Out Lmks:['Local Goods Chicago', 'Little Nest Care', "Terry's Place", 'Becker Roofing Company', "My Sister's Closet"]
Out Grounds: {'Local Goods Chicago', 'Little Nest Care', "Terry's Place", 'Becker Roofing Company', "My Sister's Closet"}
Placeholder Map: {'Local Goods Chicago': 'a', 'Little Nest Care': 'b', "Terry's Place": 'c', 'Becker Roofing Company': 'd', "My Sister's Closet": 'h'}
True

5
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: eventually go visit Little Nest Care, Lee Nails, North Branch Arts, Baird & Warner, and Terry's Place
True Ground LTL: & F little_nest_care & F lee_nails & F terrys_place & F baird_&_warner F north_branch_arts
Out Ground LTL: & F little_nest_care & F lee_nails & F north_branch_arts & F baird_&_warner F terrys_place
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F a & F c F h
True Lmks: ('Little Nest Care', 'Lee Nails', "Terry's Place", 'Baird & Warner', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Lee Nails', 'Baird & Warner', 'Little Nest Care', "Terry's Place"]
Out Grounds: {'North Branch Arts', 'Lee Nails', 'Baird & Warner', 'Little Nest Care', "Terry's Place"}
Placeholder Map: {'North Branch Arts': 'a', 'Lee Nails': 'b', 'Baird & Warner': 'c', 'Little Nest Care': 'd', "Terry's Place": 'h'}
True

6
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Starbucks, Becker Roofing Company, US Post Office, Central & Devon NB, and Ruk Sushi & Thai
True Ground LTL: & F starbucks & F becker_roofing_company & F us_post_office & F central_&_devon_nb F ruk_sushi_&_thai
Out Ground LTL: & F starbucks & F becker_roofing_company & F us_post_office & F central_&_devon_nb F ruk_sushi_&_thai
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F d & F b & F c F a
True Lmks: ('Starbucks', 'Becker Roofing Company', 'US Post Office', 'Central & Devon NB', 'Ruk Sushi & Thai')
Out Lmks:['Ruk Sushi & Thai', 'US Post Office', 'Central & Devon NB', 'Becker Roofing Company', 'Starbucks']
Out Grounds: {'Ruk Sushi & Thai', 'US Post Office', 'Central & Devon NB', 'Becker Roofing Company', 'Starbucks'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'US Post Office': 'b', 'Central & Devon NB': 'c', 'Becker Roofing Company': 'd', 'Starbucks': 'h'}
True

7
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Becker Roofing Company, Currency Change, Creativo! Academy, North Branch Arts, and My Sister's Closet
True Ground LTL: & F becker_roofing_company & F currency_change & F creativo_academy & F north_branch_arts F my_sisters_closet
Out Ground LTL: & F becker_roofing_company & F currency_change & F creativo_academy & F north_branch_arts F my_sisters_closet
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F h & F b & F a F d
True Lmks: ('Becker Roofing Company', 'Currency Change', 'Creativo! Academy', 'North Branch Arts', "My Sister's Closet")
Out Lmks:['North Branch Arts', 'Creativo! Academy', 'Becker Roofing Company', "My Sister's Closet", 'Currency Change']
Out Grounds: {'North Branch Arts', 'Creativo! Academy', 'Becker Roofing Company', "My Sister's Closet", 'Currency Change'}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', 'Becker Roofing Company': 'c', "My Sister's Closet": 'd', 'Currency Change': 'h'}
True

8
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Central & Devon NB, go to Domino's, go to Local Goods Chicago, go to Edgebrook Coffee Ship, go to Central & Devon SB
True Ground LTL: & F central_&_devon_nb & F dominos & F local_goods_chicago & F edgebrook_coffee_ship F central_&_devon_sb
Out Ground LTL: & F central_&_devon_nb & F dominos & F local_goods_chicago & F edgebrook_coffee_ship F central_&_devon_sb
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F b & F c & F d F a
True Lmks: ('Central & Devon NB', "Domino's", 'Local Goods Chicago', 'Edgebrook Coffee Ship', 'Central & Devon SB')
Out Lmks:['Central & Devon SB', "Domino's", 'Local Goods Chicago', 'Edgebrook Coffee Ship', 'Central & Devon NB']
Out Grounds: {'Central & Devon SB', "Domino's", 'Local Goods Chicago', 'Edgebrook Coffee Ship', 'Central & Devon NB'}
Placeholder Map: {'Central & Devon SB': 'a', "Domino's": 'b', 'Local Goods Chicago': 'c', 'Edgebrook Coffee Ship': 'd', 'Central & Devon NB': 'h'}
True

9
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to King Pho, go to Terry's Place, go to Local Goods Chicago, go to Central & Devon SB, go to Kanellos Shoe Repair
True Ground LTL: & F king_pho & F terrys_place & F local_goods_chicago & F central_&_devon_sb F kanellos_shoe_repair
Out Ground LTL: & F king_pho & F terrys_place & F local_goods_chicago & F central_&_devon_sb F kanellos_shoe_repair
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F c & F b F h
True Lmks: ('King Pho', "Terry's Place", 'Local Goods Chicago', 'Central & Devon SB', 'Kanellos Shoe Repair')
Out Lmks:['King Pho', 'Central & Devon SB', 'Local Goods Chicago', "Terry's Place", 'Kanellos Shoe Repair']
Out Grounds: {'King Pho', 'Central & Devon SB', 'Local Goods Chicago', "Terry's Place", 'Kanellos Shoe Repair'}
Placeholder Map: {'King Pho': 'a', 'Central & Devon SB': 'b', 'Local Goods Chicago': 'c', "Terry's Place": 'd', 'Kanellos Shoe Repair': 'h'}
True

10
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Kanellos Shoe Repair, Central & Devon SB, Local Goods Chicago, Edgebrook Coffee Ship, King Pho, in any order required
True Ground LTL: & F kanellos_shoe_repair & F central_&_devon_sb & F local_goods_chicago & F edgebrook_coffee_ship F king_pho
Out Ground LTL: & F kanellos_shoe_repair & F central_&_devon_sb & F local_goods_chicago & F edgebrook_coffee_ship F king_pho
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F b & F c & F d F a
True Lmks: ('Kanellos Shoe Repair', 'Central & Devon SB', 'Local Goods Chicago', 'Edgebrook Coffee Ship', 'King Pho')
Out Lmks:['King Pho', 'Central & Devon SB', 'Local Goods Chicago', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair']
Out Grounds: {'King Pho', 'Central & Devon SB', 'Local Goods Chicago', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair'}
Placeholder Map: {'King Pho': 'a', 'Central & Devon SB': 'b', 'Local Goods Chicago': 'c', 'Edgebrook Coffee Ship': 'd', 'Kanellos Shoe Repair': 'h'}
True

11
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Associated Bank, Local Goods Chicago, Edgebrook Coffee Ship, Becker Roofing Company, Currency Change, in any order required
True Ground LTL: & F associated_bank & F local_goods_chicago & F edgebrook_coffee_ship & F becker_roofing_company F currency_change
Out Ground LTL: & F associated_bank & F local_goods_chicago & F edgebrook_coffee_ship & F becker_roofing_company F currency_change
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F a & F c & F d F h
True Lmks: ('Associated Bank', 'Local Goods Chicago', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Currency Change')
Out Lmks:['Local Goods Chicago', 'Associated Bank', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Currency Change']
Out Grounds: {'Local Goods Chicago', 'Associated Bank', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Currency Change'}
Placeholder Map: {'Local Goods Chicago': 'a', 'Associated Bank': 'b', 'Edgebrook Coffee Ship': 'c', 'Becker Roofing Company': 'd', 'Currency Change': 'h'}
True

12
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit all locations North Branch Arts, US Post Office, Creativo! Academy, Local Goods Chicago, Central & Devon SB
True Ground LTL: & F north_branch_arts & F us_post_office & F creativo_academy & F local_goods_chicago F central_&_devon_sb
Out Ground LTL: & F north_branch_arts & F us_post_office & F creativo_academy & F local_goods_chicago F central_&_devon_sb
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F h & F b & F d F c
True Lmks: ('North Branch Arts', 'US Post Office', 'Creativo! Academy', 'Local Goods Chicago', 'Central & Devon SB')
Out Lmks:['North Branch Arts', 'Creativo! Academy', 'Central & Devon SB', 'Local Goods Chicago', 'US Post Office']
Out Grounds: {'North Branch Arts', 'Creativo! Academy', 'Central & Devon SB', 'Local Goods Chicago', 'US Post Office'}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', 'Central & Devon SB': 'c', 'Local Goods Chicago': 'd', 'US Post Office': 'h'}
True

13
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit all locations Baird & Warner, Ruk Sushi & Thai, North Branch Arts, Terry's Place, King Pho
True Ground LTL: & F baird_&_warner & F ruk_sushi_&_thai & F north_branch_arts & F terrys_place F king_pho
Out Ground LTL: & F baird_&_warner & F ruk_sushi_&_thai & F north_branch_arts & F terrys_place F king_pho
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F a & F h F b
True Lmks: ('Baird & Warner', 'Ruk Sushi & Thai', 'North Branch Arts', "Terry's Place", 'King Pho')
Out Lmks:['North Branch Arts', 'King Pho', 'Ruk Sushi & Thai', 'Baird & Warner', "Terry's Place"]
Out Grounds: {'North Branch Arts', 'King Pho', 'Ruk Sushi & Thai', 'Baird & Warner', "Terry's Place"}
Placeholder Map: {'North Branch Arts': 'a', 'King Pho': 'b', 'Ruk Sushi & Thai': 'c', 'Baird & Warner': 'd', "Terry's Place": 'h'}
True

14
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach the following five locations Lee Nails, Edward Jones, Little Nest Care, Starbucks, Currency Change
True Ground LTL: & F lee_nails & F edward_jones & F little_nest_care & F starbucks F currency_change
Out Ground LTL: & F lee_nails & F edward_jones & F little_nest_care & F starbucks F currency_change
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F b & F c F h
True Lmks: ('Lee Nails', 'Edward Jones', 'Little Nest Care', 'Starbucks', 'Currency Change')
Out Lmks:['Lee Nails', 'Little Nest Care', 'Starbucks', 'Edward Jones', 'Currency Change']
Out Grounds: {'Lee Nails', 'Little Nest Care', 'Starbucks', 'Edward Jones', 'Currency Change'}
Placeholder Map: {'Lee Nails': 'a', 'Little Nest Care': 'b', 'Starbucks': 'c', 'Edward Jones': 'd', 'Currency Change': 'h'}
True

15
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach the following five locations Kanellos Shoe Repair, Central & Devon NB, Domino's, Local Goods Chicago, Lee Nails
True Ground LTL: & F kanellos_shoe_repair & F central_&_devon_nb & F dominos & F local_goods_chicago F lee_nails
Out Ground LTL: & F kanellos_shoe_repair & F central_&_devon_nb & F dominos & F local_goods_chicago F lee_nails
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F d & F a & F b F c
True Lmks: ('Kanellos Shoe Repair', 'Central & Devon NB', "Domino's", 'Local Goods Chicago', 'Lee Nails')
Out Lmks:["Domino's", 'Local Goods Chicago', 'Lee Nails', 'Central & Devon NB', 'Kanellos Shoe Repair']
Out Grounds: {"Domino's", 'Local Goods Chicago', 'Lee Nails', 'Central & Devon NB', 'Kanellos Shoe Repair'}
Placeholder Map: {"Domino's": 'a', 'Local Goods Chicago': 'b', 'Lee Nails': 'c', 'Central & Devon NB': 'd', 'Kanellos Shoe Repair': 'h'}
True

16
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: find the following Local Goods Chicago, Becker Roofing Company, Edgebrook Coffee Ship, Baird & Warner, Ace Hardware
True Ground LTL: & F local_goods_chicago & F becker_roofing_company & F edgebrook_coffee_ship & F baird_&_warner F ace_hardware
Out Ground LTL: & F local_goods_chicago & F becker_roofing_company & F edgebrook_coffee_ship & F baird_&_warner F ace_hardware
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F c & F b F h
True Lmks: ('Local Goods Chicago', 'Becker Roofing Company', 'Edgebrook Coffee Ship', 'Baird & Warner', 'Ace Hardware')
Out Lmks:['Local Goods Chicago', 'Baird & Warner', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Ace Hardware']
Out Grounds: {'Local Goods Chicago', 'Baird & Warner', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Ace Hardware'}
Placeholder Map: {'Local Goods Chicago': 'a', 'Baird & Warner': 'b', 'Edgebrook Coffee Ship': 'c', 'Becker Roofing Company': 'd', 'Ace Hardware': 'h'}
True

17
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: find the following Local Goods Chicago, Currency Change, My Sister's Closet, Creativo! Academy, Edward Jones
True Ground LTL: & F local_goods_chicago & F currency_change & F my_sisters_closet & F creativo_academy F edward_jones
Out Ground LTL: & F local_goods_chicago & F currency_change & F my_sisters_closet & F creativo_academy F edward_jones
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F h & F c & F a F d
True Lmks: ('Local Goods Chicago', 'Currency Change', "My Sister's Closet", 'Creativo! Academy', 'Edward Jones')
Out Lmks:['Creativo! Academy', 'Local Goods Chicago', "My Sister's Closet", 'Edward Jones', 'Currency Change']
Out Grounds: {'Creativo! Academy', 'Local Goods Chicago', "My Sister's Closet", 'Edward Jones', 'Currency Change'}
Placeholder Map: {'Creativo! Academy': 'a', 'Local Goods Chicago': 'b', "My Sister's Closet": 'c', 'Edward Jones': 'd', 'Currency Change': 'h'}
True

18
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Edgebrook Coffee Ship, North Branch Arts, US Post Office, Creativo! Academy, and Kanellos Shoe Repair, in arbitrary order
True Ground LTL: & F edgebrook_coffee_ship & F north_branch_arts & F us_post_office & F creativo_academy F kanellos_shoe_repair
Out Ground LTL: & F edgebrook_coffee_ship & F north_branch_arts & F us_post_office & F creativo_academy F kanellos_shoe_repair
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F a & F d & F b F h
True Lmks: ('Edgebrook Coffee Ship', 'North Branch Arts', 'US Post Office', 'Creativo! Academy', 'Kanellos Shoe Repair')
Out Lmks:['North Branch Arts', 'Creativo! Academy', 'Edgebrook Coffee Ship', 'US Post Office', 'Kanellos Shoe Repair']
Out Grounds: {'North Branch Arts', 'Creativo! Academy', 'Edgebrook Coffee Ship', 'US Post Office', 'Kanellos Shoe Repair'}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', 'Edgebrook Coffee Ship': 'c', 'US Post Office': 'd', 'Kanellos Shoe Repair': 'h'}
True

19
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to US Post Office, Local Goods Chicago, Ruk Sushi & Thai, Edward Jones, and Starbucks, in arbitrary order
True Ground LTL: & F us_post_office & F local_goods_chicago & F ruk_sushi_&_thai & F edward_jones F starbucks
Out Ground LTL: & F us_post_office & F local_goods_chicago & F ruk_sushi_&_thai & F edward_jones F starbucks
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F b & F a & F h F d
True Lmks: ('US Post Office', 'Local Goods Chicago', 'Ruk Sushi & Thai', 'Edward Jones', 'Starbucks')
Out Lmks:['Ruk Sushi & Thai', 'Local Goods Chicago', 'US Post Office', 'Starbucks', 'Edward Jones']
Out Grounds: {'Ruk Sushi & Thai', 'Local Goods Chicago', 'US Post Office', 'Starbucks', 'Edward Jones'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Local Goods Chicago': 'b', 'US Post Office': 'c', 'Starbucks': 'd', 'Edward Jones': 'h'}
True

20
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure Creativo! Academy, Currency Change, US Post Office, Terry's Place, and Associated Bank, are all visited
True Ground LTL: & F creativo_academy & F currency_change & F us_post_office & F terrys_place F associated_bank
Out Ground LTL: & F creativo_academy & F currency_change & F us_post_office & F terrys_place F associated_bank
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F h & F c & F d F b
True Lmks: ('Creativo! Academy', 'Currency Change', 'US Post Office', "Terry's Place", 'Associated Bank')
Out Lmks:['Creativo! Academy', 'Associated Bank', 'US Post Office', "Terry's Place", 'Currency Change']
Out Grounds: {'Creativo! Academy', 'Associated Bank', 'US Post Office', "Terry's Place", 'Currency Change'}
Placeholder Map: {'Creativo! Academy': 'a', 'Associated Bank': 'b', 'US Post Office': 'c', "Terry's Place": 'd', 'Currency Change': 'h'}
True

21
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure US Post Office, Associated Bank, Central & Devon NB, Ruk Sushi & Thai, and Domino's, are all visited
True Ground LTL: & F us_post_office & F associated_bank & F central_&_devon_nb & F ruk_sushi_&_thai F dominos
Out Ground LTL: & F us_post_office & F associated_bank & F central_&_devon_nb & F ruk_sushi_&_thai F dominos
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F h & F b F a
True Lmks: ('US Post Office', 'Associated Bank', 'Central & Devon NB', 'Ruk Sushi & Thai', "Domino's")
Out Lmks:["Domino's", 'Ruk Sushi & Thai', 'Associated Bank', 'US Post Office', 'Central & Devon NB']
Out Grounds: {"Domino's", 'Ruk Sushi & Thai', 'Associated Bank', 'US Post Office', 'Central & Devon NB'}
Placeholder Map: {"Domino's": 'a', 'Ruk Sushi & Thai': 'b', 'Associated Bank': 'c', 'US Post Office': 'd', 'Central & Devon NB': 'h'}
True

22
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: do not stop until Currency Change, Edgebrook Coffee Ship, Terry's Place, Lee Nails, and Baird & Warner, are all visited
True Ground LTL: & F currency_change & F edgebrook_coffee_ship & F terrys_place & F lee_nails F baird_&_warner
Out Ground LTL: & F currency_change & F edgebrook_coffee_ship & F terrys_place & F lee_nails F baird_&_warner
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F d & F a F b
True Lmks: ('Currency Change', 'Edgebrook Coffee Ship', "Terry's Place", 'Lee Nails', 'Baird & Warner')
Out Lmks:['Lee Nails', 'Baird & Warner', 'Edgebrook Coffee Ship', "Terry's Place", 'Currency Change']
Out Grounds: {'Lee Nails', 'Baird & Warner', 'Edgebrook Coffee Ship', "Terry's Place", 'Currency Change'}
Placeholder Map: {'Lee Nails': 'a', 'Baird & Warner': 'b', 'Edgebrook Coffee Ship': 'c', "Terry's Place": 'd', 'Currency Change': 'h'}
True

23
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: do not stop until My Sister's Closet, Little Nest Care, Ruk Sushi & Thai, US Post Office, and Starbucks, are all visited
True Ground LTL: & F my_sisters_closet & F little_nest_care & F ruk_sushi_&_thai & F us_post_office F starbucks
Out Ground LTL: & F my_sisters_closet & F little_nest_care & F ruk_sushi_&_thai & F us_post_office F starbucks
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F a & F b F d
True Lmks: ("My Sister's Closet", 'Little Nest Care', 'Ruk Sushi & Thai', 'US Post Office', 'Starbucks')
Out Lmks:['Ruk Sushi & Thai', 'US Post Office', 'Little Nest Care', 'Starbucks', "My Sister's Closet"]
Out Grounds: {'Ruk Sushi & Thai', 'US Post Office', 'Little Nest Care', 'Starbucks', "My Sister's Closet"}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'US Post Office': 'b', 'Little Nest Care': 'c', 'Starbucks': 'd', "My Sister's Closet": 'h'}
True

24
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make your way to North Branch Arts, Edward Jones, Local Goods Chicago, Domino's, and Becker Roofing Company
True Ground LTL: & F north_branch_arts & F edward_jones & F local_goods_chicago & F dominos F becker_roofing_company
Out Ground LTL: & F north_branch_arts & F edward_jones & F local_goods_chicago & F dominos F becker_roofing_company
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F h & F c & F b F d
True Lmks: ('North Branch Arts', 'Edward Jones', 'Local Goods Chicago', "Domino's", 'Becker Roofing Company')
Out Lmks:['North Branch Arts', "Domino's", 'Local Goods Chicago', 'Becker Roofing Company', 'Edward Jones']
Out Grounds: {'North Branch Arts', "Domino's", 'Local Goods Chicago', 'Becker Roofing Company', 'Edward Jones'}
Placeholder Map: {'North Branch Arts': 'a', "Domino's": 'b', 'Local Goods Chicago': 'c', 'Becker Roofing Company': 'd', 'Edward Jones': 'h'}
True

25
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make your way to Central & Devon NB, US Post Office, Little Nest Care, Currency Change, and Edgebrook Coffee Ship
True Ground LTL: & F central_&_devon_nb & F us_post_office & F little_nest_care & F currency_change F edgebrook_coffee_ship
Out Ground LTL: & F central_&_devon_nb & F us_post_office & F little_nest_care & F currency_change F edgebrook_coffee_ship
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F b & F h F a
True Lmks: ('Central & Devon NB', 'US Post Office', 'Little Nest Care', 'Currency Change', 'Edgebrook Coffee Ship')
Out Lmks:['Edgebrook Coffee Ship', 'US Post Office', 'Little Nest Care', 'Central & Devon NB', 'Currency Change']
Out Grounds: {'Edgebrook Coffee Ship', 'Little Nest Care', 'US Post Office', 'Central & Devon NB', 'Currency Change'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Little Nest Care': 'b', 'US Post Office': 'c', 'Central & Devon NB': 'd', 'Currency Change': 'h'}
True

26
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit My Sister's Closet, King Pho, Starbucks, Associated Bank, and Creativo! Academy, in any order
True Ground LTL: & F my_sisters_closet & F king_pho & F starbucks & F associated_bank F creativo_academy
Out Ground LTL: & F my_sisters_closet & F king_pho & F starbucks & F associated_bank F creativo_academy
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F a & F d & F c F b
True Lmks: ("My Sister's Closet", 'King Pho', 'Starbucks', 'Associated Bank', 'Creativo! Academy')
Out Lmks:['King Pho', 'Creativo! Academy', 'Associated Bank', 'Starbucks', "My Sister's Closet"]
Out Grounds: {'King Pho', 'Creativo! Academy', 'Associated Bank', 'Starbucks', "My Sister's Closet"}
Placeholder Map: {'King Pho': 'a', 'Creativo! Academy': 'b', 'Associated Bank': 'c', 'Starbucks': 'd', "My Sister's Closet": 'h'}
True

27
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Baird & Warner, Local Goods Chicago, Ruk Sushi & Thai, North Branch Arts, and Associated Bank, in any order
True Ground LTL: & F baird_&_warner & F local_goods_chicago & F ruk_sushi_&_thai & F north_branch_arts F associated_bank
Out Ground LTL: & F baird_&_warner & F local_goods_chicago & F ruk_sushi_&_thai & F north_branch_arts F associated_bank
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F b & F a F h
True Lmks: ('Baird & Warner', 'Local Goods Chicago', 'Ruk Sushi & Thai', 'North Branch Arts', 'Associated Bank')
Out Lmks:['North Branch Arts', 'Ruk Sushi & Thai', 'Local Goods Chicago', 'Baird & Warner', 'Associated Bank']
Out Grounds: {'North Branch Arts', 'Ruk Sushi & Thai', 'Local Goods Chicago', 'Baird & Warner', 'Associated Bank'}
Placeholder Map: {'North Branch Arts': 'a', 'Ruk Sushi & Thai': 'b', 'Local Goods Chicago': 'c', 'Baird & Warner': 'd', 'Associated Bank': 'h'}
True

28
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Central & Devon SB, My Sister's Closet, Central & Devon NB, Lee Nails, and Edgebrook Coffee Ship, in no particular order
True Ground LTL: & F my_sisters_closet & F edgebrook_coffee_ship & F central_&_devon_sb & F central_&_devon_nb F lee_nails
Out Ground LTL: & F central_&_devon_sb & F my_sisters_closet & F central_&_devon_nb & F lee_nails F edgebrook_coffee_ship
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F h & F d & F b F c
True Lmks: ("My Sister's Closet", 'Edgebrook Coffee Ship', 'Central & Devon SB', 'Central & Devon NB', 'Lee Nails')
Out Lmks:['Central & Devon SB', 'Lee Nails', 'Edgebrook Coffee Ship', 'Central & Devon NB', "My Sister's Closet"]
Out Grounds: {'Central & Devon SB', 'Lee Nails', 'Edgebrook Coffee Ship', 'Central & Devon NB', "My Sister's Closet"}
Placeholder Map: {'Central & Devon SB': 'a', 'Lee Nails': 'b', 'Edgebrook Coffee Ship': 'c', 'Central & Devon NB': 'd', "My Sister's Closet": 'h'}
True

29
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Domino's, Kanellos Shoe Repair, Terry's Place, Local Goods Chicago, and Ace Hardware, in no particular order
True Ground LTL: & F kanellos_shoe_repair & F ace_hardware & F dominos & F terrys_place F local_goods_chicago
Out Ground LTL: & F dominos & F kanellos_shoe_repair & F terrys_place & F local_goods_chicago F ace_hardware
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F c & F b F h
True Lmks: ('Kanellos Shoe Repair', 'Ace Hardware', "Domino's", "Terry's Place", 'Local Goods Chicago')
Out Lmks:["Domino's", 'Local Goods Chicago', "Terry's Place", 'Kanellos Shoe Repair', 'Ace Hardware']
Out Grounds: {"Domino's", 'Local Goods Chicago', "Terry's Place", 'Kanellos Shoe Repair', 'Ace Hardware'}
Placeholder Map: {"Domino's": 'a', 'Local Goods Chicago': 'b', "Terry's Place": 'c', 'Kanellos Shoe Repair': 'd', 'Ace Hardware': 'h'}
True

30
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Baird & Warner, US Post Office, Lee Nails, My Sister's Closet, and Creativo! Academy, at least once
True Ground LTL: & F baird_&_warner & F creativo_academy & F lee_nails & F us_post_office F my_sisters_closet
Out Ground LTL: & F us_post_office & F baird_&_warner & F lee_nails & F my_sisters_closet F creativo_academy
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F b & F h F a
True Lmks: ('Baird & Warner', 'Creativo! Academy', 'Lee Nails', 'US Post Office', "My Sister's Closet")
Out Lmks:['Creativo! Academy', 'Lee Nails', 'Baird & Warner', 'US Post Office', "My Sister's Closet"]
Out Grounds: {'Creativo! Academy', 'Lee Nails', 'Baird & Warner', 'US Post Office', "My Sister's Closet"}
Placeholder Map: {'Creativo! Academy': 'a', 'Lee Nails': 'b', 'Baird & Warner': 'c', 'US Post Office': 'd', "My Sister's Closet": 'h'}
True

31
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to US Post Office, King Pho, North Branch Arts, Currency Change, and Domino's, at least once
True Ground LTL: & F us_post_office & F dominos & F north_branch_arts & F king_pho F currency_change
Out Ground LTL: & F king_pho & F us_post_office & F north_branch_arts & F currency_change F dominos
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F d & F a & F h F c
True Lmks: ('US Post Office', "Domino's", 'North Branch Arts', 'King Pho', 'Currency Change')
Out Lmks:['King Pho', 'North Branch Arts', "Domino's", 'US Post Office', 'Currency Change']
Out Grounds: {'North Branch Arts', 'King Pho', "Domino's", 'US Post Office', 'Currency Change'}
Placeholder Map: {'North Branch Arts': 'a', 'King Pho': 'b', "Domino's": 'c', 'US Post Office': 'd', 'Currency Change': 'h'}
True

32
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Currency Change, Terry's Place, Ruk Sushi & Thai, Baird & Warner, and Becker Roofing Company
True Ground LTL: & F terrys_place & F currency_change & F baird_&_warner & F becker_roofing_company F ruk_sushi_&_thai
Out Ground LTL: & F currency_change & F terrys_place & F ruk_sushi_&_thai & F baird_&_warner F becker_roofing_company
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F a & F b F d
True Lmks: ("Terry's Place", 'Currency Change', 'Baird & Warner', 'Becker Roofing Company', 'Ruk Sushi & Thai')
Out Lmks:['Ruk Sushi & Thai', 'Baird & Warner', "Terry's Place", 'Becker Roofing Company', 'Currency Change']
Out Grounds: {'Ruk Sushi & Thai', 'Baird & Warner', "Terry's Place", 'Becker Roofing Company', 'Currency Change'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Baird & Warner': 'b', "Terry's Place": 'c', 'Becker Roofing Company': 'd', 'Currency Change': 'h'}
True

33
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to My Sister's Closet, Edgebrook Coffee Ship, Central & Devon SB, Ace Hardware, and North Branch Arts
True Ground LTL: & F edgebrook_coffee_ship & F my_sisters_closet & F ace_hardware & F north_branch_arts F central_&_devon_sb
Out Ground LTL: & F my_sisters_closet & F edgebrook_coffee_ship & F central_&_devon_sb & F ace_hardware F north_branch_arts
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F b & F h F a
True Lmks: ('Edgebrook Coffee Ship', "My Sister's Closet", 'Ace Hardware', 'North Branch Arts', 'Central & Devon SB')
Out Lmks:['North Branch Arts', 'Central & Devon SB', 'Edgebrook Coffee Ship', "My Sister's Closet", 'Ace Hardware']
Out Grounds: {'North Branch Arts', 'Central & Devon SB', 'Edgebrook Coffee Ship', "My Sister's Closet", 'Ace Hardware'}
Placeholder Map: {'North Branch Arts': 'a', 'Central & Devon SB': 'b', 'Edgebrook Coffee Ship': 'c', "My Sister's Closet": 'd', 'Ace Hardware': 'h'}
True

34
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Central & Devon NB, Edgebrook Coffee Ship, Local Goods Chicago, My Sister's Closet, and Lee Nails, in any order
True Ground LTL: & F lee_nails & F local_goods_chicago & F edgebrook_coffee_ship & F my_sisters_closet F central_&_devon_nb
Out Ground LTL: & F my_sisters_closet & F central_&_devon_nb & F lee_nails & F local_goods_chicago F edgebrook_coffee_ship
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F d & F b & F a F c
True Lmks: ('Lee Nails', 'Local Goods Chicago', 'Edgebrook Coffee Ship', "My Sister's Closet", 'Central & Devon NB')
Out Lmks:['Local Goods Chicago', 'Lee Nails', 'Edgebrook Coffee Ship', 'Central & Devon NB', "My Sister's Closet"]
Out Grounds: {'Local Goods Chicago', 'Lee Nails', 'Edgebrook Coffee Ship', 'Central & Devon NB', "My Sister's Closet"}
Placeholder Map: {'Local Goods Chicago': 'a', 'Lee Nails': 'b', 'Edgebrook Coffee Ship': 'c', 'Central & Devon NB': 'd', "My Sister's Closet": 'h'}
True

35
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Central & Devon NB, Associated Bank, Currency Change, North Branch Arts, and Central & Devon SB, in any order
True Ground LTL: & F central_&_devon_sb & F currency_change & F associated_bank & F north_branch_arts F central_&_devon_nb
Out Ground LTL: & F north_branch_arts & F central_&_devon_nb & F central_&_devon_sb & F currency_change F associated_bank
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F b & F h F c
True Lmks: ('Central & Devon SB', 'Currency Change', 'Associated Bank', 'North Branch Arts', 'Central & Devon NB')
Out Lmks:['North Branch Arts', 'Central & Devon SB', 'Associated Bank', 'Central & Devon NB', 'Currency Change']
Out Grounds: {'North Branch Arts', 'Central & Devon SB', 'Associated Bank', 'Central & Devon NB', 'Currency Change'}
Placeholder Map: {'North Branch Arts': 'a', 'Central & Devon SB': 'b', 'Associated Bank': 'c', 'Central & Devon NB': 'd', 'Currency Change': 'h'}
True

36
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Edward Jones, Ruk Sushi & Thai, Domino's, Edgebrook Coffee Ship, and Central & Devon SB, in no specific order
True Ground LTL: & F edward_jones & F ruk_sushi_&_thai & F dominos & F edgebrook_coffee_ship F central_&_devon_sb
Out Ground LTL: & F ruk_sushi_&_thai & F edward_jones & F dominos & F edgebrook_coffee_ship F central_&_devon_sb
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F h & F b & F d F a
True Lmks: ('Edward Jones', 'Ruk Sushi & Thai', "Domino's", 'Edgebrook Coffee Ship', 'Central & Devon SB')
Out Lmks:['Central & Devon SB', "Domino's", 'Ruk Sushi & Thai', 'Edgebrook Coffee Ship', 'Edward Jones']
Out Grounds: {'Central & Devon SB', "Domino's", 'Ruk Sushi & Thai', 'Edgebrook Coffee Ship', 'Edward Jones'}
Placeholder Map: {'Central & Devon SB': 'a', "Domino's": 'b', 'Ruk Sushi & Thai': 'c', 'Edgebrook Coffee Ship': 'd', 'Edward Jones': 'h'}
True

37
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Ruk Sushi & Thai, Starbucks, Kanellos Shoe Repair, Terry's Place, and King Pho, in no specific order
True Ground LTL: & F ruk_sushi_&_thai & F starbucks & F kanellos_shoe_repair & F terrys_place F king_pho
Out Ground LTL: & F starbucks & F ruk_sushi_&_thai & F kanellos_shoe_repair & F terrys_place F king_pho
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F b & F d & F c F a
True Lmks: ('Ruk Sushi & Thai', 'Starbucks', 'Kanellos Shoe Repair', "Terry's Place", 'King Pho')
Out Lmks:['King Pho', 'Ruk Sushi & Thai', "Terry's Place", 'Kanellos Shoe Repair', 'Starbucks']
Out Grounds: {'King Pho', 'Ruk Sushi & Thai', "Terry's Place", 'Kanellos Shoe Repair', 'Starbucks'}
Placeholder Map: {'King Pho': 'a', 'Ruk Sushi & Thai': 'b', "Terry's Place": 'c', 'Kanellos Shoe Repair': 'd', 'Starbucks': 'h'}
True

38
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach Little Nest Care, US Post Office, My Sister's Closet, Domino's, and Creativo! Academy, in any order
True Ground LTL: & F little_nest_care & F us_post_office & F my_sisters_closet & F dominos F creativo_academy
Out Ground LTL: & F little_nest_care & F us_post_office & F my_sisters_closet & F dominos F creativo_academy
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F h & F b F a
True Lmks: ('Little Nest Care', 'US Post Office', "My Sister's Closet", "Domino's", 'Creativo! Academy')
Out Lmks:['Creativo! Academy', "Domino's", 'US Post Office', 'Little Nest Care', "My Sister's Closet"]
Out Grounds: {'Creativo! Academy', "Domino's", 'US Post Office', 'Little Nest Care', "My Sister's Closet"}
Placeholder Map: {'Creativo! Academy': 'a', "Domino's": 'b', 'US Post Office': 'c', 'Little Nest Care': 'd', "My Sister's Closet": 'h'}
True

39
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach US Post Office, Baird & Warner, Domino's, North Branch Arts, and King Pho, in any order
True Ground LTL: & F us_post_office & F baird_&_warner & F dominos & F north_branch_arts F king_pho
Out Ground LTL: & F us_post_office & F baird_&_warner & F dominos & F north_branch_arts F king_pho
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F d & F c & F a F b
True Lmks: ('US Post Office', 'Baird & Warner', "Domino's", 'North Branch Arts', 'King Pho')
Out Lmks:['North Branch Arts', 'King Pho', "Domino's", 'Baird & Warner', 'US Post Office']
Out Grounds: {'North Branch Arts', 'King Pho', "Domino's", 'Baird & Warner', 'US Post Office'}
Placeholder Map: {'North Branch Arts': 'a', 'King Pho': 'b', "Domino's": 'c', 'Baird & Warner': 'd', 'US Post Office': 'h'}
True

40
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you go to Lee Nails, Ace Hardware, Ruk Sushi & Thai, Terry's Place, Edward Jones, in any order
True Ground LTL: & F lee_nails & F ace_hardware & F ruk_sushi_&_thai & F terrys_place F edward_jones
Out Ground LTL: & F lee_nails & F ace_hardware & F ruk_sushi_&_thai & F terrys_place F edward_jones
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F h & F a & F c F d
True Lmks: ('Lee Nails', 'Ace Hardware', 'Ruk Sushi & Thai', "Terry's Place", 'Edward Jones')
Out Lmks:['Ruk Sushi & Thai', 'Lee Nails', "Terry's Place", 'Edward Jones', 'Ace Hardware']
Out Grounds: {'Ruk Sushi & Thai', 'Lee Nails', "Terry's Place", 'Edward Jones', 'Ace Hardware'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Lee Nails': 'b', "Terry's Place": 'c', 'Edward Jones': 'd', 'Ace Hardware': 'h'}
True

41
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you go to Edward Jones, King Pho, Starbucks, Ruk Sushi & Thai, Little Nest Care, in any order
True Ground LTL: & F edward_jones & F king_pho & F starbucks & F ruk_sushi_&_thai F little_nest_care
Out Ground LTL: & F edward_jones & F king_pho & F starbucks & F ruk_sushi_&_thai F little_nest_care
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F a & F d & F b F c
True Lmks: ('Edward Jones', 'King Pho', 'Starbucks', 'Ruk Sushi & Thai', 'Little Nest Care')
Out Lmks:['King Pho', 'Ruk Sushi & Thai', 'Little Nest Care', 'Starbucks', 'Edward Jones']
Out Grounds: {'King Pho', 'Ruk Sushi & Thai', 'Little Nest Care', 'Starbucks', 'Edward Jones'}
Placeholder Map: {'King Pho': 'a', 'Ruk Sushi & Thai': 'b', 'Little Nest Care': 'c', 'Starbucks': 'd', 'Edward Jones': 'h'}
True

42
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: you must visit Domino's, Creativo! Academy, My Sister's Closet, Central & Devon SB, Edward Jones, but it can be done in any order
True Ground LTL: & F dominos & F creativo_academy & F my_sisters_closet & F central_&_devon_sb F edward_jones
Out Ground LTL: & F dominos & F creativo_academy & F my_sisters_closet & F central_&_devon_sb F edward_jones
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F a & F d & F b F h
True Lmks: ("Domino's", 'Creativo! Academy', "My Sister's Closet", 'Central & Devon SB', 'Edward Jones')
Out Lmks:['Creativo! Academy', 'Central & Devon SB', "Domino's", "My Sister's Closet", 'Edward Jones']
Out Grounds: {'Creativo! Academy', 'Central & Devon SB', "Domino's", "My Sister's Closet", 'Edward Jones'}
Placeholder Map: {'Creativo! Academy': 'a', 'Central & Devon SB': 'b', "Domino's": 'c', "My Sister's Closet": 'd', 'Edward Jones': 'h'}
True

43
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: you must visit Little Nest Care, Domino's, Kanellos Shoe Repair, Starbucks, Local Goods Chicago, but it can be done in any order
True Ground LTL: & F little_nest_care & F dominos & F kanellos_shoe_repair & F starbucks F local_goods_chicago
Out Ground LTL: & F little_nest_care & F dominos & F kanellos_shoe_repair & F starbucks F local_goods_chicago
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F a & F d & F h F b
True Lmks: ('Little Nest Care', "Domino's", 'Kanellos Shoe Repair', 'Starbucks', 'Local Goods Chicago')
Out Lmks:["Domino's", 'Local Goods Chicago', 'Little Nest Care', 'Kanellos Shoe Repair', 'Starbucks']
Out Grounds: {"Domino's", 'Local Goods Chicago', 'Little Nest Care', 'Kanellos Shoe Repair', 'Starbucks'}
Placeholder Map: {"Domino's": 'a', 'Local Goods Chicago': 'b', 'Little Nest Care': 'c', 'Kanellos Shoe Repair': 'd', 'Starbucks': 'h'}
True

44
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: in no particular order visit Edward Jones, Lee Nails, Central & Devon SB, Associated Bank, Kanellos Shoe Repair
True Ground LTL: & F edward_jones & F lee_nails & F central_&_devon_sb & F associated_bank F kanellos_shoe_repair
Out Ground LTL: & F edward_jones & F lee_nails & F central_&_devon_sb & F associated_bank F kanellos_shoe_repair
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F b & F a & F c F d
True Lmks: ('Edward Jones', 'Lee Nails', 'Central & Devon SB', 'Associated Bank', 'Kanellos Shoe Repair')
Out Lmks:['Central & Devon SB', 'Lee Nails', 'Associated Bank', 'Kanellos Shoe Repair', 'Edward Jones']
Out Grounds: {'Central & Devon SB', 'Lee Nails', 'Associated Bank', 'Kanellos Shoe Repair', 'Edward Jones'}
Placeholder Map: {'Central & Devon SB': 'a', 'Lee Nails': 'b', 'Associated Bank': 'c', 'Kanellos Shoe Repair': 'd', 'Edward Jones': 'h'}
True

45
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: in no particular order visit Central & Devon SB, North Branch Arts, My Sister's Closet, Little Nest Care, Ruk Sushi & Thai
True Ground LTL: & F central_&_devon_sb & F north_branch_arts & F my_sisters_closet & F little_nest_care F ruk_sushi_&_thai
Out Ground LTL: & F central_&_devon_sb & F north_branch_arts & F my_sisters_closet & F little_nest_care F ruk_sushi_&_thai
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F a & F h & F d F c
True Lmks: ('Central & Devon SB', 'North Branch Arts', "My Sister's Closet", 'Little Nest Care', 'Ruk Sushi & Thai')
Out Lmks:['North Branch Arts', 'Central & Devon SB', 'Ruk Sushi & Thai', 'Little Nest Care', "My Sister's Closet"]
Out Grounds: {'North Branch Arts', 'Central & Devon SB', 'Ruk Sushi & Thai', 'Little Nest Care', "My Sister's Closet"}
Placeholder Map: {'North Branch Arts': 'a', 'Central & Devon SB': 'b', 'Ruk Sushi & Thai': 'c', 'Little Nest Care': 'd', "My Sister's Closet": 'h'}
True

46
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not visit North Branch Arts, until you visit Starbucks, visit Starbucks, only once do not visit Starbucks, until you visit Local Goods Chicago, visit Local Goods Chicago, only once do no visit Local Goods Chicago, until you visit Central & Devon SB, visit Central & Devon SB, only once
True Ground LTL: & & U ! local_goods_chicago central_&_devon_sb & U ! starbucks local_goods_chicago & U ! north_branch_arts starbucks F north_branch_arts & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago starbucks U ! starbucks U starbucks U ! starbucks north_branch_arts
Out Ground LTL: & & U ! local_goods_chicago central_&_devon_sb & U ! starbucks local_goods_chicago & U ! north_branch_arts starbucks F north_branch_arts & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago starbucks & U ! starbucks U starbucks U ! starbucks north_branch_arts
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! d c & U ! a d F a & U ! b U b U ! b c & U ! c U c U ! c d & U ! d U d U ! d a
True Lmks: ('Central & Devon SB', 'Local Goods Chicago', 'Starbucks', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Central & Devon SB', 'Local Goods Chicago', 'Starbucks']
Out Grounds: {'North Branch Arts', 'Central & Devon SB', 'Local Goods Chicago', 'Starbucks'}
Placeholder Map: {'North Branch Arts': 'a', 'Central & Devon SB': 'b', 'Local Goods Chicago': 'c', 'Starbucks': 'd'}
Syntax Error

47
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not visit Kanellos Shoe Repair, until you visit Currency Change, visit Currency Change, only once do not visit Currency Change, until you visit US Post Office, visit US Post Office, only once do no visit US Post Office, until you visit North Branch Arts, visit North Branch Arts, only once
True Ground LTL: & & U ! us_post_office north_branch_arts & U ! currency_change us_post_office & U ! kanellos_shoe_repair currency_change F kanellos_shoe_repair & U ! north_branch_arts U north_branch_arts U ! north_branch_arts us_post_office & U ! us_post_office U us_post_office U ! us_post_office currency_change U ! currency_change U currency_change U ! currency_change kanellos_shoe_repair
Out Ground LTL: & & U ! us_post_office north_branch_arts & U ! currency_change us_post_office & U ! kanellos_shoe_repair currency_change F kanellos_shoe_repair & U ! north_branch_arts U north_branch_arts U ! north_branch_arts us_post_office & U ! us_post_office U us_post_office U ! us_post_office currency_change & U ! currency_change U currency_change U ! currency_change kanellos_shoe_repair
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c a & U ! d c & U ! b d F b & U ! a U a U ! a c & U ! c U c U ! c d & U ! d U d U ! d b
True Lmks: ('North Branch Arts', 'US Post Office', 'Currency Change', 'Kanellos Shoe Repair')
Out Lmks:['North Branch Arts', 'Kanellos Shoe Repair', 'US Post Office', 'Currency Change']
Out Grounds: {'North Branch Arts', 'Kanellos Shoe Repair', 'US Post Office', 'Currency Change'}
Placeholder Map: {'North Branch Arts': 'a', 'Kanellos Shoe Repair': 'b', 'US Post Office': 'c', 'Currency Change': 'd'}
Syntax Error

48
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Starbucks, then Ace Hardware, then Lee Nails, and then US Post Office, you can only visit each landmark once
True Ground LTL: & & U ! ace_hardware starbucks & U ! lee_nails ace_hardware & U ! us_post_office lee_nails F us_post_office & U ! starbucks U starbucks U ! starbucks ace_hardware & U ! ace_hardware U ace_hardware U ! ace_hardware lee_nails U ! lee_nails U lee_nails U ! lee_nails us_post_office
Out Ground LTL: & & U ! ace_hardware starbucks & U ! lee_nails ace_hardware & U ! us_post_office lee_nails F us_post_office & U ! starbucks U starbucks U ! starbucks ace_hardware & U ! ace_hardware U ace_hardware U ! ace_hardware lee_nails & U ! lee_nails U lee_nails U ! lee_nails us_post_office
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! c d & U ! b c F b & U ! a U a U ! a d & U ! d U d U ! d c & U ! c U c U ! c b
True Lmks: ('Starbucks', 'Ace Hardware', 'Lee Nails', 'US Post Office')
Out Lmks:['Ace Hardware', 'US Post Office', 'Lee Nails', 'Starbucks']
Out Grounds: {'Starbucks', 'US Post Office', 'Lee Nails', 'Ace Hardware'}
Placeholder Map: {'Starbucks': 'a', 'US Post Office': 'b', 'Lee Nails': 'c', 'Ace Hardware': 'd'}
Syntax Error

49
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Lee Nails, then Local Goods Chicago, then Currency Change, and then US Post Office, you can only visit each landmark once
True Ground LTL: & & U ! local_goods_chicago lee_nails & U ! currency_change local_goods_chicago & U ! us_post_office currency_change F us_post_office & U ! lee_nails U lee_nails U ! lee_nails local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago currency_change U ! currency_change U currency_change U ! currency_change us_post_office
Out Ground LTL: & & U ! local_goods_chicago lee_nails & U ! currency_change local_goods_chicago & U ! us_post_office currency_change F us_post_office & U ! lee_nails U lee_nails U ! lee_nails local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago currency_change U ! currency_change U currency_change U ! currency_change us_post_office
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c a & U ! d c & U ! b d F b & U ! a U a U ! a c & U ! c U c U ! c d U ! d U d U ! d b
True Lmks: ('Lee Nails', 'Local Goods Chicago', 'Currency Change', 'US Post Office')
Out Lmks:['Currency Change', 'US Post Office', 'Local Goods Chicago', 'Lee Nails']
Out Grounds: {'Lee Nails', 'US Post Office', 'Local Goods Chicago', 'Currency Change'}
Placeholder Map: {'Lee Nails': 'a', 'US Post Office': 'b', 'Local Goods Chicago': 'c', 'Currency Change': 'd'}
True

50
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Associated Bank, but not through Creativo! Academy, Currency Change, or Central & Devon SB, and then go to Creativo! Academy, but not through Currency Change, or Central & Devon SB, and then go to Currency Change, but not through Central & Devon SB, and finally go to Central & Devon SB, no revisiting is allowed
True Ground LTL: & & U ! creativo_academy associated_bank & U ! currency_change creativo_academy & U ! central_&_devon_sb currency_change F central_&_devon_sb & U ! associated_bank U associated_bank U ! associated_bank creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy currency_change U ! currency_change U currency_change U ! currency_change central_&_devon_sb
Out Ground LTL: & & U ! creativo_academy associated_bank & U ! currency_change creativo_academy & U ! central_&_devon_sb currency_change F central_&_devon_sb & U ! associated_bank U associated_bank U ! associated_bank creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy currency_change & U ! currency_change U currency_change U ! currency_change central_&_devon_sb
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! d b & U ! c d F c & U ! a U a U ! a b & U ! b U b U ! b d & U ! d U d U ! d c
True Lmks: ('Associated Bank', 'Creativo! Academy', 'Currency Change', 'Central & Devon SB')
Out Lmks:['Associated Bank', 'Creativo! Academy', 'Central & Devon SB', 'Currency Change']
Out Grounds: {'Associated Bank', 'Creativo! Academy', 'Central & Devon SB', 'Currency Change'}
Placeholder Map: {'Associated Bank': 'a', 'Creativo! Academy': 'b', 'Central & Devon SB': 'c', 'Currency Change': 'd'}
Syntax Error

51
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Central & Devon NB, but not through Starbucks, Associated Bank, or Domino's, and then go to Starbucks, but not through Associated Bank, or Domino's, and then go to Associated Bank, but not through Domino's, and finally go to Domino's, no revisiting is allowed
True Ground LTL: & & U ! starbucks central_&_devon_nb & U ! associated_bank starbucks & U ! dominos associated_bank F dominos & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb starbucks & U ! starbucks U starbucks U ! starbucks associated_bank U ! associated_bank U associated_bank U ! associated_bank dominos
Out Ground LTL: & & U ! starbucks central_&_devon_nb & U ! associated_bank starbucks & U ! dominos associated_bank F dominos & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb starbucks & U ! starbucks U starbucks U ! starbucks associated_bank & U ! associated_bank U associated_bank U ! associated_bank dominos
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! a d & U ! c a F c & U ! b U b U ! b d & U ! d U d U ! d a & U ! a U a U ! a c
True Lmks: ('Central & Devon NB', 'Starbucks', 'Associated Bank', "Domino's")
Out Lmks:['Associated Bank', 'Central & Devon NB', "Domino's", 'Starbucks']
Out Grounds: {'Associated Bank', 'Central & Devon NB', "Domino's", 'Starbucks'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon NB': 'b', "Domino's": 'c', 'Starbucks': 'd'}
Syntax Error

52
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not go to Local Goods Chicago, until Kanellos Shoe Repair, is visited and do not go to Kanellos Shoe Repair, until Terry's Place, is visited and do not go to Terry's Place, until King Pho, is visited along the path never return to previous location you have been to
True Ground LTL: & & U ! terrys_place king_pho & U ! kanellos_shoe_repair terrys_place & U ! local_goods_chicago kanellos_shoe_repair F local_goods_chicago & U ! king_pho U king_pho U ! king_pho terrys_place & U ! terrys_place U terrys_place U ! terrys_place kanellos_shoe_repair U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair local_goods_chicago
Out Ground LTL: & & U ! terrys_place king_pho & U ! kanellos_shoe_repair terrys_place & U ! local_goods_chicago kanellos_shoe_repair F local_goods_chicago & U ! king_pho U king_pho U ! king_pho terrys_place & U ! terrys_place U terrys_place U ! terrys_place kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair local_goods_chicago
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! b d & U ! c b F c & U ! a U a U ! a d & U ! d U d U ! d b & U ! b U b U ! b c
True Lmks: ('King Pho', "Terry's Place", 'Kanellos Shoe Repair', 'Local Goods Chicago')
Out Lmks:['King Pho', 'Kanellos Shoe Repair', 'Local Goods Chicago', "Terry's Place"]
Out Grounds: {'King Pho', 'Kanellos Shoe Repair', 'Local Goods Chicago', "Terry's Place"}
Placeholder Map: {'King Pho': 'a', 'Kanellos Shoe Repair': 'b', 'Local Goods Chicago': 'c', "Terry's Place": 'd'}
Syntax Error

53
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not go to Terry's Place, until Local Goods Chicago, is visited and do not go to Local Goods Chicago, until Creativo! Academy, is visited and do not go to Creativo! Academy, until Becker Roofing Company, is visited along the path never return to previous location you have been to
True Ground LTL: & & U ! creativo_academy becker_roofing_company & U ! local_goods_chicago creativo_academy & U ! terrys_place local_goods_chicago F terrys_place & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy local_goods_chicago U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago terrys_place
Out Ground LTL: & & U ! creativo_academy becker_roofing_company & U ! local_goods_chicago creativo_academy & U ! terrys_place local_goods_chicago F terrys_place & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago terrys_place
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c F d & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d
True Lmks: ('Becker Roofing Company', 'Creativo! Academy', 'Local Goods Chicago', "Terry's Place")
Out Lmks:['Creativo! Academy', 'Becker Roofing Company', 'Local Goods Chicago', "Terry's Place"]
Out Grounds: {'Creativo! Academy', 'Becker Roofing Company', 'Local Goods Chicago', "Terry's Place"}
Placeholder Map: {'Creativo! Academy': 'a', 'Becker Roofing Company': 'b', 'Local Goods Chicago': 'c', "Terry's Place": 'd'}
Syntax Error

54
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: make your way to Edward Jones, only after going to US Post Office, before that make your way to US Post Office, only after going to Central & Devon SB, before that make your way to Central & Devon SB, only after going to Central & Devon NB, do not go back to the previous location you have visited while heading to the next
True Ground LTL: & & U ! central_&_devon_sb central_&_devon_nb & U ! us_post_office central_&_devon_sb & U ! edward_jones us_post_office F edward_jones & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb us_post_office U ! us_post_office U us_post_office U ! us_post_office edward_jones
Out Ground LTL: & & U ! central_&_devon_sb central_&_devon_nb & U ! us_post_office central_&_devon_sb & U ! edward_jones us_post_office F edward_jones & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb us_post_office & U ! us_post_office U us_post_office U ! us_post_office edward_jones
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d
True Lmks: ('Central & Devon NB', 'Central & Devon SB', 'US Post Office', 'Edward Jones')
Out Lmks:['Central & Devon NB', 'Central & Devon SB', 'US Post Office', 'Edward Jones']
Out Grounds: {'Central & Devon NB', 'Central & Devon SB', 'US Post Office', 'Edward Jones'}
Placeholder Map: {'Central & Devon NB': 'a', 'Central & Devon SB': 'b', 'US Post Office': 'c', 'Edward Jones': 'd'}
Syntax Error

55
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: make your way to Kanellos Shoe Repair, only after going to Domino's, before that make your way to Domino's, only after going to Associated Bank, before that make your way to Associated Bank, only after going to Terry's Place, do not go back to the previous location you have visited while heading to the next
True Ground LTL: & & U ! associated_bank terrys_place & U ! dominos associated_bank & U ! kanellos_shoe_repair dominos F kanellos_shoe_repair & U ! terrys_place U terrys_place U ! terrys_place associated_bank & U ! associated_bank U associated_bank U ! associated_bank dominos U ! dominos U dominos U ! dominos kanellos_shoe_repair
Out Ground LTL: & & U ! associated_bank terrys_place & U ! dominos associated_bank & U ! kanellos_shoe_repair dominos F kanellos_shoe_repair & U ! terrys_place U terrys_place U ! terrys_place associated_bank & U ! associated_bank U associated_bank U ! associated_bank dominos & U ! dominos U dominos U ! dominos kanellos_shoe_repair
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! c a & U ! b c F b & U ! d U d U ! d a & U ! a U a U ! a c & U ! c U c U ! c b
True Lmks: ("Terry's Place", 'Associated Bank', "Domino's", 'Kanellos Shoe Repair')
Out Lmks:['Associated Bank', 'Kanellos Shoe Repair', "Domino's", "Terry's Place"]
Out Grounds: {'Associated Bank', 'Kanellos Shoe Repair', "Domino's", "Terry's Place"}
Placeholder Map: {'Associated Bank': 'a', 'Kanellos Shoe Repair': 'b', "Domino's": 'c', "Terry's Place": 'd'}
Syntax Error

56
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Local Goods Chicago, but do not visit Lee Nails, Central & Devon SB, or North Branch Arts, and then go to Lee Nails, but do not visit Central & Devon SB, or North Branch Arts, or revisit Local Goods Chicago, and then go to Central & Devon SB, but do not visit North Branch Arts, or revisit Local Goods Chicago, or Lee Nails, and then go to North Branch Arts, but do not revisit Local Goods Chicago, Lee Nails, or Central & Devon SB
True Ground LTL: & & U ! lee_nails local_goods_chicago & U ! central_&_devon_sb lee_nails & U ! north_branch_arts central_&_devon_sb F north_branch_arts & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago lee_nails & U ! lee_nails U lee_nails U ! lee_nails central_&_devon_sb U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb north_branch_arts
Out Ground LTL: & & U ! lee_nails local_goods_chicago & U ! central_&_devon_sb lee_nails & U ! north_branch_arts central_&_devon_sb F north_branch_arts & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago lee_nails & U ! lee_nails U lee_nails U ! lee_nails central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb north_branch_arts
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d c & U ! b d & U ! a b F a & U ! c U c U ! c d & U ! d U d U ! d b & U ! b U b U ! b a
True Lmks: ('Local Goods Chicago', 'Lee Nails', 'Central & Devon SB', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Central & Devon SB', 'Local Goods Chicago', 'Lee Nails']
Out Grounds: {'North Branch Arts', 'Central & Devon SB', 'Local Goods Chicago', 'Lee Nails'}
Placeholder Map: {'North Branch Arts': 'a', 'Central & Devon SB': 'b', 'Local Goods Chicago': 'c', 'Lee Nails': 'd'}
Syntax Error

57
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to King Pho, but do not visit Kanellos Shoe Repair, Little Nest Care, or US Post Office, and then go to Kanellos Shoe Repair, but do not visit Little Nest Care, or US Post Office, or revisit King Pho, and then go to Little Nest Care, but do not visit US Post Office, or revisit King Pho, or Kanellos Shoe Repair, and then go to US Post Office, but do not revisit King Pho, Kanellos Shoe Repair, or Little Nest Care
True Ground LTL: & & U ! kanellos_shoe_repair king_pho & U ! little_nest_care kanellos_shoe_repair & U ! us_post_office little_nest_care F us_post_office & U ! king_pho U king_pho U ! king_pho kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair little_nest_care U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office
Out Ground LTL: & & U ! kanellos_shoe_repair king_pho & U ! little_nest_care kanellos_shoe_repair & U ! us_post_office little_nest_care F us_post_office & U ! king_pho U king_pho U ! king_pho kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! d c & U ! a d F a & U ! b U b U ! b c & U ! c U c U ! c d & U ! d U d U ! d a
True Lmks: ('King Pho', 'Kanellos Shoe Repair', 'Little Nest Care', 'US Post Office')
Out Lmks:['King Pho', 'Kanellos Shoe Repair', 'Little Nest Care', 'US Post Office']
Out Grounds: {'US Post Office', 'King Pho', 'Kanellos Shoe Repair', 'Little Nest Care'}
Placeholder Map: {'US Post Office': 'a', 'King Pho': 'b', 'Kanellos Shoe Repair': 'c', 'Little Nest Care': 'd'}
Syntax Error

58
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Little Nest Care, My Sister's Closet, Kanellos Shoe Repair, and Associated Bank, in this order without skipping any one of them do not revisit any one of them once after you have been there
True Ground LTL: & & U ! my_sisters_closet little_nest_care & U ! kanellos_shoe_repair my_sisters_closet & U ! associated_bank kanellos_shoe_repair F associated_bank & U ! little_nest_care U little_nest_care U ! little_nest_care my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet kanellos_shoe_repair U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair associated_bank
Out Ground LTL: & & U ! my_sisters_closet little_nest_care & U ! kanellos_shoe_repair my_sisters_closet & U ! associated_bank kanellos_shoe_repair F associated_bank & U ! little_nest_care U little_nest_care U ! little_nest_care my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair associated_bank
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! b c & U ! a b F a & U ! d U d U ! d c & U ! c U c U ! c b & U ! b U b U ! b a
True Lmks: ('Little Nest Care', "My Sister's Closet", 'Kanellos Shoe Repair', 'Associated Bank')
Out Lmks:['Associated Bank', 'Kanellos Shoe Repair', 'Little Nest Care', "My Sister's Closet"]
Out Grounds: {'Associated Bank', 'Kanellos Shoe Repair', "My Sister's Closet", 'Little Nest Care'}
Placeholder Map: {'Associated Bank': 'a', 'Kanellos Shoe Repair': 'b', "My Sister's Closet": 'c', 'Little Nest Care': 'd'}
Syntax Error

59
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Ace Hardware, Currency Change, Terry's Place, and Little Nest Care, in this order without skipping any one of them do not revisit any one of them once after you have been there
True Ground LTL: & & U ! currency_change ace_hardware & U ! terrys_place currency_change & U ! little_nest_care terrys_place F little_nest_care & U ! ace_hardware U ace_hardware U ! ace_hardware currency_change & U ! currency_change U currency_change U ! currency_change terrys_place U ! terrys_place U terrys_place U ! terrys_place little_nest_care
Out Ground LTL: & & U ! currency_change ace_hardware & U ! terrys_place currency_change & U ! little_nest_care terrys_place F little_nest_care & U ! ace_hardware U ace_hardware U ! ace_hardware currency_change & U ! currency_change U currency_change U ! currency_change terrys_place U ! terrys_place U terrys_place U ! terrys_place little_nest_care
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c a & U ! d c & U ! b d F b & U ! a U a U ! a c & U ! c U c U ! c d U ! d U d U ! d b
True Lmks: ('Ace Hardware', 'Currency Change', "Terry's Place", 'Little Nest Care')
Out Lmks:["Terry's Place", 'Little Nest Care', 'Currency Change', 'Ace Hardware']
Out Grounds: {'Ace Hardware', 'Little Nest Care', 'Currency Change', "Terry's Place"}
Placeholder Map: {'Ace Hardware': 'a', 'Little Nest Care': 'b', 'Currency Change': 'c', "Terry's Place": 'd'}
True

60
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Central & Devon SB, only once but keep away from Ace Hardware, Baird & Warner, and Kanellos Shoe Repair, and then go to Ace Hardware, only once but keep away from Central & Devon SB, Baird & Warner, and Kanellos Shoe Repair, and then go to Baird & Warner, only once but keep way from Central & Devon SB, Ace Hardware, and Kanellos Shoe Repair, and finally go to Kanellos Shoe Repair, once but keep away from Central & Devon SB, Ace Hardware, and Baird & Warner
True Ground LTL: & & U ! ace_hardware central_&_devon_sb & U ! baird_&_warner ace_hardware & U ! kanellos_shoe_repair baird_&_warner F kanellos_shoe_repair & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb ace_hardware & U ! ace_hardware U ace_hardware U ! ace_hardware baird_&_warner U ! baird_&_warner U baird_&_warner U ! baird_&_warner kanellos_shoe_repair
Out Ground LTL: & & U ! ace_hardware central_&_devon_sb & U ! baird_&_warner ace_hardware & U ! kanellos_shoe_repair baird_&_warner F kanellos_shoe_repair & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb ace_hardware & U ! ace_hardware U ace_hardware U ! ace_hardware baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner kanellos_shoe_repair
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b
True Lmks: ('Central & Devon SB', 'Ace Hardware', 'Baird & Warner', 'Kanellos Shoe Repair')
Out Lmks:['Baird & Warner', 'Central & Devon SB', 'Kanellos Shoe Repair', 'Ace Hardware']
Out Grounds: {'Ace Hardware', 'Kanellos Shoe Repair', 'Central & Devon SB', 'Baird & Warner'}
Placeholder Map: {'Ace Hardware': 'a', 'Kanellos Shoe Repair': 'b', 'Central & Devon SB': 'c', 'Baird & Warner': 'd'}
Syntax Error

61
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Local Goods Chicago, only once but keep away from Currency Change, Becker Roofing Company, and Ruk Sushi & Thai, and then go to Currency Change, only once but keep away from Local Goods Chicago, Becker Roofing Company, and Ruk Sushi & Thai, and then go to Becker Roofing Company, only once but keep way from Local Goods Chicago, Currency Change, and Ruk Sushi & Thai, and finally go to Ruk Sushi & Thai, once but keep away from Local Goods Chicago, Currency Change, and Becker Roofing Company
True Ground LTL: & & U ! currency_change local_goods_chicago & U ! becker_roofing_company currency_change & U ! ruk_sushi_&_thai becker_roofing_company F ruk_sushi_&_thai & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago currency_change & U ! currency_change U currency_change U ! currency_change becker_roofing_company U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company ruk_sushi_&_thai
Out Ground LTL: & & U ! currency_change local_goods_chicago & U ! becker_roofing_company currency_change & U ! ruk_sushi_&_thai becker_roofing_company F ruk_sushi_&_thai & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago currency_change & U ! currency_change U currency_change U ! currency_change becker_roofing_company & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company ruk_sushi_&_thai
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d c & U ! b d & U ! a b F a & U ! c U c U ! c d & U ! d U d U ! d b & U ! b U b U ! b a
True Lmks: ('Local Goods Chicago', 'Currency Change', 'Becker Roofing Company', 'Ruk Sushi & Thai')
Out Lmks:['Ruk Sushi & Thai', 'Becker Roofing Company', 'Local Goods Chicago', 'Currency Change']
Out Grounds: {'Ruk Sushi & Thai', 'Becker Roofing Company', 'Local Goods Chicago', 'Currency Change'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Becker Roofing Company': 'b', 'Local Goods Chicago': 'c', 'Currency Change': 'd'}
Syntax Error

62
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Baird & Warner, one time but not through King Pho, North Branch Arts, or Ruk Sushi & Thai, and then visit King Pho, once but not through Baird & Warner, North Branch Arts, or Ruk Sushi & Thai, and then visit North Branch Arts, once but not through Baird & Warner, King Pho, or Ruk Sushi & Thai, and then visit Ruk Sushi & Thai, once but not through Baird & Warner, King Pho, or North Branch Arts
True Ground LTL: & & U ! king_pho baird_&_warner & U ! north_branch_arts king_pho & U ! ruk_sushi_&_thai north_branch_arts F ruk_sushi_&_thai & U ! baird_&_warner U baird_&_warner U ! baird_&_warner king_pho & U ! king_pho U king_pho U ! king_pho north_branch_arts U ! north_branch_arts U north_branch_arts U ! north_branch_arts ruk_sushi_&_thai
Out Ground LTL: & & U ! king_pho baird_&_warner & U ! north_branch_arts king_pho & U ! ruk_sushi_&_thai north_branch_arts F ruk_sushi_&_thai & U ! baird_&_warner U baird_&_warner U ! baird_&_warner king_pho & U ! king_pho U king_pho U ! king_pho north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts ruk_sushi_&_thai
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b d & U ! a b & U ! c a F c & U ! d U d U ! d b & U ! b U b U ! b a & U ! a U a U ! a c
True Lmks: ('Baird & Warner', 'King Pho', 'North Branch Arts', 'Ruk Sushi & Thai')
Out Lmks:['King Pho', 'Ruk Sushi & Thai', 'North Branch Arts', 'Baird & Warner']
Out Grounds: {'North Branch Arts', 'King Pho', 'Ruk Sushi & Thai', 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'King Pho': 'b', 'Ruk Sushi & Thai': 'c', 'Baird & Warner': 'd'}
Syntax Error

63
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Ace Hardware, one time but not through Terry's Place, My Sister's Closet, or Ruk Sushi & Thai, and then visit Terry's Place, once but not through Ace Hardware, My Sister's Closet, or Ruk Sushi & Thai, and then visit My Sister's Closet, once but not through Ace Hardware, Terry's Place, or Ruk Sushi & Thai, and then visit Ruk Sushi & Thai, once but not through Ace Hardware, Terry's Place, or My Sister's Closet
True Ground LTL: & & U ! terrys_place ace_hardware & U ! my_sisters_closet terrys_place & U ! ruk_sushi_&_thai my_sisters_closet F ruk_sushi_&_thai & U ! ace_hardware U ace_hardware U ! ace_hardware terrys_place & U ! terrys_place U terrys_place U ! terrys_place my_sisters_closet U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet ruk_sushi_&_thai
Out Ground LTL: & & U ! terrys_place ace_hardware & U ! my_sisters_closet terrys_place & U ! ruk_sushi_&_thai my_sisters_closet F ruk_sushi_&_thai & U ! ace_hardware U ace_hardware U ! ace_hardware terrys_place & U ! terrys_place U terrys_place U ! terrys_place my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet ruk_sushi_&_thai
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! a c & U ! b a F b & U ! d U d U ! d c & U ! c U c U ! c a & U ! a U a U ! a b
True Lmks: ('Ace Hardware', "Terry's Place", "My Sister's Closet", 'Ruk Sushi & Thai')
Out Lmks:["My Sister's Closet", 'Ruk Sushi & Thai', "Terry's Place", 'Ace Hardware']
Out Grounds: {"My Sister's Closet", 'Ruk Sushi & Thai', "Terry's Place", 'Ace Hardware'}
Placeholder Map: {"My Sister's Closet": 'a', 'Ruk Sushi & Thai': 'b', "Terry's Place": 'c', 'Ace Hardware': 'd'}
Syntax Error

64
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: stay away from Edgebrook Coffee Ship, King Pho, and Little Nest Care, until you make Starbucks, single visit to Starbucks, and then make your way to Edgebrook Coffee Ship, while staying away from Starbucks, King Pho, and Little Nest Care, and then make your way to King Pho, while staying away from Starbucks, Edgebrook Coffee Ship, or Little Nest Care, and finally make your way to Little Nest Care, while staying away from Starbucks, Edgebrook Coffee Ship, and King Pho
True Ground LTL: & & U ! edgebrook_coffee_ship starbucks & U ! king_pho edgebrook_coffee_ship & U ! little_nest_care king_pho F little_nest_care & U ! starbucks U starbucks U ! starbucks edgebrook_coffee_ship & U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship king_pho U ! king_pho U king_pho U ! king_pho little_nest_care
Out Ground LTL: & U ! edgebrook_coffee_ship starbucks & U ! king_pho edgebrook_coffee_ship & U ! little_nest_care king_pho F little_nest_care
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & U ! b d & U ! a b & U ! c a F c
True Lmks: ('Starbucks', 'Edgebrook Coffee Ship', 'King Pho', 'Little Nest Care')
Out Lmks:['King Pho', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Starbucks']
Out Grounds: {'King Pho', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Starbucks'}
Placeholder Map: {'King Pho': 'a', 'Edgebrook Coffee Ship': 'b', 'Little Nest Care': 'c', 'Starbucks': 'd'}
False

65
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: stay away from Currency Change, Terry's Place, and My Sister's Closet, until you make Central & Devon NB, single visit to Central & Devon NB, and then make your way to Currency Change, while staying away from Central & Devon NB, Terry's Place, and My Sister's Closet, and then make your way to Terry's Place, while staying away from Central & Devon NB, Currency Change, or My Sister's Closet, and finally make your way to My Sister's Closet, while staying away from Central & Devon NB, Currency Change, and Terry's Place
True Ground LTL: & & U ! currency_change central_&_devon_nb & U ! terrys_place currency_change & U ! my_sisters_closet terrys_place F my_sisters_closet & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb currency_change & U ! currency_change U currency_change U ! currency_change terrys_place U ! terrys_place U terrys_place U ! terrys_place my_sisters_closet
Out Ground LTL: & U ! currency_change central_&_devon_nb & U ! terrys_place currency_change & U ! my_sisters_closet terrys_place F my_sisters_closet
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & U ! c a & U ! d c & U ! b d F b
True Lmks: ('Central & Devon NB', 'Currency Change', "Terry's Place", "My Sister's Closet")
Out Lmks:['Central & Devon NB', "My Sister's Closet", 'Currency Change', "Terry's Place"]
Out Grounds: {'Central & Devon NB', "My Sister's Closet", 'Currency Change', "Terry's Place"}
Placeholder Map: {'Central & Devon NB': 'a', "My Sister's Closet": 'b', 'Currency Change': 'c', "Terry's Place": 'd'}
False

66
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: head to Creativo! Academy, King Pho, Currency Change, and North Branch Arts, in this order without skipping or revisiting any one of them
True Ground LTL: & & U ! king_pho creativo_academy & U ! currency_change king_pho & U ! north_branch_arts currency_change F north_branch_arts & U ! creativo_academy U creativo_academy U ! creativo_academy king_pho & U ! king_pho U king_pho U ! king_pho currency_change U ! currency_change U currency_change U ! currency_change north_branch_arts
Out Ground LTL: & & U ! king_pho creativo_academy & U ! currency_change king_pho & U ! north_branch_arts currency_change F north_branch_arts & U ! creativo_academy U creativo_academy U ! creativo_academy king_pho & U ! king_pho U king_pho U ! king_pho currency_change & U ! currency_change U currency_change U ! currency_change north_branch_arts
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! d c & U ! a d F a & U ! b U b U ! b c & U ! c U c U ! c d & U ! d U d U ! d a
True Lmks: ('Creativo! Academy', 'King Pho', 'Currency Change', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'King Pho', 'Creativo! Academy', 'Currency Change']
Out Grounds: {'North Branch Arts', 'Creativo! Academy', 'King Pho', 'Currency Change'}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', 'King Pho': 'c', 'Currency Change': 'd'}
Syntax Error

67
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: head to Currency Change, Ruk Sushi & Thai, King Pho, and Terry's Place, in this order without skipping or revisiting any one of them
True Ground LTL: & & U ! ruk_sushi_&_thai currency_change & U ! king_pho ruk_sushi_&_thai & U ! terrys_place king_pho F terrys_place & U ! currency_change U currency_change U ! currency_change ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai king_pho U ! king_pho U king_pho U ! king_pho terrys_place
Out Ground LTL: & & U ! ruk_sushi_&_thai currency_change & U ! king_pho ruk_sushi_&_thai & U ! terrys_place king_pho F terrys_place & U ! currency_change U currency_change U ! currency_change ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai king_pho & U ! king_pho U king_pho U ! king_pho terrys_place
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! a b & U ! d a F d & U ! c U c U ! c b & U ! b U b U ! b a & U ! a U a U ! a d
True Lmks: ('Currency Change', 'Ruk Sushi & Thai', 'King Pho', "Terry's Place")
Out Lmks:['King Pho', 'Ruk Sushi & Thai', 'Currency Change', "Terry's Place"]
Out Grounds: {'King Pho', 'Ruk Sushi & Thai', 'Currency Change', "Terry's Place"}
Placeholder Map: {'King Pho': 'a', 'Ruk Sushi & Thai': 'b', 'Currency Change': 'c', "Terry's Place": 'd'}
Syntax Error

68
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit each of Becker Roofing Company, Central & Devon NB, Edward Jones, and North Branch Arts, exactly once in this order
True Ground LTL: & & U ! central_&_devon_nb becker_roofing_company & U ! edward_jones central_&_devon_nb & U ! north_branch_arts edward_jones F north_branch_arts & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb edward_jones U ! edward_jones U edward_jones U ! edward_jones north_branch_arts
Out Ground LTL: & & U ! central_&_devon_nb becker_roofing_company & U ! edward_jones central_&_devon_nb & U ! north_branch_arts edward_jones F north_branch_arts & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb edward_jones & U ! edward_jones U edward_jones U ! edward_jones north_branch_arts
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c F d & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d
True Lmks: ('Becker Roofing Company', 'Central & Devon NB', 'Edward Jones', 'North Branch Arts')
Out Lmks:['Central & Devon NB', 'Becker Roofing Company', 'Edward Jones', 'North Branch Arts']
Out Grounds: {'Central & Devon NB', 'Becker Roofing Company', 'Edward Jones', 'North Branch Arts'}
Placeholder Map: {'Central & Devon NB': 'a', 'Becker Roofing Company': 'b', 'Edward Jones': 'c', 'North Branch Arts': 'd'}
Syntax Error

69
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit each of Baird & Warner, Central & Devon NB, Associated Bank, and Ruk Sushi & Thai, exactly once in this order
True Ground LTL: & & U ! central_&_devon_nb baird_&_warner & U ! associated_bank central_&_devon_nb & U ! ruk_sushi_&_thai associated_bank F ruk_sushi_&_thai & U ! baird_&_warner U baird_&_warner U ! baird_&_warner central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb associated_bank U ! associated_bank U associated_bank U ! associated_bank ruk_sushi_&_thai
Out Ground LTL: & & U ! central_&_devon_nb baird_&_warner & U ! associated_bank central_&_devon_nb & U ! ruk_sushi_&_thai associated_bank F ruk_sushi_&_thai & U ! baird_&_warner U baird_&_warner U ! baird_&_warner central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb associated_bank & U ! associated_bank U associated_bank U ! associated_bank ruk_sushi_&_thai
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b d & U ! a b & U ! c a F c & U ! d U d U ! d b & U ! b U b U ! b a & U ! a U a U ! a c
True Lmks: ('Baird & Warner', 'Central & Devon NB', 'Associated Bank', 'Ruk Sushi & Thai')
Out Lmks:['Associated Bank', 'Central & Devon NB', 'Ruk Sushi & Thai', 'Baird & Warner']
Out Grounds: {'Associated Bank', 'Central & Devon NB', 'Ruk Sushi & Thai', 'Baird & Warner'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon NB': 'b', 'Ruk Sushi & Thai': 'c', 'Baird & Warner': 'd'}
Syntax Error

70
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit North Branch Arts, but before visiting North Branch Arts, you must visit Edward Jones, only after that visit Local Goods Chicago, after visiting Local Goods Chicago, visit Ruk Sushi & Thai, visit each location once
True Ground LTL: & & U ! north_branch_arts edward_jones & U ! local_goods_chicago north_branch_arts & U ! ruk_sushi_&_thai local_goods_chicago F ruk_sushi_&_thai & U ! edward_jones U edward_jones U ! edward_jones north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts local_goods_chicago U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago ruk_sushi_&_thai
Out Ground LTL: & & U ! north_branch_arts edward_jones & U ! local_goods_chicago north_branch_arts & U ! ruk_sushi_&_thai local_goods_chicago F ruk_sushi_&_thai & U ! edward_jones U edward_jones U ! edward_jones north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts local_goods_chicago U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago ruk_sushi_&_thai
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d U ! d U d U ! d b
True Lmks: ('Edward Jones', 'North Branch Arts', 'Local Goods Chicago', 'Ruk Sushi & Thai')
Out Lmks:['North Branch Arts', 'Ruk Sushi & Thai', 'Local Goods Chicago', 'Edward Jones']
Out Grounds: {'North Branch Arts', 'Ruk Sushi & Thai', 'Edward Jones', 'Local Goods Chicago'}
Placeholder Map: {'North Branch Arts': 'a', 'Ruk Sushi & Thai': 'b', 'Edward Jones': 'c', 'Local Goods Chicago': 'd'}
True

71
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit US Post Office, but before visiting US Post Office, you must visit Lee Nails, only after that visit Central & Devon NB, after visiting Central & Devon NB, visit Creativo! Academy, visit each location once
True Ground LTL: & & U ! us_post_office lee_nails & U ! central_&_devon_nb us_post_office & U ! creativo_academy central_&_devon_nb F creativo_academy & U ! lee_nails U lee_nails U ! lee_nails us_post_office & U ! us_post_office U us_post_office U ! us_post_office central_&_devon_nb U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb creativo_academy
Out Ground LTL: & & U ! us_post_office lee_nails & U ! central_&_devon_nb us_post_office & U ! creativo_academy central_&_devon_nb F creativo_academy & U ! lee_nails U lee_nails U ! lee_nails us_post_office & U ! us_post_office U us_post_office U ! us_post_office central_&_devon_nb & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb creativo_academy
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! a c & U ! b a F b & U ! d U d U ! d c & U ! c U c U ! c a & U ! a U a U ! a b
True Lmks: ('Lee Nails', 'US Post Office', 'Central & Devon NB', 'Creativo! Academy')
Out Lmks:['Central & Devon NB', 'Creativo! Academy', 'US Post Office', 'Lee Nails']
Out Grounds: {'Central & Devon NB', 'Creativo! Academy', 'US Post Office', 'Lee Nails'}
Placeholder Map: {'Central & Devon NB': 'a', 'Creativo! Academy': 'b', 'US Post Office': 'c', 'Lee Nails': 'd'}
Syntax Error

72
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Starbucks, only once while avoiding Ruk Sushi & Thai, then visit Ruk Sushi & Thai, once while avoiding Central & Devon SB, only after visiting Central & Devon SB, once visit North Branch Arts
True Ground LTL: & & U ! ruk_sushi_&_thai starbucks & U ! central_&_devon_sb ruk_sushi_&_thai & U ! north_branch_arts central_&_devon_sb F north_branch_arts & U ! starbucks U starbucks U ! starbucks ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai central_&_devon_sb U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb north_branch_arts
Out Ground LTL: & & U ! ruk_sushi_&_thai starbucks & U ! central_&_devon_sb ruk_sushi_&_thai & U ! north_branch_arts central_&_devon_sb F north_branch_arts & U ! starbucks U starbucks U ! starbucks ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb north_branch_arts
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! b c & U ! a b F a & U ! d U d U ! d c & U ! c U c U ! c b & U ! b U b U ! b a
True Lmks: ('Starbucks', 'Ruk Sushi & Thai', 'Central & Devon SB', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Central & Devon SB', 'Ruk Sushi & Thai', 'Starbucks']
Out Grounds: {'North Branch Arts', 'Central & Devon SB', 'Ruk Sushi & Thai', 'Starbucks'}
Placeholder Map: {'North Branch Arts': 'a', 'Central & Devon SB': 'b', 'Ruk Sushi & Thai': 'c', 'Starbucks': 'd'}
Syntax Error

73
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Starbucks, only once while avoiding Edgebrook Coffee Ship, then visit Edgebrook Coffee Ship, once while avoiding North Branch Arts, only after visiting North Branch Arts, once visit Baird & Warner
True Ground LTL: & & U ! edgebrook_coffee_ship starbucks & U ! north_branch_arts edgebrook_coffee_ship & U ! baird_&_warner north_branch_arts F baird_&_warner & U ! starbucks U starbucks U ! starbucks edgebrook_coffee_ship & U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship north_branch_arts U ! north_branch_arts U north_branch_arts U ! north_branch_arts baird_&_warner
Out Ground LTL: & & U ! edgebrook_coffee_ship starbucks & U ! north_branch_arts edgebrook_coffee_ship & U ! baird_&_warner north_branch_arts F baird_&_warner & U ! starbucks U starbucks U ! starbucks edgebrook_coffee_ship & U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts baird_&_warner
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! a b & U ! d a F d & U ! c U c U ! c b & U ! b U b U ! b a & U ! a U a U ! a d
True Lmks: ('Starbucks', 'Edgebrook Coffee Ship', 'North Branch Arts', 'Baird & Warner')
Out Lmks:['Baird & Warner', 'North Branch Arts', 'Edgebrook Coffee Ship', 'Starbucks']
Out Grounds: {'North Branch Arts', 'Edgebrook Coffee Ship', 'Starbucks', 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'Edgebrook Coffee Ship': 'b', 'Starbucks': 'c', 'Baird & Warner': 'd'}
Syntax Error

74
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Little Nest Care, US Post Office, Edgebrook Coffee Ship, Starbucks, once do not visit US Post Office, without visiting Little Nest Care, and do not visit US Post Office, without visiting Edgebrook Coffee Ship, do not visit Starbucks, without visiting Edgebrook Coffee Ship
True Ground LTL: & & U ! us_post_office little_nest_care & U ! edgebrook_coffee_ship us_post_office & U ! starbucks edgebrook_coffee_ship F starbucks & U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office & U ! us_post_office U us_post_office U ! us_post_office edgebrook_coffee_ship U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship starbucks
Out Ground LTL: & & U ! us_post_office little_nest_care & U ! edgebrook_coffee_ship us_post_office & U ! starbucks edgebrook_coffee_ship F starbucks & U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office & U ! us_post_office U us_post_office U ! us_post_office edgebrook_coffee_ship & U ! edgebrook_coffee_ship U edgebrook_coffee_ship U ! edgebrook_coffee_ship starbucks
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! b a & U ! d b F d & U ! c U c U ! c a & U ! a U a U ! a b & U ! b U b U ! b d
True Lmks: ('Little Nest Care', 'US Post Office', 'Edgebrook Coffee Ship', 'Starbucks')
Out Lmks:['US Post Office', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Starbucks']
Out Grounds: {'US Post Office', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Starbucks'}
Placeholder Map: {'US Post Office': 'a', 'Edgebrook Coffee Ship': 'b', 'Little Nest Care': 'c', 'Starbucks': 'd'}
Syntax Error

75
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Starbucks, US Post Office, Creativo! Academy, King Pho, once do not visit US Post Office, without visiting Starbucks, and do not visit US Post Office, without visiting Creativo! Academy, do not visit King Pho, without visiting Creativo! Academy
True Ground LTL: & & U ! us_post_office starbucks & U ! creativo_academy us_post_office & U ! king_pho creativo_academy F king_pho & U ! starbucks U starbucks U ! starbucks us_post_office & U ! us_post_office U us_post_office U ! us_post_office creativo_academy U ! creativo_academy U creativo_academy U ! creativo_academy king_pho
Out Ground LTL: & & U ! us_post_office starbucks & U ! creativo_academy us_post_office & U ! king_pho creativo_academy F king_pho & U ! starbucks U starbucks U ! starbucks us_post_office & U ! us_post_office U us_post_office U ! us_post_office creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy king_pho
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! b c & U ! a b F a & U ! d U d U ! d c & U ! c U c U ! c b & U ! b U b U ! b a
True Lmks: ('Starbucks', 'US Post Office', 'Creativo! Academy', 'King Pho')
Out Lmks:['King Pho', 'Creativo! Academy', 'US Post Office', 'Starbucks']
Out Grounds: {'King Pho', 'Creativo! Academy', 'US Post Office', 'Starbucks'}
Placeholder Map: {'King Pho': 'a', 'Creativo! Academy': 'b', 'US Post Office': 'c', 'Starbucks': 'd'}
Syntax Error

76
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Creativo! Academy, then Little Nest Care, then North Branch Arts, then Ace Hardware, follow this strict order and visit each location only once
True Ground LTL: & & U ! little_nest_care creativo_academy & U ! north_branch_arts little_nest_care & U ! ace_hardware north_branch_arts F ace_hardware & U ! creativo_academy U creativo_academy U ! creativo_academy little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care north_branch_arts U ! north_branch_arts U north_branch_arts U ! north_branch_arts ace_hardware
Out Ground LTL: & & U ! little_nest_care creativo_academy & U ! north_branch_arts little_nest_care & U ! ace_hardware north_branch_arts F ace_hardware & U ! creativo_academy U creativo_academy U ! creativo_academy little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts ace_hardware
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! a c & U ! d a F d & U ! b U b U ! b c & U ! c U c U ! c a & U ! a U a U ! a d
True Lmks: ('Creativo! Academy', 'Little Nest Care', 'North Branch Arts', 'Ace Hardware')
Out Lmks:['North Branch Arts', 'Creativo! Academy', 'Little Nest Care', 'Ace Hardware']
Out Grounds: {'North Branch Arts', 'Creativo! Academy', 'Little Nest Care', 'Ace Hardware'}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', 'Little Nest Care': 'c', 'Ace Hardware': 'd'}
Syntax Error

77
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Domino's, then Kanellos Shoe Repair, then Lee Nails, then Starbucks, follow this strict order and visit each location only once
True Ground LTL: & & U ! kanellos_shoe_repair dominos & U ! lee_nails kanellos_shoe_repair & U ! starbucks lee_nails F starbucks & U ! dominos U dominos U ! dominos kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair lee_nails U ! lee_nails U lee_nails U ! lee_nails starbucks
Out Ground LTL: & & U ! kanellos_shoe_repair dominos & U ! lee_nails kanellos_shoe_repair & U ! starbucks lee_nails F starbucks & U ! dominos U dominos U ! dominos kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair lee_nails & U ! lee_nails U lee_nails U ! lee_nails starbucks
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c F d & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d
True Lmks: ("Domino's", 'Kanellos Shoe Repair', 'Lee Nails', 'Starbucks')
Out Lmks:['Kanellos Shoe Repair', "Domino's", 'Lee Nails', 'Starbucks']
Out Grounds: {'Kanellos Shoe Repair', "Domino's", 'Lee Nails', 'Starbucks'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', "Domino's": 'b', 'Lee Nails': 'c', 'Starbucks': 'd'}
Syntax Error

78
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: please go to Becker Roofing Company, then North Branch Arts, then Ruk Sushi & Thai, then Little Nest Care, in that specific order without revisiting previously visited location
True Ground LTL: & & U ! north_branch_arts becker_roofing_company & U ! ruk_sushi_&_thai north_branch_arts & U ! little_nest_care ruk_sushi_&_thai F little_nest_care & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts ruk_sushi_&_thai U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai little_nest_care
Out Ground LTL: & & U ! north_branch_arts becker_roofing_company & U ! ruk_sushi_&_thai north_branch_arts & U ! little_nest_care ruk_sushi_&_thai F little_nest_care & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company north_branch_arts & U ! north_branch_arts U north_branch_arts U ! north_branch_arts ruk_sushi_&_thai & U ! ruk_sushi_&_thai U ruk_sushi_&_thai U ! ruk_sushi_&_thai little_nest_care
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c F d & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d
True Lmks: ('Becker Roofing Company', 'North Branch Arts', 'Ruk Sushi & Thai', 'Little Nest Care')
Out Lmks:['North Branch Arts', 'Becker Roofing Company', 'Ruk Sushi & Thai', 'Little Nest Care']
Out Grounds: {'North Branch Arts', 'Becker Roofing Company', 'Ruk Sushi & Thai', 'Little Nest Care'}
Placeholder Map: {'North Branch Arts': 'a', 'Becker Roofing Company': 'b', 'Ruk Sushi & Thai': 'c', 'Little Nest Care': 'd'}
Syntax Error

79
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: please go to Local Goods Chicago, then Domino's, then Little Nest Care, then Central & Devon NB, in that specific order without revisiting previously visited location
True Ground LTL: & & U ! dominos local_goods_chicago & U ! little_nest_care dominos & U ! central_&_devon_nb little_nest_care F central_&_devon_nb & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago dominos & U ! dominos U dominos U ! dominos little_nest_care U ! little_nest_care U little_nest_care U ! little_nest_care central_&_devon_nb
Out Ground LTL: & & U ! dominos local_goods_chicago & U ! little_nest_care dominos & U ! central_&_devon_nb little_nest_care F central_&_devon_nb & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago dominos & U ! dominos U dominos U ! dominos little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care central_&_devon_nb
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b d & U ! c b & U ! a c F a & U ! d U d U ! d b & U ! b U b U ! b c & U ! c U c U ! c a
True Lmks: ('Local Goods Chicago', "Domino's", 'Little Nest Care', 'Central & Devon NB')
Out Lmks:['Central & Devon NB', "Domino's", 'Local Goods Chicago', 'Little Nest Care']
Out Grounds: {'Central & Devon NB', "Domino's", 'Little Nest Care', 'Local Goods Chicago'}
Placeholder Map: {'Central & Devon NB': 'a', "Domino's": 'b', 'Little Nest Care': 'c', 'Local Goods Chicago': 'd'}
Syntax Error

80
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Domino's, once without visiting Baird & Warner, then go to Baird & Warner, once without visiting King Pho, then go to King Pho, once without visiting Lee Nails, finally go to Lee Nails
True Ground LTL: & & U ! baird_&_warner dominos & U ! king_pho baird_&_warner & U ! lee_nails king_pho F lee_nails & U ! dominos U dominos U ! dominos baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner king_pho U ! king_pho U king_pho U ! king_pho lee_nails
Out Ground LTL: & & U ! baird_&_warner dominos & U ! king_pho baird_&_warner & U ! lee_nails king_pho F lee_nails & U ! dominos U dominos U ! dominos baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner king_pho & U ! king_pho U king_pho U ! king_pho lee_nails
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! a d & U ! c a F c & U ! b U b U ! b d & U ! d U d U ! d a & U ! a U a U ! a c
True Lmks: ("Domino's", 'Baird & Warner', 'King Pho', 'Lee Nails')
Out Lmks:['King Pho', "Domino's", 'Lee Nails', 'Baird & Warner']
Out Grounds: {'King Pho', "Domino's", 'Lee Nails', 'Baird & Warner'}
Placeholder Map: {'King Pho': 'a', "Domino's": 'b', 'Lee Nails': 'c', 'Baird & Warner': 'd'}
Syntax Error

81
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Starbucks, once without visiting Creativo! Academy, then go to Creativo! Academy, once without visiting My Sister's Closet, then go to My Sister's Closet, once without visiting Central & Devon NB, finally go to Central & Devon NB
True Ground LTL: & & U ! creativo_academy starbucks & U ! my_sisters_closet creativo_academy & U ! central_&_devon_nb my_sisters_closet F central_&_devon_nb & U ! starbucks U starbucks U ! starbucks creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy my_sisters_closet U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet central_&_devon_nb
Out Ground LTL: & & U ! creativo_academy starbucks & U ! my_sisters_closet creativo_academy & U ! central_&_devon_nb my_sisters_closet F central_&_devon_nb & U ! starbucks U starbucks U ! starbucks creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet central_&_devon_nb
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b d & U ! c b & U ! a c F a & U ! d U d U ! d b & U ! b U b U ! b c & U ! c U c U ! c a
True Lmks: ('Starbucks', 'Creativo! Academy', "My Sister's Closet", 'Central & Devon NB')
Out Lmks:['Central & Devon NB', 'Creativo! Academy', "My Sister's Closet", 'Starbucks']
Out Grounds: {'Central & Devon NB', 'Creativo! Academy', "My Sister's Closet", 'Starbucks'}
Placeholder Map: {'Central & Devon NB': 'a', 'Creativo! Academy': 'b', "My Sister's Closet": 'c', 'Starbucks': 'd'}
Syntax Error

82
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Lee Nails, once then go to Local Goods Chicago, once while avoiding Becker Roofing Company, then go to Becker Roofing Company, once while avoiding Creativo! Academy, finally go to Creativo! Academy
True Ground LTL: & & U ! local_goods_chicago lee_nails & U ! becker_roofing_company local_goods_chicago & U ! creativo_academy becker_roofing_company F creativo_academy & U ! lee_nails U lee_nails U ! lee_nails local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago becker_roofing_company U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company creativo_academy
Out Ground LTL: & & U ! local_goods_chicago lee_nails & U ! becker_roofing_company local_goods_chicago & U ! creativo_academy becker_roofing_company F creativo_academy & U ! lee_nails U lee_nails U ! lee_nails local_goods_chicago & U ! local_goods_chicago U local_goods_chicago U ! local_goods_chicago becker_roofing_company & U ! becker_roofing_company U becker_roofing_company U ! becker_roofing_company creativo_academy
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! b c & U ! a b F a & U ! d U d U ! d c & U ! c U c U ! c b & U ! b U b U ! b a
True Lmks: ('Lee Nails', 'Local Goods Chicago', 'Becker Roofing Company', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Becker Roofing Company', 'Local Goods Chicago', 'Lee Nails']
Out Grounds: {'Creativo! Academy', 'Becker Roofing Company', 'Local Goods Chicago', 'Lee Nails'}
Placeholder Map: {'Creativo! Academy': 'a', 'Becker Roofing Company': 'b', 'Local Goods Chicago': 'c', 'Lee Nails': 'd'}
Syntax Error

83
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Domino's, once then go to Associated Bank, once while avoiding Central & Devon NB, then go to Central & Devon NB, once while avoiding North Branch Arts, finally go to North Branch Arts
True Ground LTL: & & U ! associated_bank dominos & U ! central_&_devon_nb associated_bank & U ! north_branch_arts central_&_devon_nb F north_branch_arts & U ! dominos U dominos U ! dominos associated_bank & U ! associated_bank U associated_bank U ! associated_bank central_&_devon_nb U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb north_branch_arts
Out Ground LTL: & & U ! associated_bank dominos & U ! central_&_devon_nb associated_bank & U ! north_branch_arts central_&_devon_nb F north_branch_arts & U ! dominos U dominos U ! dominos associated_bank & U ! associated_bank U associated_bank U ! associated_bank central_&_devon_nb U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb north_branch_arts
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! b a & U ! d b F d & U ! c U c U ! c a & U ! a U a U ! a b U ! b U b U ! b d
True Lmks: ("Domino's", 'Associated Bank', 'Central & Devon NB', 'North Branch Arts')
Out Lmks:['Associated Bank', 'Central & Devon NB', "Domino's", 'North Branch Arts']
Out Grounds: {'Associated Bank', 'Central & Devon NB', "Domino's", 'North Branch Arts'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon NB': 'b', "Domino's": 'c', 'North Branch Arts': 'd'}
True

84
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Central & Devon NB, without visiting Starbucks, then go to Starbucks, without visiting Little Nest Care, then go to Little Nest Care, without visiting US Post Office, finally go to US Post Office, while only visiting each location once
True Ground LTL: & & U ! starbucks central_&_devon_nb & U ! little_nest_care starbucks & U ! us_post_office little_nest_care F us_post_office & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb starbucks & U ! starbucks U starbucks U ! starbucks little_nest_care U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office
Out Ground LTL: & & U ! starbucks central_&_devon_nb & U ! little_nest_care starbucks & U ! us_post_office little_nest_care F us_post_office & U ! central_&_devon_nb U central_&_devon_nb U ! central_&_devon_nb starbucks & U ! starbucks U starbucks U ! starbucks little_nest_care & U ! little_nest_care U little_nest_care U ! little_nest_care us_post_office
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d
True Lmks: ('Central & Devon NB', 'Starbucks', 'Little Nest Care', 'US Post Office')
Out Lmks:['Central & Devon NB', 'Little Nest Care', 'US Post Office', 'Starbucks']
Out Grounds: {'Central & Devon NB', 'Starbucks', 'Little Nest Care', 'US Post Office'}
Placeholder Map: {'Central & Devon NB': 'a', 'Starbucks': 'b', 'Little Nest Care': 'c', 'US Post Office': 'd'}
Syntax Error

85
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to US Post Office, without visiting Central & Devon SB, then go to Central & Devon SB, without visiting Lee Nails, then go to Lee Nails, without visiting Starbucks, finally go to Starbucks, while only visiting each location once
True Ground LTL: & & U ! central_&_devon_sb us_post_office & U ! lee_nails central_&_devon_sb & U ! starbucks lee_nails F starbucks & U ! us_post_office U us_post_office U ! us_post_office central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb lee_nails U ! lee_nails U lee_nails U ! lee_nails starbucks
Out Ground LTL: & & U ! central_&_devon_sb us_post_office & U ! lee_nails central_&_devon_sb & U ! starbucks lee_nails F starbucks & U ! us_post_office U us_post_office U ! us_post_office central_&_devon_sb & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb lee_nails & U ! lee_nails U lee_nails U ! lee_nails starbucks
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c F d & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d
True Lmks: ('US Post Office', 'Central & Devon SB', 'Lee Nails', 'Starbucks')
Out Lmks:['Central & Devon SB', 'US Post Office', 'Lee Nails', 'Starbucks']
Out Grounds: {'Central & Devon SB', 'US Post Office', 'Lee Nails', 'Starbucks'}
Placeholder Map: {'Central & Devon SB': 'a', 'US Post Office': 'b', 'Lee Nails': 'c', 'Starbucks': 'd'}
Syntax Error

86
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Central & Devon SB, then Domino's, then My Sister's Closet, and then Terry's Place, in that strict order without returning to previously visited locations
True Ground LTL: & & U ! dominos central_&_devon_sb & U ! my_sisters_closet dominos & U ! terrys_place my_sisters_closet F terrys_place & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb dominos & U ! dominos U dominos U ! dominos my_sisters_closet U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet terrys_place
Out Ground LTL: & & U ! dominos central_&_devon_sb & U ! my_sisters_closet dominos & U ! terrys_place my_sisters_closet F terrys_place & U ! central_&_devon_sb U central_&_devon_sb U ! central_&_devon_sb dominos & U ! dominos U dominos U ! dominos my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet terrys_place
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c a & U ! b c & U ! d b F d & U ! a U a U ! a c & U ! c U c U ! c b & U ! b U b U ! b d
True Lmks: ('Central & Devon SB', "Domino's", "My Sister's Closet", "Terry's Place")
Out Lmks:['Central & Devon SB', "Domino's", "My Sister's Closet", "Terry's Place"]
Out Grounds: {'Central & Devon SB', "My Sister's Closet", "Domino's", "Terry's Place"}
Placeholder Map: {'Central & Devon SB': 'a', "My Sister's Closet": 'b', "Domino's": 'c', "Terry's Place": 'd'}
Syntax Error

87
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Associated Bank, then Baird & Warner, then Creativo! Academy, and then King Pho, in that strict order without returning to previously visited locations
True Ground LTL: & & U ! baird_&_warner associated_bank & U ! creativo_academy baird_&_warner & U ! king_pho creativo_academy F king_pho & U ! associated_bank U associated_bank U ! associated_bank baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner creativo_academy U ! creativo_academy U creativo_academy U ! creativo_academy king_pho
Out Ground LTL: & & U ! baird_&_warner associated_bank & U ! creativo_academy baird_&_warner & U ! king_pho creativo_academy F king_pho & U ! associated_bank U associated_bank U ! associated_bank baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner creativo_academy & U ! creativo_academy U creativo_academy U ! creativo_academy king_pho
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! c d & U ! b c F b & U ! a U a U ! a d & U ! d U d U ! d c & U ! c U c U ! c b
True Lmks: ('Associated Bank', 'Baird & Warner', 'Creativo! Academy', 'King Pho')
Out Lmks:['Associated Bank', 'King Pho', 'Creativo! Academy', 'Baird & Warner']
Out Grounds: {'Associated Bank', 'King Pho', 'Creativo! Academy', 'Baird & Warner'}
Placeholder Map: {'Associated Bank': 'a', 'King Pho': 'b', 'Creativo! Academy': 'c', 'Baird & Warner': 'd'}
Syntax Error

88
patrolling ['a', 'b', 'c', 'd'] Input utterance: never stop visiting Starbucks, Little Nest Care, Lee Nails, and Terry's Place
True Ground LTL: & G F starbucks & G F little_nest_care & G F lee_nails G F terrys_place
Out Ground LTL: & G F starbucks & G F little_nest_care & G F lee_nails G F terrys_place
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F b G F c
True Lmks: ('Starbucks', 'Little Nest Care', 'Lee Nails', "Terry's Place")
Out Lmks:["Terry's Place", 'Little Nest Care', 'Lee Nails', 'Starbucks']
Out Grounds: {'Little Nest Care', 'Lee Nails', "Terry's Place", 'Starbucks'}
Placeholder Map: {'Little Nest Care': 'a', 'Lee Nails': 'b', "Terry's Place": 'c', 'Starbucks': 'd'}
True

89
patrolling ['a', 'b', 'c', 'd'] Input utterance: never stop visiting Edgebrook Coffee Ship, Central & Devon NB, Becker Roofing Company, and Lee Nails
True Ground LTL: & G F edgebrook_coffee_ship & G F central_&_devon_nb & G F becker_roofing_company G F lee_nails
Out Ground LTL: & G F edgebrook_coffee_ship & G F central_&_devon_nb & G F becker_roofing_company G F lee_nails
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F c G F d
True Lmks: ('Edgebrook Coffee Ship', 'Central & Devon NB', 'Becker Roofing Company', 'Lee Nails')
Out Lmks:['Central & Devon NB', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Lee Nails']
Out Grounds: {'Central & Devon NB', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Lee Nails'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edgebrook Coffee Ship': 'b', 'Becker Roofing Company': 'c', 'Lee Nails': 'd'}
True

90
patrolling ['a', 'b', 'c', 'd'] Input utterance: frequent Ace Hardware, Terry's Place, Baird & Warner, and US Post Office, infinitely in any order
True Ground LTL: & G F ace_hardware & G F terrys_place & G F baird_&_warner G F us_post_office
Out Ground LTL: & G F ace_hardware & G F terrys_place & G F baird_&_warner G F us_post_office
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F d G F b
True Lmks: ('Ace Hardware', "Terry's Place", 'Baird & Warner', 'US Post Office')
Out Lmks:['Baird & Warner', 'US Post Office', "Terry's Place", 'Ace Hardware']
Out Grounds: {'Ace Hardware', 'US Post Office', "Terry's Place", 'Baird & Warner'}
Placeholder Map: {'Ace Hardware': 'a', 'US Post Office': 'b', "Terry's Place": 'c', 'Baird & Warner': 'd'}
True

91
patrolling ['a', 'b', 'c', 'd'] Input utterance: frequent Central & Devon NB, North Branch Arts, Associated Bank, and Edward Jones, infinitely in any order
True Ground LTL: & G F central_&_devon_nb & G F north_branch_arts & G F associated_bank G F edward_jones
Out Ground LTL: & G F central_&_devon_nb & G F north_branch_arts & G F associated_bank G F edward_jones
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F a G F c
True Lmks: ('Central & Devon NB', 'North Branch Arts', 'Associated Bank', 'Edward Jones')
Out Lmks:['Associated Bank', 'Central & Devon NB', 'Edward Jones', 'North Branch Arts']
Out Grounds: {'Associated Bank', 'Central & Devon NB', 'Edward Jones', 'North Branch Arts'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon NB': 'b', 'Edward Jones': 'c', 'North Branch Arts': 'd'}
True

92
patrolling ['a', 'b', 'c', 'd'] Input utterance: please keep visiting My Sister's Closet, North Branch Arts, US Post Office, and Edgebrook Coffee Ship, without stopping
True Ground LTL: & G F my_sisters_closet & G F north_branch_arts & G F us_post_office G F edgebrook_coffee_ship
Out Ground LTL: & G F my_sisters_closet & G F north_branch_arts & G F us_post_office G F edgebrook_coffee_ship
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F d G F b
True Lmks: ("My Sister's Closet", 'North Branch Arts', 'US Post Office', 'Edgebrook Coffee Ship')
Out Lmks:['North Branch Arts', 'Edgebrook Coffee Ship', "My Sister's Closet", 'US Post Office']
Out Grounds: {'North Branch Arts', 'Edgebrook Coffee Ship', "My Sister's Closet", 'US Post Office'}
Placeholder Map: {'North Branch Arts': 'a', 'Edgebrook Coffee Ship': 'b', "My Sister's Closet": 'c', 'US Post Office': 'd'}
True

93
patrolling ['a', 'b', 'c', 'd'] Input utterance: please keep visiting Central & Devon NB, Edgebrook Coffee Ship, Kanellos Shoe Repair, and Lee Nails, without stopping
True Ground LTL: & G F central_&_devon_nb & G F edgebrook_coffee_ship & G F kanellos_shoe_repair G F lee_nails
Out Ground LTL: & G F central_&_devon_nb & G F edgebrook_coffee_ship & G F kanellos_shoe_repair G F lee_nails
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F c G F d
True Lmks: ('Central & Devon NB', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', 'Lee Nails')
Out Lmks:['Central & Devon NB', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', 'Lee Nails']
Out Grounds: {'Central & Devon NB', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', 'Lee Nails'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edgebrook Coffee Ship': 'b', 'Kanellos Shoe Repair': 'c', 'Lee Nails': 'd'}
True

94
patrolling ['a', 'b', 'c', 'd'] Input utterance: make sure Kanellos Shoe Repair, North Branch Arts, Central & Devon NB, and Edward Jones, are visited infinitely
True Ground LTL: & G F kanellos_shoe_repair & G F north_branch_arts & G F central_&_devon_nb G F edward_jones
Out Ground LTL: & G F kanellos_shoe_repair & G F north_branch_arts & G F central_&_devon_nb G F edward_jones
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F a G F c
True Lmks: ('Kanellos Shoe Repair', 'North Branch Arts', 'Central & Devon NB', 'Edward Jones')
Out Lmks:['North Branch Arts', 'Kanellos Shoe Repair', 'Edward Jones', 'Central & Devon NB']
Out Grounds: {'Central & Devon NB', 'Kanellos Shoe Repair', 'Edward Jones', 'North Branch Arts'}
Placeholder Map: {'Central & Devon NB': 'a', 'Kanellos Shoe Repair': 'b', 'Edward Jones': 'c', 'North Branch Arts': 'd'}
True

95
patrolling ['a', 'b', 'c', 'd'] Input utterance: make sure Local Goods Chicago, Lee Nails, Edgebrook Coffee Ship, and Central & Devon NB, are visited infinitely
True Ground LTL: & G F local_goods_chicago & G F lee_nails & G F edgebrook_coffee_ship G F central_&_devon_nb
Out Ground LTL: & G F local_goods_chicago & G F lee_nails & G F edgebrook_coffee_ship G F central_&_devon_nb
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d & G F b G F a
True Lmks: ('Local Goods Chicago', 'Lee Nails', 'Edgebrook Coffee Ship', 'Central & Devon NB')
Out Lmks:['Central & Devon NB', 'Edgebrook Coffee Ship', 'Local Goods Chicago', 'Lee Nails']
Out Grounds: {'Central & Devon NB', 'Edgebrook Coffee Ship', 'Local Goods Chicago', 'Lee Nails'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edgebrook Coffee Ship': 'b', 'Local Goods Chicago': 'c', 'Lee Nails': 'd'}
True

96
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Kanellos Shoe Repair, Domino's, King Pho, and Creativo! Academy, in any order
True Ground LTL: & G F kanellos_shoe_repair & G F dominos & G F king_pho G F creativo_academy
Out Ground LTL: & G F kanellos_shoe_repair & G F dominos & G F king_pho G F creativo_academy
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d & G F a G F b
True Lmks: ('Kanellos Shoe Repair', "Domino's", 'King Pho', 'Creativo! Academy')
Out Lmks:['King Pho', 'Creativo! Academy', 'Kanellos Shoe Repair', "Domino's"]
Out Grounds: {'King Pho', 'Creativo! Academy', 'Kanellos Shoe Repair', "Domino's"}
Placeholder Map: {'King Pho': 'a', 'Creativo! Academy': 'b', 'Kanellos Shoe Repair': 'c', "Domino's": 'd'}
True

97
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Kanellos Shoe Repair, Edgebrook Coffee Ship, Domino's, and Central & Devon SB, in any order
True Ground LTL: & G F kanellos_shoe_repair & G F edgebrook_coffee_ship & G F dominos G F central_&_devon_sb
Out Ground LTL: & G F kanellos_shoe_repair & G F edgebrook_coffee_ship & G F dominos G F central_&_devon_sb
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F c G F d
True Lmks: ('Kanellos Shoe Repair', 'Edgebrook Coffee Ship', "Domino's", 'Central & Devon SB')
Out Lmks:['Edgebrook Coffee Ship', 'Kanellos Shoe Repair', "Domino's", 'Central & Devon SB']
Out Grounds: {'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', "Domino's", 'Central & Devon SB'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Kanellos Shoe Repair': 'b', "Domino's": 'c', 'Central & Devon SB': 'd'}
True

98
patrolling ['a', 'b', 'c', 'd'] Input utterance: visit locations Kanellos Shoe Repair, King Pho, North Branch Arts, and Baird & Warner, an infinite number of times
True Ground LTL: & G F kanellos_shoe_repair & G F king_pho & G F north_branch_arts G F baird_&_warner
Out Ground LTL: & G F king_pho & G F kanellos_shoe_repair & G F north_branch_arts G F baird_&_warner
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b & G F a G F d
True Lmks: ('Kanellos Shoe Repair', 'King Pho', 'North Branch Arts', 'Baird & Warner')
Out Lmks:['King Pho', 'Kanellos Shoe Repair', 'North Branch Arts', 'Baird & Warner']
Out Grounds: {'North Branch Arts', 'Kanellos Shoe Repair', 'King Pho', 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'Kanellos Shoe Repair': 'b', 'King Pho': 'c', 'Baird & Warner': 'd'}
True

99
patrolling ['a', 'b', 'c', 'd'] Input utterance: visit locations Associated Bank, Becker Roofing Company, Ruk Sushi & Thai, and Kanellos Shoe Repair, an infinite number of times
True Ground LTL: & G F associated_bank & G F becker_roofing_company & G F ruk_sushi_&_thai G F kanellos_shoe_repair
Out Ground LTL: & G F ruk_sushi_&_thai & G F associated_bank & G F becker_roofing_company G F kanellos_shoe_repair
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F c G F b
True Lmks: ('Associated Bank', 'Becker Roofing Company', 'Ruk Sushi & Thai', 'Kanellos Shoe Repair')
Out Lmks:['Associated Bank', 'Kanellos Shoe Repair', 'Becker Roofing Company', 'Ruk Sushi & Thai']
Out Grounds: {'Associated Bank', 'Kanellos Shoe Repair', 'Becker Roofing Company', 'Ruk Sushi & Thai'}
Placeholder Map: {'Associated Bank': 'a', 'Kanellos Shoe Repair': 'b', 'Becker Roofing Company': 'c', 'Ruk Sushi & Thai': 'd'}
True

100
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Baird & Warner, US Post Office, Local Goods Chicago, and Domino's
True Ground LTL: & G F baird_&_warner & G F us_post_office & G F local_goods_chicago G F dominos
Out Ground LTL: & G F us_post_office & G F local_goods_chicago & G F dominos G F baird_&_warner
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c & G F a G F d
True Lmks: ('Baird & Warner', 'US Post Office', 'Local Goods Chicago', "Domino's")
Out Lmks:["Domino's", 'US Post Office', 'Local Goods Chicago', 'Baird & Warner']
Out Grounds: {"Domino's", 'US Post Office', 'Local Goods Chicago', 'Baird & Warner'}
Placeholder Map: {"Domino's": 'a', 'US Post Office': 'b', 'Local Goods Chicago': 'c', 'Baird & Warner': 'd'}
True

101
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Associated Bank, Little Nest Care, Currency Change, and Edgebrook Coffee Ship
True Ground LTL: & G F associated_bank & G F little_nest_care & G F currency_change G F edgebrook_coffee_ship
Out Ground LTL: & G F little_nest_care & G F currency_change G F edgebrook_coffee_ship
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d G F b
True Lmks: ('Associated Bank', 'Little Nest Care', 'Currency Change', 'Edgebrook Coffee Ship')
Out Lmks:['Associated Bank', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Currency Change']
Out Grounds: {'Associated Bank', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Currency Change'}
Placeholder Map: {'Associated Bank': 'a', 'Edgebrook Coffee Ship': 'b', 'Little Nest Care': 'c', 'Currency Change': 'd'}
False

102
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Lee Nails, US Post Office, Ruk Sushi & Thai, and Kanellos Shoe Repair
True Ground LTL: & G F lee_nails & G F us_post_office & G F ruk_sushi_&_thai G F kanellos_shoe_repair
Out Ground LTL: & G F kanellos_shoe_repair & G F ruk_sushi_&_thai & G F us_post_office G F lee_nails
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F b G F d
True Lmks: ('Lee Nails', 'US Post Office', 'Ruk Sushi & Thai', 'Kanellos Shoe Repair')
Out Lmks:['Kanellos Shoe Repair', 'US Post Office', 'Ruk Sushi & Thai', 'Lee Nails']
Out Grounds: {'Kanellos Shoe Repair', 'US Post Office', 'Ruk Sushi & Thai', 'Lee Nails'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'US Post Office': 'b', 'Ruk Sushi & Thai': 'c', 'Lee Nails': 'd'}
True

103
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Edward Jones, Becker Roofing Company, Associated Bank, and Kanellos Shoe Repair
True Ground LTL: & G F edward_jones & G F becker_roofing_company & G F associated_bank G F kanellos_shoe_repair
Out Ground LTL: & G F kanellos_shoe_repair & G F associated_bank & G F becker_roofing_company G F edward_jones
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F c G F d
True Lmks: ('Edward Jones', 'Becker Roofing Company', 'Associated Bank', 'Kanellos Shoe Repair')
Out Lmks:['Associated Bank', 'Kanellos Shoe Repair', 'Becker Roofing Company', 'Edward Jones']
Out Grounds: {'Associated Bank', 'Kanellos Shoe Repair', 'Becker Roofing Company', 'Edward Jones'}
Placeholder Map: {'Associated Bank': 'a', 'Kanellos Shoe Repair': 'b', 'Becker Roofing Company': 'c', 'Edward Jones': 'd'}
True

104
patrolling ['a', 'b', 'c', 'd'] Input utterance: go to Little Nest Care, US Post Office, Becker Roofing Company, and Baird & Warner, over and over again
True Ground LTL: & G F little_nest_care & G F us_post_office & G F becker_roofing_company G F baird_&_warner
Out Ground LTL: & G F little_nest_care & G F us_post_office & G F becker_roofing_company G F baird_&_warner
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F b & G F c G F a
True Lmks: ('Little Nest Care', 'US Post Office', 'Becker Roofing Company', 'Baird & Warner')
Out Lmks:['US Post Office', 'Becker Roofing Company', 'Little Nest Care', 'Baird & Warner']
Out Grounds: {'Baird & Warner', 'US Post Office', 'Becker Roofing Company', 'Little Nest Care'}
Placeholder Map: {'Baird & Warner': 'a', 'US Post Office': 'b', 'Becker Roofing Company': 'c', 'Little Nest Care': 'd'}
True

105
patrolling ['a', 'b', 'c', 'd'] Input utterance: go to Local Goods Chicago, Lee Nails, Starbucks, and Edgebrook Coffee Ship, over and over again
True Ground LTL: & G F local_goods_chicago & G F lee_nails & G F starbucks G F edgebrook_coffee_ship
Out Ground LTL: & G F local_goods_chicago & G F edgebrook_coffee_ship & G F starbucks G F lee_nails
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F d G F c
True Lmks: ('Local Goods Chicago', 'Lee Nails', 'Starbucks', 'Edgebrook Coffee Ship')
Out Lmks:['Edgebrook Coffee Ship', 'Local Goods Chicago', 'Lee Nails', 'Starbucks']
Out Grounds: {'Edgebrook Coffee Ship', 'Local Goods Chicago', 'Lee Nails', 'Starbucks'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Local Goods Chicago': 'b', 'Lee Nails': 'c', 'Starbucks': 'd'}
True

106
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue to stop at Creativo! Academy, Ruk Sushi & Thai, Edward Jones, and Little Nest Care
True Ground LTL: & G F creativo_academy & G F ruk_sushi_&_thai & G F edward_jones G F little_nest_care
Out Ground LTL: & G F creativo_academy & G F ruk_sushi_&_thai & G F edward_jones G F little_nest_care
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F a G F c
True Lmks: ('Creativo! Academy', 'Ruk Sushi & Thai', 'Edward Jones', 'Little Nest Care')
Out Lmks:['Edward Jones', 'Creativo! Academy', 'Little Nest Care', 'Ruk Sushi & Thai']
Out Grounds: {'Edward Jones', 'Creativo! Academy', 'Little Nest Care', 'Ruk Sushi & Thai'}
Placeholder Map: {'Edward Jones': 'a', 'Creativo! Academy': 'b', 'Little Nest Care': 'c', 'Ruk Sushi & Thai': 'd'}
True

107
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue to stop at Currency Change, Baird & Warner, Central & Devon SB, and Ruk Sushi & Thai
True Ground LTL: & G F currency_change & G F baird_&_warner & G F central_&_devon_sb G F ruk_sushi_&_thai
Out Ground LTL: & G F currency_change & G F baird_&_warner & G F central_&_devon_sb G F ruk_sushi_&_thai
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d & G F a G F b
True Lmks: ('Currency Change', 'Baird & Warner', 'Central & Devon SB', 'Ruk Sushi & Thai')
Out Lmks:['Central & Devon SB', 'Ruk Sushi & Thai', 'Currency Change', 'Baird & Warner']
Out Grounds: {'Central & Devon SB', 'Ruk Sushi & Thai', 'Currency Change', 'Baird & Warner'}
Placeholder Map: {'Central & Devon SB': 'a', 'Ruk Sushi & Thai': 'b', 'Currency Change': 'c', 'Baird & Warner': 'd'}
True

108
patrolling ['a', 'b', 'c', 'd'] Input utterance: continuously visit King Pho, Little Nest Care, Baird & Warner, and North Branch Arts
True Ground LTL: & G F king_pho & G F little_nest_care & G F baird_&_warner G F north_branch_arts
Out Ground LTL: & G F king_pho & G F little_nest_care & G F baird_&_warner G F north_branch_arts
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c & G F d G F a
True Lmks: ('King Pho', 'Little Nest Care', 'Baird & Warner', 'North Branch Arts')
Out Lmks:['King Pho', 'Little Nest Care', 'North Branch Arts', 'Baird & Warner']
Out Grounds: {'North Branch Arts', 'King Pho', 'Little Nest Care', 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'King Pho': 'b', 'Little Nest Care': 'c', 'Baird & Warner': 'd'}
True

109
patrolling ['a', 'b', 'c', 'd'] Input utterance: continuously visit Edward Jones, Becker Roofing Company, Edgebrook Coffee Ship, and Ruk Sushi & Thai
True Ground LTL: & G F edward_jones & G F becker_roofing_company & G F edgebrook_coffee_ship G F ruk_sushi_&_thai
Out Ground LTL: & G F edward_jones & G F becker_roofing_company & G F edgebrook_coffee_ship G F ruk_sushi_&_thai
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F b G F d
True Lmks: ('Edward Jones', 'Becker Roofing Company', 'Edgebrook Coffee Ship', 'Ruk Sushi & Thai')
Out Lmks:['Edgebrook Coffee Ship', 'Becker Roofing Company', 'Edward Jones', 'Ruk Sushi & Thai']
Out Grounds: {'Edward Jones', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Ruk Sushi & Thai'}
Placeholder Map: {'Edward Jones': 'a', 'Edgebrook Coffee Ship': 'b', 'Becker Roofing Company': 'c', 'Ruk Sushi & Thai': 'd'}
True

110
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not go to Edward Jones, Kanellos Shoe Repair, Baird & Warner, and Edgebrook Coffee Ship, Kanellos Shoe Repair, finite number of times
True Ground LTL: & G F kanellos_shoe_repair & G F edgebrook_coffee_ship & G F edward_jones G F baird_&_warner
Out Ground LTL: & & U ! kanellos_shoe_repair edward_jones & U ! baird_&_warner kanellos_shoe_repair & U ! edgebrook_coffee_ship baird_&_warner F edgebrook_coffee_ship & U ! edward_jones U edward_jones U ! edward_jones kanellos_shoe_repair & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner edgebrook_coffee_ship
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & & U ! b c & U ! d b & U ! a d F a & U ! c U c U ! c b & U ! b U b U ! b d & U ! d U d U ! d a
True Lmks: ('Kanellos Shoe Repair', 'Edgebrook Coffee Ship', 'Edward Jones', 'Baird & Warner')
Out Lmks:['Edgebrook Coffee Ship', 'Kanellos Shoe Repair', 'Edward Jones', 'Baird & Warner']
Out Grounds: {'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', 'Edward Jones', 'Baird & Warner'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Kanellos Shoe Repair': 'b', 'Edward Jones': 'c', 'Baird & Warner': 'd'}
Syntax Error

111
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not go to Kanellos Shoe Repair, My Sister's Closet, Baird & Warner, and North Branch Arts, My Sister's Closet, finite number of times
True Ground LTL: & G F my_sisters_closet & G F north_branch_arts & G F kanellos_shoe_repair G F baird_&_warner
Out Ground LTL: & & U ! my_sisters_closet kanellos_shoe_repair & U ! baird_&_warner my_sisters_closet & U ! north_branch_arts baird_&_warner F north_branch_arts & U ! kanellos_shoe_repair U kanellos_shoe_repair U ! kanellos_shoe_repair my_sisters_closet & U ! my_sisters_closet U my_sisters_closet U ! my_sisters_closet baird_&_warner & U ! baird_&_warner U baird_&_warner U ! baird_&_warner north_branch_arts
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & & U ! c b & U ! d c & U ! a d F a & U ! b U b U ! b c & U ! c U c U ! c d & U ! d U d U ! d a
True Lmks: ("My Sister's Closet", 'North Branch Arts', 'Kanellos Shoe Repair', 'Baird & Warner')
Out Lmks:['North Branch Arts', 'Kanellos Shoe Repair', "My Sister's Closet", 'Baird & Warner']
Out Grounds: {'North Branch Arts', 'Kanellos Shoe Repair', "My Sister's Closet", 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'Kanellos Shoe Repair': 'b', "My Sister's Closet": 'c', 'Baird & Warner': 'd'}
Syntax Error

112
patrolling ['a', 'b', 'c', 'd'] Input utterance: perpetually travel to Creativo! Academy, North Branch Arts, and Central & Devon SB
True Ground LTL: & G F central_&_devon_sb & G F creativo_academy & G F north_branch_arts G F dominos
Out Ground LTL: & G F creativo_academy & G F central_&_devon_sb G F north_branch_arts
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c G F a
True Lmks: ('Central & Devon SB', 'Creativo! Academy', 'North Branch Arts', "Domino's")
Out Lmks:['North Branch Arts', 'Creativo! Academy', 'Central & Devon SB']
Out Grounds: {'North Branch Arts', 'Creativo! Academy', 'Central & Devon SB'}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', 'Central & Devon SB': 'c'}
False

113
patrolling ['a', 'b', 'c', 'd'] Input utterance: perpetually travel to Starbucks, Edward Jones, and US Post Office
True Ground LTL: & G F us_post_office & G F starbucks & G F edward_jones G F my_sisters_closet
Out Ground LTL: & G F starbucks & G F edward_jones G F us_post_office
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b G F a
True Lmks: ('US Post Office', 'Starbucks', 'Edward Jones', "My Sister's Closet")
Out Lmks:['US Post Office', 'Edward Jones', 'Starbucks']
Out Grounds: {'US Post Office', 'Edward Jones', 'Starbucks'}
Placeholder Map: {'US Post Office': 'a', 'Edward Jones': 'b', 'Starbucks': 'c'}
False

114
patrolling ['a', 'b', 'c', 'd'] Input utterance: explore Ruk Sushi & Thai, Lee Nails, and Edward Jones, endlessy
True Ground LTL: & G F lee_nails & G F ruk_sushi_&_thai & G F edward_jones G F creativo_academy
Out Ground LTL: & G F lee_nails & G F ruk_sushi_&_thai G F edward_jones
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b G F a
True Lmks: ('Lee Nails', 'Ruk Sushi & Thai', 'Edward Jones', 'Creativo! Academy')
Out Lmks:['Edward Jones', 'Ruk Sushi & Thai', 'Lee Nails']
Out Grounds: {'Edward Jones', 'Ruk Sushi & Thai', 'Lee Nails'}
Placeholder Map: {'Edward Jones': 'a', 'Ruk Sushi & Thai': 'b', 'Lee Nails': 'c'}
False

115
patrolling ['a', 'b', 'c', 'd'] Input utterance: explore US Post Office, Associated Bank, and Central & Devon NB, endlessy
True Ground LTL: & G F associated_bank & G F us_post_office & G F central_&_devon_nb G F terrys_place
Out Ground LTL: & G F associated_bank & G F us_post_office G F central_&_devon_nb
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c G F b
True Lmks: ('Associated Bank', 'US Post Office', 'Central & Devon NB', "Terry's Place")
Out Lmks:['Associated Bank', 'Central & Devon NB', 'US Post Office']
Out Grounds: {'Associated Bank', 'Central & Devon NB', 'US Post Office'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon NB': 'b', 'US Post Office': 'c'}
RER or Grounding Error

116
patrolling ['a', 'b', 'c', 'd'] Input utterance: you are prohibited from not infinitely going to Kanellos Shoe Repair, North Branch Arts, My Sister's Closet, and Baird & Warner
True Ground LTL: & G F my_sisters_closet & G F baird_&_warner & G F north_branch_arts G F kanellos_shoe_repair
Out Ground LTL: & G F baird_&_warner & G F my_sisters_closet & G F north_branch_arts & G F kanellos_shoe_repair G F h
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F a & G F b G F h
True Lmks: ("My Sister's Closet", 'Baird & Warner', 'North Branch Arts', 'Kanellos Shoe Repair')
Out Lmks:['North Branch Arts', 'Kanellos Shoe Repair', "My Sister's Closet", 'Baird & Warner']
Out Grounds: {'North Branch Arts', 'Kanellos Shoe Repair', "My Sister's Closet", 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'Kanellos Shoe Repair': 'b', "My Sister's Closet": 'c', 'Baird & Warner': 'd'}
False

117
patrolling ['a', 'b', 'c', 'd'] Input utterance: you are prohibited from not infinitely going to Central & Devon NB, Edward Jones, US Post Office, and Starbucks
True Ground LTL: & G F us_post_office & G F starbucks & G F edward_jones G F central_&_devon_nb
Out Ground LTL: & G F edward_jones & G F us_post_office & G F starbucks G F central_&_devon_nb
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b & G F d G F a
True Lmks: ('US Post Office', 'Starbucks', 'Edward Jones', 'Central & Devon NB')
Out Lmks:['Central & Devon NB', 'US Post Office', 'Edward Jones', 'Starbucks']
Out Grounds: {'Central & Devon NB', 'US Post Office', 'Edward Jones', 'Starbucks'}
Placeholder Map: {'Central & Devon NB': 'a', 'US Post Office': 'b', 'Edward Jones': 'c', 'Starbucks': 'd'}
True

118
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting King Pho, Little Nest Care, Associated Bank, and Edgebrook Coffee Ship, in no specific order
True Ground LTL: & G F king_pho & G F little_nest_care & G F associated_bank G F edgebrook_coffee_ship
Out Ground LTL: & G F king_pho & G F little_nest_care & G F associated_bank G F edgebrook_coffee_ship
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F a G F c
True Lmks: ('King Pho', 'Little Nest Care', 'Associated Bank', 'Edgebrook Coffee Ship')
Out Lmks:['Associated Bank', 'King Pho', 'Edgebrook Coffee Ship', 'Little Nest Care']
Out Grounds: {'Associated Bank', 'King Pho', 'Edgebrook Coffee Ship', 'Little Nest Care'}
Placeholder Map: {'Associated Bank': 'a', 'King Pho': 'b', 'Edgebrook Coffee Ship': 'c', 'Little Nest Care': 'd'}
True

119
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Domino's, Little Nest Care, Terry's Place, and Becker Roofing Company, in no specific order
True Ground LTL: & G F dominos & G F little_nest_care & G F terrys_place G F becker_roofing_company
Out Ground LTL: & G F dominos & G F little_nest_care & G F terrys_place G F becker_roofing_company
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F d & G F c G F b
True Lmks: ("Domino's", 'Little Nest Care', "Terry's Place", 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', "Domino's", "Terry's Place", 'Little Nest Care']
Out Grounds: {"Domino's", 'Becker Roofing Company', "Terry's Place", 'Little Nest Care'}
Placeholder Map: {"Domino's": 'a', 'Becker Roofing Company': 'b', "Terry's Place": 'c', 'Little Nest Care': 'd'}
True

120
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Associated Bank, Kanellos Shoe Repair, Ace Hardware, and Edward Jones, in any order
True Ground LTL: & G F associated_bank & G F kanellos_shoe_repair & G F ace_hardware G F edward_jones
Out Ground LTL: & G F associated_bank & G F kanellos_shoe_repair & G F ace_hardware G F edward_jones
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F d G F c
True Lmks: ('Associated Bank', 'Kanellos Shoe Repair', 'Ace Hardware', 'Edward Jones')
Out Lmks:['Associated Bank', 'Kanellos Shoe Repair', 'Edward Jones', 'Ace Hardware']
Out Grounds: {'Associated Bank', 'Kanellos Shoe Repair', 'Edward Jones', 'Ace Hardware'}
Placeholder Map: {'Associated Bank': 'a', 'Kanellos Shoe Repair': 'b', 'Edward Jones': 'c', 'Ace Hardware': 'd'}
True

121
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to King Pho, Associated Bank, Little Nest Care, and US Post Office, in any order
True Ground LTL: & G F king_pho & G F associated_bank & G F little_nest_care G F us_post_office
Out Ground LTL: & G F king_pho & G F associated_bank & G F little_nest_care G F us_post_office
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F d G F b
True Lmks: ('King Pho', 'Associated Bank', 'Little Nest Care', 'US Post Office')
Out Lmks:['Associated Bank', 'King Pho', 'Little Nest Care', 'US Post Office']
Out Grounds: {'Associated Bank', 'US Post Office', 'King Pho', 'Little Nest Care'}
Placeholder Map: {'Associated Bank': 'a', 'US Post Office': 'b', 'King Pho': 'c', 'Little Nest Care': 'd'}
True

122
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Central & Devon SB, Domino's, Starbucks, and US Post Office, in any order infinitely
True Ground LTL: & G F central_&_devon_sb & G F dominos & G F starbucks G F us_post_office
Out Ground LTL: & G F central_&_devon_sb & G F dominos & G F starbucks G F us_post_office
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F d G F b
True Lmks: ('Central & Devon SB', "Domino's", 'Starbucks', 'US Post Office')
Out Lmks:['US Post Office', 'Central & Devon SB', "Domino's", 'Starbucks']
Out Grounds: {'Central & Devon SB', 'US Post Office', "Domino's", 'Starbucks'}
Placeholder Map: {'Central & Devon SB': 'a', 'US Post Office': 'b', "Domino's": 'c', 'Starbucks': 'd'}
True

123
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting North Branch Arts, Edgebrook Coffee Ship, Central & Devon SB, and King Pho, in any order infinitely
True Ground LTL: & G F north_branch_arts & G F edgebrook_coffee_ship & G F central_&_devon_sb G F king_pho
Out Ground LTL: & G F north_branch_arts & G F edgebrook_coffee_ship & G F central_&_devon_sb G F king_pho
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F c G F d
True Lmks: ('North Branch Arts', 'Edgebrook Coffee Ship', 'Central & Devon SB', 'King Pho')
Out Lmks:['North Branch Arts', 'Edgebrook Coffee Ship', 'Central & Devon SB', 'King Pho']
Out Grounds: {'North Branch Arts', 'Edgebrook Coffee Ship', 'Central & Devon SB', 'King Pho'}
Placeholder Map: {'North Branch Arts': 'a', 'Edgebrook Coffee Ship': 'b', 'Central & Devon SB': 'c', 'King Pho': 'd'}
True

124
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Edgebrook Coffee Ship, Ruk Sushi & Thai, Domino's, and Starbucks, in no specific order
True Ground LTL: & G F edgebrook_coffee_ship & G F ruk_sushi_&_thai & G F dominos G F starbucks
Out Ground LTL: & G F edgebrook_coffee_ship & G F ruk_sushi_&_thai & G F dominos G F starbucks
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F b G F d
True Lmks: ('Edgebrook Coffee Ship', 'Ruk Sushi & Thai', "Domino's", 'Starbucks')
Out Lmks:['Edgebrook Coffee Ship', "Domino's", 'Ruk Sushi & Thai', 'Starbucks']
Out Grounds: {'Edgebrook Coffee Ship', "Domino's", 'Ruk Sushi & Thai', 'Starbucks'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', "Domino's": 'b', 'Ruk Sushi & Thai': 'c', 'Starbucks': 'd'}
True

125
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Edgebrook Coffee Ship, King Pho, US Post Office, and Lee Nails, in no specific order
True Ground LTL: & G F edgebrook_coffee_ship & G F king_pho & G F us_post_office G F lee_nails
Out Ground LTL: & G F edgebrook_coffee_ship & G F king_pho & G F us_post_office G F lee_nails
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F c G F d
True Lmks: ('Edgebrook Coffee Ship', 'King Pho', 'US Post Office', 'Lee Nails')
Out Lmks:['King Pho', 'Edgebrook Coffee Ship', 'US Post Office', 'Lee Nails']
Out Grounds: {'King Pho', 'Edgebrook Coffee Ship', 'US Post Office', 'Lee Nails'}
Placeholder Map: {'King Pho': 'a', 'Edgebrook Coffee Ship': 'b', 'US Post Office': 'c', 'Lee Nails': 'd'}
True

126
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop going to Kanellos Shoe Repair, Starbucks, Associated Bank, and Baird & Warner, in any order
True Ground LTL: & G F kanellos_shoe_repair & G F starbucks & G F associated_bank G F baird_&_warner
Out Ground LTL: & G F kanellos_shoe_repair & G F starbucks & G F associated_bank G F baird_&_warner
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c & G F a G F d
True Lmks: ('Kanellos Shoe Repair', 'Starbucks', 'Associated Bank', 'Baird & Warner')
Out Lmks:['Associated Bank', 'Baird & Warner', 'Kanellos Shoe Repair', 'Starbucks']
Out Grounds: {'Associated Bank', 'Kanellos Shoe Repair', 'Starbucks', 'Baird & Warner'}
Placeholder Map: {'Associated Bank': 'a', 'Kanellos Shoe Repair': 'b', 'Starbucks': 'c', 'Baird & Warner': 'd'}
True

127
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop going to Kanellos Shoe Repair, Associated Bank, Domino's, and Edgebrook Coffee Ship, in any order
True Ground LTL: & G F kanellos_shoe_repair & G F associated_bank & G F dominos G F edgebrook_coffee_ship
Out Ground LTL: & G F kanellos_shoe_repair & G F associated_bank & G F dominos G F edgebrook_coffee_ship
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F d G F b
True Lmks: ('Kanellos Shoe Repair', 'Associated Bank', "Domino's", 'Edgebrook Coffee Ship')
Out Lmks:['Associated Bank', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', "Domino's"]
Out Grounds: {'Associated Bank', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', "Domino's"}
Placeholder Map: {'Associated Bank': 'a', 'Edgebrook Coffee Ship': 'b', 'Kanellos Shoe Repair': 'c', "Domino's": 'd'}
True

128
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Terry's Place, Local Goods Chicago, Ruk Sushi & Thai, and Currency Change, an infinite number of times
True Ground LTL: & G F terrys_place & G F local_goods_chicago & G F ruk_sushi_&_thai G F currency_change
Out Ground LTL: & G F terrys_place & G F local_goods_chicago & G F ruk_sushi_&_thai G F currency_change
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F b & G F a G F c
True Lmks: ("Terry's Place", 'Local Goods Chicago', 'Ruk Sushi & Thai', 'Currency Change')
Out Lmks:['Currency Change', 'Ruk Sushi & Thai', 'Local Goods Chicago', "Terry's Place"]
Out Grounds: {'Ruk Sushi & Thai', 'Local Goods Chicago', 'Currency Change', "Terry's Place"}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Local Goods Chicago': 'b', 'Currency Change': 'c', "Terry's Place": 'd'}
True

129
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Domino's, My Sister's Closet, Central & Devon SB, and King Pho, an infinite number of times
True Ground LTL: & G F dominos & G F my_sisters_closet & G F central_&_devon_sb G F king_pho
Out Ground LTL: & G F dominos & G F my_sisters_closet & G F central_&_devon_sb G F king_pho
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F b G F a
True Lmks: ("Domino's", "My Sister's Closet", 'Central & Devon SB', 'King Pho')
Out Lmks:['King Pho', 'Central & Devon SB', "Domino's", "My Sister's Closet"]
Out Grounds: {'King Pho', 'Central & Devon SB', "My Sister's Closet", "Domino's"}
Placeholder Map: {'King Pho': 'a', 'Central & Devon SB': 'b', "My Sister's Closet": 'c', "Domino's": 'd'}
True

130
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Becker Roofing Company, Baird & Warner, Lee Nails, and My Sister's Closet, an infinite number of times
True Ground LTL: & G F becker_roofing_company & G F baird_&_warner & G F lee_nails G F my_sisters_closet
Out Ground LTL: & G F becker_roofing_company & G F baird_&_warner & G F lee_nails G F my_sisters_closet
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F d & G F c G F b
True Lmks: ('Becker Roofing Company', 'Baird & Warner', 'Lee Nails', "My Sister's Closet")
Out Lmks:['Becker Roofing Company', "My Sister's Closet", 'Lee Nails', 'Baird & Warner']
Out Grounds: {'Becker Roofing Company', "My Sister's Closet", 'Lee Nails', 'Baird & Warner'}
Placeholder Map: {'Becker Roofing Company': 'a', "My Sister's Closet": 'b', 'Lee Nails': 'c', 'Baird & Warner': 'd'}
True

131
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Creativo! Academy, Central & Devon NB, Ace Hardware, and My Sister's Closet, an infinite number of times
True Ground LTL: & G F creativo_academy & G F central_&_devon_nb & G F ace_hardware G F my_sisters_closet
Out Ground LTL: & G F creativo_academy & G F central_&_devon_nb & G F ace_hardware G F my_sisters_closet
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F d G F c
True Lmks: ('Creativo! Academy', 'Central & Devon NB', 'Ace Hardware', "My Sister's Closet")
Out Lmks:['Central & Devon NB', 'Creativo! Academy', "My Sister's Closet", 'Ace Hardware']
Out Grounds: {'Central & Devon NB', 'Creativo! Academy', "My Sister's Closet", 'Ace Hardware'}
Placeholder Map: {'Central & Devon NB': 'a', 'Creativo! Academy': 'b', "My Sister's Closet": 'c', 'Ace Hardware': 'd'}
True

132
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue visiting Becker Roofing Company, North Branch Arts, Ace Hardware, and Associated Bank, an infinite number of times
True Ground LTL: & G F becker_roofing_company & G F north_branch_arts & G F ace_hardware G F associated_bank
Out Ground LTL: & G F becker_roofing_company & G F north_branch_arts & G F ace_hardware G F associated_bank
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b & G F d G F a
True Lmks: ('Becker Roofing Company', 'North Branch Arts', 'Ace Hardware', 'Associated Bank')
Out Lmks:['Associated Bank', 'North Branch Arts', 'Becker Roofing Company', 'Ace Hardware']
Out Grounds: {'Associated Bank', 'North Branch Arts', 'Becker Roofing Company', 'Ace Hardware'}
Placeholder Map: {'Associated Bank': 'a', 'North Branch Arts': 'b', 'Becker Roofing Company': 'c', 'Ace Hardware': 'd'}
True

133
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue visiting Domino's, Central & Devon SB, Kanellos Shoe Repair, and US Post Office, an infinite number of times
True Ground LTL: & G F dominos & G F central_&_devon_sb & G F kanellos_shoe_repair G F us_post_office
Out Ground LTL: & G F dominos & G F central_&_devon_sb & G F kanellos_shoe_repair G F us_post_office
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d & G F a G F b
True Lmks: ("Domino's", 'Central & Devon SB', 'Kanellos Shoe Repair', 'US Post Office')
Out Lmks:['Kanellos Shoe Repair', 'Central & Devon SB', "Domino's", 'US Post Office']
Out Grounds: {'Kanellos Shoe Repair', 'US Post Office', "Domino's", 'Central & Devon SB'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'US Post Office': 'b', "Domino's": 'c', 'Central & Devon SB': 'd'}
True

134
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Creativo! Academy, US Post Office, My Sister's Closet, and Becker Roofing Company
True Ground LTL: & G F creativo_academy & G F us_post_office & G F my_sisters_closet G F becker_roofing_company
Out Ground LTL: & G F creativo_academy & G F us_post_office & G F my_sisters_closet G F becker_roofing_company
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F d G F c
True Lmks: ('Creativo! Academy', 'US Post Office', "My Sister's Closet", 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', 'Creativo! Academy', 'US Post Office', "My Sister's Closet"]
Out Grounds: {'US Post Office', 'Creativo! Academy', 'Becker Roofing Company', "My Sister's Closet"}
Placeholder Map: {'US Post Office': 'a', 'Creativo! Academy': 'b', 'Becker Roofing Company': 'c', "My Sister's Closet": 'd'}
True

135
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Creativo! Academy, Central & Devon NB, Currency Change, and US Post Office
True Ground LTL: & G F creativo_academy & G F central_&_devon_nb & G F currency_change G F us_post_office
Out Ground LTL: & G F creativo_academy & G F central_&_devon_nb & G F currency_change G F us_post_office
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F d G F c
True Lmks: ('Creativo! Academy', 'Central & Devon NB', 'Currency Change', 'US Post Office')
Out Lmks:['Central & Devon NB', 'Creativo! Academy', 'US Post Office', 'Currency Change']
Out Grounds: {'Central & Devon NB', 'Creativo! Academy', 'US Post Office', 'Currency Change'}
Placeholder Map: {'Central & Devon NB': 'a', 'Creativo! Academy': 'b', 'US Post Office': 'c', 'Currency Change': 'd'}
True

136
global_avoidance ['a', 'b', 'c'] Input utterance: never go to Currency Change, Local Goods Chicago, or Edward Jones
True Ground LTL: & G ! currency_change & G ! local_goods_chicago G ! edward_jones
Out Ground LTL: & G ! local_goods_chicago & G ! currency_change G ! edward_jones
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Currency Change', 'Local Goods Chicago', 'Edward Jones')
Out Lmks:['Edward Jones', 'Local Goods Chicago', 'Currency Change']
Out Grounds: {'Edward Jones', 'Local Goods Chicago', 'Currency Change'}
Placeholder Map: {'Edward Jones': 'a', 'Local Goods Chicago': 'b', 'Currency Change': 'c'}
True

137
global_avoidance ['a', 'b', 'c'] Input utterance: never go to Local Goods Chicago, Terry's Place, or Becker Roofing Company
True Ground LTL: & G ! local_goods_chicago & G ! terrys_place G ! becker_roofing_company
Out Ground LTL: & G ! terrys_place & G ! local_goods_chicago G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Local Goods Chicago', "Terry's Place", 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', 'Local Goods Chicago', "Terry's Place"]
Out Grounds: {'Becker Roofing Company', 'Local Goods Chicago', "Terry's Place"}
Placeholder Map: {'Becker Roofing Company': 'a', 'Local Goods Chicago': 'b', "Terry's Place": 'c'}
True

138
global_avoidance ['a', 'b', 'c'] Input utterance: you can never visit US Post Office, Edward Jones, or Creativo! Academy
True Ground LTL: & G ! us_post_office & G ! edward_jones G ! creativo_academy
Out Ground LTL: & G ! us_post_office & G ! edward_jones G ! creativo_academy
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('US Post Office', 'Edward Jones', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'US Post Office', 'Edward Jones']
Out Grounds: {'Creativo! Academy', 'US Post Office', 'Edward Jones'}
Placeholder Map: {'Creativo! Academy': 'a', 'US Post Office': 'b', 'Edward Jones': 'c'}
True

139
global_avoidance ['a', 'b', 'c'] Input utterance: you can never visit Edward Jones, Central & Devon NB, or Ace Hardware
True Ground LTL: & G ! edward_jones & G ! central_&_devon_nb G ! ace_hardware
Out Ground LTL: & G ! edward_jones & G ! central_&_devon_nb G ! ace_hardware
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Edward Jones', 'Central & Devon NB', 'Ace Hardware')
Out Lmks:['Central & Devon NB', 'Edward Jones', 'Ace Hardware']
Out Grounds: {'Central & Devon NB', 'Edward Jones', 'Ace Hardware'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edward Jones': 'b', 'Ace Hardware': 'c'}
True

140
global_avoidance ['a', 'b', 'c'] Input utterance: always avoid going to King Pho, Little Nest Care, and US Post Office
True Ground LTL: & G ! king_pho & G ! little_nest_care G ! us_post_office
Out Ground LTL: & G ! little_nest_care & G ! king_pho G ! us_post_office
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('King Pho', 'Little Nest Care', 'US Post Office')
Out Lmks:['King Pho', 'Little Nest Care', 'US Post Office']
Out Grounds: {'US Post Office', 'King Pho', 'Little Nest Care'}
Placeholder Map: {'US Post Office': 'a', 'King Pho': 'b', 'Little Nest Care': 'c'}
True

141
global_avoidance ['a', 'b', 'c'] Input utterance: always avoid going to Domino's, Edward Jones, and King Pho
True Ground LTL: & G ! dominos & G ! edward_jones G ! king_pho
Out Ground LTL: & G ! edward_jones & G ! dominos G ! king_pho
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ("Domino's", 'Edward Jones', 'King Pho')
Out Lmks:['King Pho', "Domino's", 'Edward Jones']
Out Grounds: {'King Pho', "Domino's", 'Edward Jones'}
Placeholder Map: {'King Pho': 'a', "Domino's": 'b', 'Edward Jones': 'c'}
True

142
global_avoidance ['a', 'b', 'c'] Input utterance: always stay away from Terry's Place, Creativo! Academy, and Domino's
True Ground LTL: & G ! terrys_place & G ! creativo_academy G ! dominos
Out Ground LTL: & G ! terrys_place & G ! creativo_academy G ! dominos
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ("Terry's Place", 'Creativo! Academy', "Domino's")
Out Lmks:['Creativo! Academy', "Domino's", "Terry's Place"]
Out Grounds: {'Creativo! Academy', "Domino's", "Terry's Place"}
Placeholder Map: {'Creativo! Academy': 'a', "Domino's": 'b', "Terry's Place": 'c'}
True

143
global_avoidance ['a', 'b', 'c'] Input utterance: always stay away from Starbucks, Ace Hardware, and Edward Jones
True Ground LTL: & G ! starbucks & G ! ace_hardware G ! edward_jones
Out Ground LTL: & G ! starbucks & G ! ace_hardware G ! edward_jones
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Starbucks', 'Ace Hardware', 'Edward Jones')
Out Lmks:['Ace Hardware', 'Edward Jones', 'Starbucks']
Out Grounds: {'Starbucks', 'Edward Jones', 'Ace Hardware'}
Placeholder Map: {'Starbucks': 'a', 'Edward Jones': 'b', 'Ace Hardware': 'c'}
True

144
global_avoidance ['a', 'b', 'c'] Input utterance: you have to avoid Currency Change, Local Goods Chicago, and Creativo! Academy, at all costs
True Ground LTL: & G ! currency_change & G ! local_goods_chicago G ! creativo_academy
Out Ground LTL: & G ! currency_change & G ! local_goods_chicago G ! creativo_academy
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Currency Change', 'Local Goods Chicago', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Local Goods Chicago', 'Currency Change']
Out Grounds: {'Creativo! Academy', 'Local Goods Chicago', 'Currency Change'}
Placeholder Map: {'Creativo! Academy': 'a', 'Local Goods Chicago': 'b', 'Currency Change': 'c'}
True

145
global_avoidance ['a', 'b', 'c'] Input utterance: you have to avoid Associated Bank, Kanellos Shoe Repair, and Edgebrook Coffee Ship, at all costs
True Ground LTL: & G ! associated_bank & G ! kanellos_shoe_repair G ! edgebrook_coffee_ship
Out Ground LTL: & G ! associated_bank & G ! kanellos_shoe_repair G ! edgebrook_coffee_ship
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Associated Bank', 'Kanellos Shoe Repair', 'Edgebrook Coffee Ship')
Out Lmks:['Associated Bank', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair']
Out Grounds: {'Associated Bank', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair'}
Placeholder Map: {'Associated Bank': 'a', 'Edgebrook Coffee Ship': 'b', 'Kanellos Shoe Repair': 'c'}
True

146
global_avoidance ['a', 'b', 'c'] Input utterance: you can not visit US Post Office, Domino's, or Kanellos Shoe Repair, at any time
True Ground LTL: & G ! us_post_office & G ! dominos G ! kanellos_shoe_repair
Out Ground LTL: & G ! us_post_office & G ! dominos G ! kanellos_shoe_repair
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('US Post Office', "Domino's", 'Kanellos Shoe Repair')
Out Lmks:['Kanellos Shoe Repair', "Domino's", 'US Post Office']
Out Grounds: {'Kanellos Shoe Repair', 'US Post Office', "Domino's"}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'US Post Office': 'b', "Domino's": 'c'}
True

147
global_avoidance ['a', 'b', 'c'] Input utterance: you can not visit King Pho, Ace Hardware, or Becker Roofing Company, at any time
True Ground LTL: & G ! king_pho & G ! ace_hardware G ! becker_roofing_company
Out Ground LTL: & G ! king_pho & G ! ace_hardware G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('King Pho', 'Ace Hardware', 'Becker Roofing Company')
Out Lmks:['King Pho', 'Becker Roofing Company', 'Ace Hardware']
Out Grounds: {'King Pho', 'Becker Roofing Company', 'Ace Hardware'}
Placeholder Map: {'King Pho': 'a', 'Becker Roofing Company': 'b', 'Ace Hardware': 'c'}
True

148
global_avoidance ['a', 'b', 'c'] Input utterance: make sure you never visit Ace Hardware, Edward Jones, or Lee Nails
True Ground LTL: & G ! ace_hardware & G ! edward_jones G ! lee_nails
Out Ground LTL: & G ! ace_hardware & G ! edward_jones G ! lee_nails
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Ace Hardware', 'Edward Jones', 'Lee Nails')
Out Lmks:['Edward Jones', 'Lee Nails', 'Ace Hardware']
Out Grounds: {'Edward Jones', 'Lee Nails', 'Ace Hardware'}
Placeholder Map: {'Edward Jones': 'a', 'Lee Nails': 'b', 'Ace Hardware': 'c'}
True

149
global_avoidance ['a', 'b', 'c'] Input utterance: make sure you never visit Domino's, Little Nest Care, or US Post Office
True Ground LTL: & G ! dominos & G ! little_nest_care G ! us_post_office
Out Ground LTL: & G ! dominos & G ! little_nest_care G ! us_post_office
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ("Domino's", 'Little Nest Care', 'US Post Office')
Out Lmks:['US Post Office', "Domino's", 'Little Nest Care']
Out Grounds: {'US Post Office', "Domino's", 'Little Nest Care'}
Placeholder Map: {'US Post Office': 'a', "Domino's": 'b', 'Little Nest Care': 'c'}
True

150
global_avoidance ['a', 'b', 'c'] Input utterance: avoid going to Local Goods Chicago, Ruk Sushi & Thai, and Creativo! Academy
True Ground LTL: & G ! local_goods_chicago & G ! ruk_sushi_&_thai G ! creativo_academy
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! creativo_academy G ! local_goods_chicago
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Local Goods Chicago', 'Ruk Sushi & Thai', 'Creativo! Academy')
Out Lmks:['Ruk Sushi & Thai', 'Local Goods Chicago', 'Creativo! Academy']
Out Grounds: {'Creativo! Academy', 'Local Goods Chicago', 'Ruk Sushi & Thai'}
Placeholder Map: {'Creativo! Academy': 'a', 'Local Goods Chicago': 'b', 'Ruk Sushi & Thai': 'c'}
True

151
global_avoidance ['a', 'b', 'c'] Input utterance: avoid going to Starbucks, Ruk Sushi & Thai, and Creativo! Academy
True Ground LTL: & G ! starbucks & G ! ruk_sushi_&_thai G ! creativo_academy
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! starbucks G ! creativo_academy
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Starbucks', 'Ruk Sushi & Thai', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Ruk Sushi & Thai', 'Starbucks']
Out Grounds: {'Creativo! Academy', 'Ruk Sushi & Thai', 'Starbucks'}
Placeholder Map: {'Creativo! Academy': 'a', 'Ruk Sushi & Thai': 'b', 'Starbucks': 'c'}
True

152
global_avoidance ['a', 'b', 'c'] Input utterance: never visit either one among Creativo! Academy, Ruk Sushi & Thai, and Kanellos Shoe Repair
True Ground LTL: & G ! creativo_academy & G ! ruk_sushi_&_thai G ! kanellos_shoe_repair
Out Ground LTL: & G ! creativo_academy & G ! ruk_sushi_&_thai G ! kanellos_shoe_repair
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Creativo! Academy', 'Ruk Sushi & Thai', 'Kanellos Shoe Repair')
Out Lmks:['Creativo! Academy', 'Kanellos Shoe Repair', 'Ruk Sushi & Thai']
Out Grounds: {'Creativo! Academy', 'Kanellos Shoe Repair', 'Ruk Sushi & Thai'}
Placeholder Map: {'Creativo! Academy': 'a', 'Kanellos Shoe Repair': 'b', 'Ruk Sushi & Thai': 'c'}
True

153
global_avoidance ['a', 'b', 'c'] Input utterance: never visit either one among Little Nest Care, Domino's, and Ace Hardware
True Ground LTL: & G ! little_nest_care & G ! dominos G ! ace_hardware
Out Ground LTL: & G ! little_nest_care & G ! dominos G ! ace_hardware
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Little Nest Care', "Domino's", 'Ace Hardware')
Out Lmks:["Domino's", 'Little Nest Care', 'Ace Hardware']
Out Grounds: {"Domino's", 'Little Nest Care', 'Ace Hardware'}
Placeholder Map: {"Domino's": 'a', 'Little Nest Care': 'b', 'Ace Hardware': 'c'}
True

154
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach the locations Terry's Place, Central & Devon SB, and Little Nest Care
True Ground LTL: & G ! terrys_place & G ! central_&_devon_sb G ! little_nest_care
Out Ground LTL: & G ! terrys_place & G ! central_&_devon_sb G ! little_nest_care
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ("Terry's Place", 'Central & Devon SB', 'Little Nest Care')
Out Lmks:['Central & Devon SB', 'Little Nest Care', "Terry's Place"]
Out Grounds: {'Central & Devon SB', 'Little Nest Care', "Terry's Place"}
Placeholder Map: {'Central & Devon SB': 'a', 'Little Nest Care': 'b', "Terry's Place": 'c'}
True

155
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach the locations Ace Hardware, Baird & Warner, and Domino's
True Ground LTL: & G ! ace_hardware & G ! baird_&_warner G ! dominos
Out Ground LTL: & G ! ace_hardware & G ! baird_&_warner G ! dominos
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Ace Hardware', 'Baird & Warner', "Domino's")
Out Lmks:['Baird & Warner', "Domino's", 'Ace Hardware']
Out Grounds: {'Ace Hardware', "Domino's", 'Baird & Warner'}
Placeholder Map: {'Ace Hardware': 'a', "Domino's": 'b', 'Baird & Warner': 'c'}
True

156
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach Baird & Warner, ensure that you never reach Little Nest Care, and ensure that you never reach Becker Roofing Company
True Ground LTL: & G ! baird_&_warner & G ! little_nest_care G ! becker_roofing_company
Out Ground LTL: & G ! baird_&_warner & G ! little_nest_care G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Baird & Warner', 'Little Nest Care', 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', 'Little Nest Care', 'Baird & Warner']
Out Grounds: {'Baird & Warner', 'Becker Roofing Company', 'Little Nest Care'}
Placeholder Map: {'Baird & Warner': 'a', 'Becker Roofing Company': 'b', 'Little Nest Care': 'c'}
True

157
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach My Sister's Closet, ensure that you never reach Ruk Sushi & Thai, and ensure that you never reach Lee Nails
True Ground LTL: & G ! my_sisters_closet & G ! ruk_sushi_&_thai G ! lee_nails
Out Ground LTL: & G ! my_sisters_closet & G ! ruk_sushi_&_thai G ! lee_nails
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ("My Sister's Closet", 'Ruk Sushi & Thai', 'Lee Nails')
Out Lmks:["My Sister's Closet", 'Ruk Sushi & Thai', 'Lee Nails']
Out Grounds: {"My Sister's Closet", 'Ruk Sushi & Thai', 'Lee Nails'}
Placeholder Map: {"My Sister's Closet": 'a', 'Ruk Sushi & Thai': 'b', 'Lee Nails': 'c'}
True

158
global_avoidance ['a', 'b', 'c'] Input utterance: King Pho, Baird & Warner, and US Post Office, should never be visited
True Ground LTL: & G ! king_pho & G ! baird_&_warner G ! us_post_office
Out Ground LTL: & G ! king_pho & G ! baird_&_warner G ! us_post_office
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('King Pho', 'Baird & Warner', 'US Post Office')
Out Lmks:['King Pho', 'US Post Office', 'Baird & Warner']
Out Grounds: {'King Pho', 'US Post Office', 'Baird & Warner'}
Placeholder Map: {'King Pho': 'a', 'US Post Office': 'b', 'Baird & Warner': 'c'}
True

159
global_avoidance ['a', 'b', 'c'] Input utterance: Edgebrook Coffee Ship, Associated Bank, and Central & Devon NB, should never be visited
True Ground LTL: & G ! edgebrook_coffee_ship & G ! associated_bank G ! central_&_devon_nb
Out Ground LTL: & G ! edgebrook_coffee_ship & G ! associated_bank G ! central_&_devon_nb
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Edgebrook Coffee Ship', 'Associated Bank', 'Central & Devon NB')
Out Lmks:['Associated Bank', 'Central & Devon NB', 'Edgebrook Coffee Ship']
Out Grounds: {'Associated Bank', 'Central & Devon NB', 'Edgebrook Coffee Ship'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon NB': 'b', 'Edgebrook Coffee Ship': 'c'}
True

160
global_avoidance ['a', 'b', 'c'] Input utterance: do not go to Creativo! Academy, My Sister's Closet, or Little Nest Care
True Ground LTL: & G ! creativo_academy & G ! my_sisters_closet G ! little_nest_care
Out Ground LTL: & G ! my_sisters_closet & G ! little_nest_care G ! creativo_academy
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Creativo! Academy', "My Sister's Closet", 'Little Nest Care')
Out Lmks:['Creativo! Academy', "My Sister's Closet", 'Little Nest Care']
Out Grounds: {'Creativo! Academy', "My Sister's Closet", 'Little Nest Care'}
Placeholder Map: {'Creativo! Academy': 'a', "My Sister's Closet": 'b', 'Little Nest Care': 'c'}
True

161
global_avoidance ['a', 'b', 'c'] Input utterance: do not go to Domino's, King Pho, or Becker Roofing Company
True Ground LTL: & G ! dominos & G ! king_pho G ! becker_roofing_company
Out Ground LTL: & G ! dominos & G ! king_pho G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ("Domino's", 'King Pho', 'Becker Roofing Company')
Out Lmks:['King Pho', 'Becker Roofing Company', "Domino's"]
Out Grounds: {'King Pho', "Domino's", 'Becker Roofing Company'}
Placeholder Map: {'King Pho': 'a', "Domino's": 'b', 'Becker Roofing Company': 'c'}
True

162
global_avoidance ['a', 'b', 'c'] Input utterance: you can go anywhere but North Branch Arts, Baird & Warner, and Currency Change
True Ground LTL: & G ! north_branch_arts & G ! baird_&_warner G ! currency_change
Out Ground LTL: & G ! baird_&_warner & G ! currency_change G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('North Branch Arts', 'Baird & Warner', 'Currency Change')
Out Lmks:['North Branch Arts', 'Currency Change', 'Baird & Warner']
Out Grounds: {'North Branch Arts', 'Currency Change', 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'Currency Change': 'b', 'Baird & Warner': 'c'}
True

163
global_avoidance ['a', 'b', 'c'] Input utterance: you can go anywhere but Becker Roofing Company, Ace Hardware, and Lee Nails
True Ground LTL: & G ! becker_roofing_company & G ! ace_hardware G ! lee_nails
Out Ground LTL: & G ! ace_hardware & G ! lee_nails G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Becker Roofing Company', 'Ace Hardware', 'Lee Nails')
Out Lmks:['Becker Roofing Company', 'Lee Nails', 'Ace Hardware']
Out Grounds: {'Becker Roofing Company', 'Lee Nails', 'Ace Hardware'}
Placeholder Map: {'Becker Roofing Company': 'a', 'Lee Nails': 'b', 'Ace Hardware': 'c'}
True

164
global_avoidance ['a', 'b', 'c'] Input utterance: Creativo! Academy, Ace Hardware, and US Post Office, can not be visited at any time
True Ground LTL: & G ! creativo_academy & G ! ace_hardware G ! us_post_office
Out Ground LTL: & G ! creativo_academy & G ! ace_hardware G ! us_post_office
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Creativo! Academy', 'Ace Hardware', 'US Post Office')
Out Lmks:['Creativo! Academy', 'US Post Office', 'Ace Hardware']
Out Grounds: {'Creativo! Academy', 'US Post Office', 'Ace Hardware'}
Placeholder Map: {'Creativo! Academy': 'a', 'US Post Office': 'b', 'Ace Hardware': 'c'}
True

165
global_avoidance ['a', 'b', 'c'] Input utterance: Baird & Warner, Central & Devon NB, and Kanellos Shoe Repair, can not be visited at any time
True Ground LTL: & G ! baird_&_warner & G ! central_&_devon_nb G ! kanellos_shoe_repair
Out Ground LTL: & G ! baird_&_warner & G ! central_&_devon_nb G ! kanellos_shoe_repair
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Baird & Warner', 'Central & Devon NB', 'Kanellos Shoe Repair')
Out Lmks:['Central & Devon NB', 'Kanellos Shoe Repair', 'Baird & Warner']
Out Grounds: {'Central & Devon NB', 'Kanellos Shoe Repair', 'Baird & Warner'}
Placeholder Map: {'Central & Devon NB': 'a', 'Kanellos Shoe Repair': 'b', 'Baird & Warner': 'c'}
True

166
global_avoidance ['a', 'b', 'c'] Input utterance: always keep away from My Sister's Closet, Starbucks, and Terry's Place
True Ground LTL: & G ! my_sisters_closet & G ! starbucks G ! terrys_place
Out Ground LTL: & G ! my_sisters_closet & G ! starbucks G ! terrys_place
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ("My Sister's Closet", 'Starbucks', "Terry's Place")
Out Lmks:["My Sister's Closet", "Terry's Place", 'Starbucks']
Out Grounds: {"My Sister's Closet", "Terry's Place", 'Starbucks'}
Placeholder Map: {"My Sister's Closet": 'a', "Terry's Place": 'b', 'Starbucks': 'c'}
True

167
global_avoidance ['a', 'b', 'c'] Input utterance: always keep away from Domino's, Local Goods Chicago, and Creativo! Academy
True Ground LTL: & G ! dominos & G ! local_goods_chicago G ! creativo_academy
Out Ground LTL: & G ! dominos & G ! local_goods_chicago G ! creativo_academy
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ("Domino's", 'Local Goods Chicago', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', "Domino's", 'Local Goods Chicago']
Out Grounds: {'Creativo! Academy', "Domino's", 'Local Goods Chicago'}
Placeholder Map: {'Creativo! Academy': 'a', "Domino's": 'b', 'Local Goods Chicago': 'c'}
True

168
global_avoidance ['a', 'b', 'c'] Input utterance: you must avoid Creativo! Academy, Starbucks, and Currency Change, at all costs
True Ground LTL: & G ! creativo_academy & G ! starbucks G ! currency_change
Out Ground LTL: & G ! creativo_academy & G ! starbucks G ! currency_change
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Creativo! Academy', 'Starbucks', 'Currency Change')
Out Lmks:['Creativo! Academy', 'Currency Change', 'Starbucks']
Out Grounds: {'Creativo! Academy', 'Currency Change', 'Starbucks'}
Placeholder Map: {'Creativo! Academy': 'a', 'Currency Change': 'b', 'Starbucks': 'c'}
True

169
global_avoidance ['a', 'b', 'c'] Input utterance: you must avoid Edgebrook Coffee Ship, Edward Jones, and Ace Hardware, at all costs
True Ground LTL: & G ! edgebrook_coffee_ship & G ! edward_jones G ! ace_hardware
Out Ground LTL: & G ! edward_jones & G ! edgebrook_coffee_ship G ! ace_hardware
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Edgebrook Coffee Ship', 'Edward Jones', 'Ace Hardware')
Out Lmks:['Edgebrook Coffee Ship', 'Edward Jones', 'Ace Hardware']
Out Grounds: {'Edgebrook Coffee Ship', 'Edward Jones', 'Ace Hardware'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Edward Jones': 'b', 'Ace Hardware': 'c'}
True

170
global_avoidance ['a', 'b', 'c'] Input utterance: you can not go to Terry's Place, US Post Office, or Ace Hardware
True Ground LTL: & G ! terrys_place & G ! us_post_office G ! ace_hardware
Out Ground LTL: & G ! us_post_office & G ! terrys_place G ! ace_hardware
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ("Terry's Place", 'US Post Office', 'Ace Hardware')
Out Lmks:['US Post Office', "Terry's Place", 'Ace Hardware']
Out Grounds: {'US Post Office', "Terry's Place", 'Ace Hardware'}
Placeholder Map: {'US Post Office': 'a', "Terry's Place": 'b', 'Ace Hardware': 'c'}
True

171
global_avoidance ['a', 'b', 'c'] Input utterance: you can not go to Little Nest Care, King Pho, or Edward Jones
True Ground LTL: & G ! little_nest_care & G ! king_pho G ! edward_jones
Out Ground LTL: & G ! king_pho & G ! little_nest_care G ! edward_jones
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Little Nest Care', 'King Pho', 'Edward Jones')
Out Lmks:['King Pho', 'Little Nest Care', 'Edward Jones']
Out Grounds: {'King Pho', 'Little Nest Care', 'Edward Jones'}
Placeholder Map: {'King Pho': 'a', 'Little Nest Care': 'b', 'Edward Jones': 'c'}
True

172
global_avoidance ['a', 'b', 'c'] Input utterance: avoid Edward Jones, North Branch Arts, and Starbucks, forever
True Ground LTL: & G ! edward_jones & G ! north_branch_arts G ! starbucks
Out Ground LTL: & G F edward_jones & G F north_branch_arts G F starbucks
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G F b & G F a G F c
True Lmks: ('Edward Jones', 'North Branch Arts', 'Starbucks')
Out Lmks:['North Branch Arts', 'Edward Jones', 'Starbucks']
Out Grounds: {'North Branch Arts', 'Edward Jones', 'Starbucks'}
Placeholder Map: {'North Branch Arts': 'a', 'Edward Jones': 'b', 'Starbucks': 'c'}
False

173
global_avoidance ['a', 'b', 'c'] Input utterance: avoid Edgebrook Coffee Ship, Central & Devon NB, and US Post Office, forever
True Ground LTL: & G ! edgebrook_coffee_ship & G ! central_&_devon_nb G ! us_post_office
Out Ground LTL: & G F edgebrook_coffee_ship & G F central_&_devon_nb G F us_post_office
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G F b & G F a G F c
True Lmks: ('Edgebrook Coffee Ship', 'Central & Devon NB', 'US Post Office')
Out Lmks:['Central & Devon NB', 'Edgebrook Coffee Ship', 'US Post Office']
Out Grounds: {'Central & Devon NB', 'Edgebrook Coffee Ship', 'US Post Office'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edgebrook Coffee Ship': 'b', 'US Post Office': 'c'}
False

174
global_avoidance ['a', 'b', 'c'] Input utterance: do not make any single visit to Central & Devon SB, Local Goods Chicago, or Currency Change
True Ground LTL: & G ! central_&_devon_sb & G ! local_goods_chicago G ! currency_change
Out Ground LTL: & G ! central_&_devon_sb & G ! local_goods_chicago G ! currency_change
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Central & Devon SB', 'Local Goods Chicago', 'Currency Change')
Out Lmks:['Central & Devon SB', 'Local Goods Chicago', 'Currency Change']
Out Grounds: {'Central & Devon SB', 'Local Goods Chicago', 'Currency Change'}
Placeholder Map: {'Central & Devon SB': 'a', 'Local Goods Chicago': 'b', 'Currency Change': 'c'}
True

175
global_avoidance ['a', 'b', 'c'] Input utterance: do not make any single visit to Ruk Sushi & Thai, Little Nest Care, or Starbucks
True Ground LTL: & G ! ruk_sushi_&_thai & G ! little_nest_care G ! starbucks
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! little_nest_care G ! starbucks
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Ruk Sushi & Thai', 'Little Nest Care', 'Starbucks')
Out Lmks:['Little Nest Care', 'Ruk Sushi & Thai', 'Starbucks']
Out Grounds: {'Little Nest Care', 'Ruk Sushi & Thai', 'Starbucks'}
Placeholder Map: {'Little Nest Care': 'a', 'Ruk Sushi & Thai': 'b', 'Starbucks': 'c'}
True

176
global_avoidance ['a', 'b', 'c'] Input utterance: Currency Change, Lee Nails, or Associated Bank, can never become true at any instant
True Ground LTL: & G ! currency_change & G ! lee_nails G ! associated_bank
Out Ground LTL: & G ! currency_change & G ! lee_nails G ! associated_bank
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Currency Change', 'Lee Nails', 'Associated Bank')
Out Lmks:['Associated Bank', 'Lee Nails', 'Currency Change']
Out Grounds: {'Associated Bank', 'Lee Nails', 'Currency Change'}
Placeholder Map: {'Associated Bank': 'a', 'Lee Nails': 'b', 'Currency Change': 'c'}
True

177
global_avoidance ['a', 'b', 'c'] Input utterance: Kanellos Shoe Repair, Associated Bank, or US Post Office, can never become true at any instant
True Ground LTL: & G ! kanellos_shoe_repair & G ! associated_bank G ! us_post_office
Out Ground LTL: & G ! kanellos_shoe_repair & G ! associated_bank G ! us_post_office
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Kanellos Shoe Repair', 'Associated Bank', 'US Post Office')
Out Lmks:['Associated Bank', 'Kanellos Shoe Repair', 'US Post Office']
Out Grounds: {'Associated Bank', 'Kanellos Shoe Repair', 'US Post Office'}
Placeholder Map: {'Associated Bank': 'a', 'Kanellos Shoe Repair': 'b', 'US Post Office': 'c'}
True

178
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that Edward Jones, Associated Bank, and Becker Roofing Company, never hold true
True Ground LTL: & G ! edward_jones & G ! associated_bank G ! becker_roofing_company
Out Ground LTL: & G ! edward_jones & G ! associated_bank G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Edward Jones', 'Associated Bank', 'Becker Roofing Company')
Out Lmks:['Associated Bank', 'Becker Roofing Company', 'Edward Jones']
Out Grounds: {'Associated Bank', 'Becker Roofing Company', 'Edward Jones'}
Placeholder Map: {'Associated Bank': 'a', 'Becker Roofing Company': 'b', 'Edward Jones': 'c'}
True

179
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that King Pho, Domino's, and Ruk Sushi & Thai, never hold true
True Ground LTL: & G ! king_pho & G ! dominos G ! ruk_sushi_&_thai
Out Ground LTL: & G ! king_pho & G ! dominos G ! ruk_sushi_&_thai
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('King Pho', "Domino's", 'Ruk Sushi & Thai')
Out Lmks:['King Pho', "Domino's", 'Ruk Sushi & Thai']
Out Grounds: {'King Pho', "Domino's", 'Ruk Sushi & Thai'}
Placeholder Map: {'King Pho': 'a', "Domino's": 'b', 'Ruk Sushi & Thai': 'c'}
True

180
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit King Pho, Associated Bank, Baird & Warner, or Terry's Place
True Ground LTL: & G ! king_pho & G ! associated_bank & G ! baird_&_warner G ! terrys_place
Out Ground LTL: & G ! king_pho & G ! associated_bank & G ! baird_&_warner G ! terrys_place
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('King Pho', 'Associated Bank', 'Baird & Warner', "Terry's Place")
Out Lmks:['Associated Bank', 'King Pho', "Terry's Place", 'Baird & Warner']
Out Grounds: {'Associated Bank', 'King Pho', "Terry's Place", 'Baird & Warner'}
Placeholder Map: {'Associated Bank': 'a', 'King Pho': 'b', "Terry's Place": 'c', 'Baird & Warner': 'd'}
True

181
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit Domino's, Kanellos Shoe Repair, Ace Hardware, or Ruk Sushi & Thai
True Ground LTL: & G ! dominos & G ! kanellos_shoe_repair & G ! ace_hardware G ! ruk_sushi_&_thai
Out Ground LTL: & G ! dominos & G ! kanellos_shoe_repair & G ! ace_hardware G ! ruk_sushi_&_thai
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ("Domino's", 'Kanellos Shoe Repair', 'Ace Hardware', 'Ruk Sushi & Thai')
Out Lmks:['Kanellos Shoe Repair', "Domino's", 'Ruk Sushi & Thai', 'Ace Hardware']
Out Grounds: {'Kanellos Shoe Repair', "Domino's", 'Ruk Sushi & Thai', 'Ace Hardware'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', "Domino's": 'b', 'Ruk Sushi & Thai': 'c', 'Ace Hardware': 'd'}
True

182
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can never go to Little Nest Care, Edgebrook Coffee Ship, Central & Devon NB, or Becker Roofing Company
True Ground LTL: & G ! little_nest_care & G ! edgebrook_coffee_ship & G ! central_&_devon_nb G ! becker_roofing_company
Out Ground LTL: & G ! edgebrook_coffee_ship & G ! central_&_devon_nb & G ! little_nest_care G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('Little Nest Care', 'Edgebrook Coffee Ship', 'Central & Devon NB', 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', 'Central & Devon NB', 'Edgebrook Coffee Ship', 'Little Nest Care']
Out Grounds: {'Central & Devon NB', 'Edgebrook Coffee Ship', 'Becker Roofing Company', 'Little Nest Care'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edgebrook Coffee Ship': 'b', 'Becker Roofing Company': 'c', 'Little Nest Care': 'd'}
True

183
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can never go to Currency Change, Little Nest Care, Kanellos Shoe Repair, or King Pho
True Ground LTL: & G ! currency_change & G ! little_nest_care & G ! kanellos_shoe_repair G ! king_pho
Out Ground LTL: & G ! little_nest_care & G ! kanellos_shoe_repair & G ! currency_change G ! king_pho
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ('Currency Change', 'Little Nest Care', 'Kanellos Shoe Repair', 'King Pho')
Out Lmks:['King Pho', 'Kanellos Shoe Repair', 'Little Nest Care', 'Currency Change']
Out Grounds: {'King Pho', 'Kanellos Shoe Repair', 'Little Nest Care', 'Currency Change'}
Placeholder Map: {'King Pho': 'a', 'Kanellos Shoe Repair': 'b', 'Little Nest Care': 'c', 'Currency Change': 'd'}
True

184
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Domino's, Becker Roofing Company, Little Nest Care, or Central & Devon SB, at any time
True Ground LTL: & G ! dominos & G ! becker_roofing_company & G ! little_nest_care G ! central_&_devon_sb
Out Ground LTL: & G ! becker_roofing_company & G ! little_nest_care & G ! central_&_devon_sb G dominos
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! a G c
True Lmks: ("Domino's", 'Becker Roofing Company', 'Little Nest Care', 'Central & Devon SB')
Out Lmks:['Becker Roofing Company', 'Central & Devon SB', "Domino's", 'Little Nest Care']
Out Grounds: {'Central & Devon SB', 'Becker Roofing Company', "Domino's", 'Little Nest Care'}
Placeholder Map: {'Central & Devon SB': 'a', 'Becker Roofing Company': 'b', "Domino's": 'c', 'Little Nest Care': 'd'}
False

185
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Ace Hardware, Domino's, Kanellos Shoe Repair, or Edgebrook Coffee Ship, at any time
True Ground LTL: & G ! ace_hardware & G ! dominos & G ! kanellos_shoe_repair G ! edgebrook_coffee_ship
Out Ground LTL: & G ! dominos & G ! kanellos_shoe_repair & G ! edgebrook_coffee_ship G ! ace_hardware
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! a G ! d
True Lmks: ('Ace Hardware', "Domino's", 'Kanellos Shoe Repair', 'Edgebrook Coffee Ship')
Out Lmks:['Edgebrook Coffee Ship', 'Kanellos Shoe Repair', "Domino's", 'Ace Hardware']
Out Grounds: {'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', "Domino's", 'Ace Hardware'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Kanellos Shoe Repair': 'b', "Domino's": 'c', 'Ace Hardware': 'd'}
True

186
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure you never visit Terry's Place, Kanellos Shoe Repair, Lee Nails, or Currency Change
True Ground LTL: & G ! terrys_place & G ! kanellos_shoe_repair & G ! lee_nails G ! currency_change
Out Ground LTL: & G ! terrys_place & G ! kanellos_shoe_repair & G ! lee_nails G ! currency_change
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! b G ! c
True Lmks: ("Terry's Place", 'Kanellos Shoe Repair', 'Lee Nails', 'Currency Change')
Out Lmks:['Currency Change', 'Kanellos Shoe Repair', 'Lee Nails', "Terry's Place"]
Out Grounds: {'Kanellos Shoe Repair', 'Lee Nails', 'Currency Change', "Terry's Place"}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'Lee Nails': 'b', 'Currency Change': 'c', "Terry's Place": 'd'}
True

187
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure you never visit Ace Hardware, Becker Roofing Company, Creativo! Academy, or Lee Nails
True Ground LTL: & G ! ace_hardware & G ! becker_roofing_company & G ! creativo_academy G ! lee_nails
Out Ground LTL: & G ! ace_hardware & G ! becker_roofing_company & G ! creativo_academy G ! lee_nails
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! b & G ! a G ! c
True Lmks: ('Ace Hardware', 'Becker Roofing Company', 'Creativo! Academy', 'Lee Nails')
Out Lmks:['Creativo! Academy', 'Becker Roofing Company', 'Lee Nails', 'Ace Hardware']
Out Grounds: {'Creativo! Academy', 'Becker Roofing Company', 'Lee Nails', 'Ace Hardware'}
Placeholder Map: {'Creativo! Academy': 'a', 'Becker Roofing Company': 'b', 'Lee Nails': 'c', 'Ace Hardware': 'd'}
True

188
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always avoid going to Becker Roofing Company, King Pho, Baird & Warner, or Edward Jones
True Ground LTL: & G ! becker_roofing_company & G ! king_pho & G ! baird_&_warner G ! edward_jones
Out Ground LTL: & G ! becker_roofing_company & G ! king_pho & G ! baird_&_warner G ! edward_jones
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('Becker Roofing Company', 'King Pho', 'Baird & Warner', 'Edward Jones')
Out Lmks:['King Pho', 'Becker Roofing Company', 'Edward Jones', 'Baird & Warner']
Out Grounds: {'King Pho', 'Becker Roofing Company', 'Edward Jones', 'Baird & Warner'}
Placeholder Map: {'King Pho': 'a', 'Becker Roofing Company': 'b', 'Edward Jones': 'c', 'Baird & Warner': 'd'}
True

189
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always avoid going to Edgebrook Coffee Ship, Edward Jones, Little Nest Care, or Starbucks
True Ground LTL: & G ! edgebrook_coffee_ship & G ! edward_jones & G ! little_nest_care G ! starbucks
Out Ground LTL: & G ! edward_jones & G ! little_nest_care & G ! starbucks G ! edgebrook_coffee_ship
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ('Edgebrook Coffee Ship', 'Edward Jones', 'Little Nest Care', 'Starbucks')
Out Lmks:['Edgebrook Coffee Ship', 'Little Nest Care', 'Edward Jones', 'Starbucks']
Out Grounds: {'Edgebrook Coffee Ship', 'Little Nest Care', 'Edward Jones', 'Starbucks'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Little Nest Care': 'b', 'Edward Jones': 'c', 'Starbucks': 'd'}
True

190
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always stay away from Ruk Sushi & Thai, Starbucks, Terry's Place, and Becker Roofing Company
True Ground LTL: & G ! ruk_sushi_&_thai & G ! starbucks & G ! terrys_place G ! becker_roofing_company
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! starbucks & G ! terrys_place G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! c G ! a
True Lmks: ('Ruk Sushi & Thai', 'Starbucks', "Terry's Place", 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', 'Ruk Sushi & Thai', "Terry's Place", 'Starbucks']
Out Grounds: {'Becker Roofing Company', 'Ruk Sushi & Thai', "Terry's Place", 'Starbucks'}
Placeholder Map: {'Becker Roofing Company': 'a', 'Ruk Sushi & Thai': 'b', "Terry's Place": 'c', 'Starbucks': 'd'}
True

191
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always stay away from Baird & Warner, Becker Roofing Company, Ruk Sushi & Thai, and North Branch Arts
True Ground LTL: & G ! baird_&_warner & G ! becker_roofing_company & G ! ruk_sushi_&_thai G ! north_branch_arts
Out Ground LTL: & G ! baird_&_warner & G ! becker_roofing_company & G ! ruk_sushi_&_thai G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! b & G ! c G ! a
True Lmks: ('Baird & Warner', 'Becker Roofing Company', 'Ruk Sushi & Thai', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Becker Roofing Company', 'Ruk Sushi & Thai', 'Baird & Warner']
Out Grounds: {'North Branch Arts', 'Becker Roofing Company', 'Ruk Sushi & Thai', 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'Becker Roofing Company': 'b', 'Ruk Sushi & Thai': 'c', 'Baird & Warner': 'd'}
True

192
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you have to avoid Central & Devon SB, Central & Devon NB, North Branch Arts, and US Post Office, at all costs
True Ground LTL: & G ! central_&_devon_sb & G ! central_&_devon_nb & G ! north_branch_arts G ! us_post_office
Out Ground LTL: & G ! central_&_devon_sb & G ! central_&_devon_nb & G ! north_branch_arts G ! us_post_office
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('Central & Devon SB', 'Central & Devon NB', 'North Branch Arts', 'US Post Office')
Out Lmks:['Central & Devon NB', 'Central & Devon SB', 'US Post Office', 'North Branch Arts']
Out Grounds: {'Central & Devon NB', 'Central & Devon SB', 'US Post Office', 'North Branch Arts'}
Placeholder Map: {'Central & Devon NB': 'a', 'Central & Devon SB': 'b', 'US Post Office': 'c', 'North Branch Arts': 'd'}
True

193
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you have to avoid Domino's, My Sister's Closet, Terry's Place, and Kanellos Shoe Repair, at all costs
True Ground LTL: & G ! dominos & G ! my_sisters_closet & G ! terrys_place G ! kanellos_shoe_repair
Out Ground LTL: & G ! dominos & G ! my_sisters_closet & G ! terrys_place G ! kanellos_shoe_repair
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ("Domino's", "My Sister's Closet", "Terry's Place", 'Kanellos Shoe Repair')
Out Lmks:['Kanellos Shoe Repair', "Domino's", "My Sister's Closet", "Terry's Place"]
Out Grounds: {'Kanellos Shoe Repair', "My Sister's Closet", "Domino's", "Terry's Place"}
Placeholder Map: {'Kanellos Shoe Repair': 'a', "My Sister's Closet": 'b', "Domino's": 'c', "Terry's Place": 'd'}
True

194
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit any locations among King Pho, Terry's Place, Edward Jones, Ruk Sushi & Thai
True Ground LTL: & G ! king_pho & G ! terrys_place & G ! edward_jones G ! ruk_sushi_&_thai
Out Ground LTL: & G ! king_pho & G ! terrys_place & G ! edward_jones G ! ruk_sushi_&_thai
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! a G ! c
True Lmks: ('King Pho', "Terry's Place", 'Edward Jones', 'Ruk Sushi & Thai')
Out Lmks:['King Pho', 'Ruk Sushi & Thai', 'Edward Jones', "Terry's Place"]
Out Grounds: {'Edward Jones', 'King Pho', 'Ruk Sushi & Thai', "Terry's Place"}
Placeholder Map: {'Edward Jones': 'a', 'King Pho': 'b', 'Ruk Sushi & Thai': 'c', "Terry's Place": 'd'}
True

195
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit any locations among Lee Nails, Ruk Sushi & Thai, Ace Hardware, My Sister's Closet
True Ground LTL: & G ! lee_nails & G ! ruk_sushi_&_thai & G ! ace_hardware G ! my_sisters_closet
Out Ground LTL: & G ! lee_nails & G ! ruk_sushi_&_thai & G ! ace_hardware G ! my_sisters_closet
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ('Lee Nails', 'Ruk Sushi & Thai', 'Ace Hardware', "My Sister's Closet")
Out Lmks:["My Sister's Closet", 'Ruk Sushi & Thai', 'Lee Nails', 'Ace Hardware']
Out Grounds: {"My Sister's Closet", 'Ruk Sushi & Thai', 'Lee Nails', 'Ace Hardware'}
Placeholder Map: {"My Sister's Closet": 'a', 'Ruk Sushi & Thai': 'b', 'Lee Nails': 'c', 'Ace Hardware': 'd'}
True

196
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure to not reach any of Edgebrook Coffee Ship, Currency Change, Domino's, and Edward Jones
True Ground LTL: & G ! edgebrook_coffee_ship & G ! currency_change & G ! dominos G ! edward_jones
Out Ground LTL: & G ! edgebrook_coffee_ship & G ! currency_change & G ! dominos G ! edward_jones
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! b G ! c
True Lmks: ('Edgebrook Coffee Ship', 'Currency Change', "Domino's", 'Edward Jones')
Out Lmks:['Edgebrook Coffee Ship', "Domino's", 'Edward Jones', 'Currency Change']
Out Grounds: {'Edgebrook Coffee Ship', "Domino's", 'Edward Jones', 'Currency Change'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', "Domino's": 'b', 'Edward Jones': 'c', 'Currency Change': 'd'}
True

197
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure to not reach any of Little Nest Care, Terry's Place, US Post Office, and North Branch Arts
True Ground LTL: & G ! little_nest_care & G ! terrys_place & G ! us_post_office G ! north_branch_arts
Out Ground LTL: & G ! little_nest_care & G ! terrys_place & G ! us_post_office G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ('Little Nest Care', "Terry's Place", 'US Post Office', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'US Post Office', 'Little Nest Care', "Terry's Place"]
Out Grounds: {'North Branch Arts', 'Little Nest Care', "Terry's Place", 'US Post Office'}
Placeholder Map: {'North Branch Arts': 'a', 'Little Nest Care': 'b', "Terry's Place": 'c', 'US Post Office': 'd'}
True

198
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid going to Central & Devon NB, Ruk Sushi & Thai, Currency Change, and King Pho
True Ground LTL: & G ! central_&_devon_nb & G ! ruk_sushi_&_thai & G ! currency_change G ! king_pho
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! currency_change & G ! central_&_devon_nb G ! king_pho
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! a G ! b
True Lmks: ('Central & Devon NB', 'Ruk Sushi & Thai', 'Currency Change', 'King Pho')
Out Lmks:['Central & Devon NB', 'King Pho', 'Ruk Sushi & Thai', 'Currency Change']
Out Grounds: {'Central & Devon NB', 'King Pho', 'Ruk Sushi & Thai', 'Currency Change'}
Placeholder Map: {'Central & Devon NB': 'a', 'King Pho': 'b', 'Ruk Sushi & Thai': 'c', 'Currency Change': 'd'}
True

199
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid going to Baird & Warner, Ace Hardware, Local Goods Chicago, and Currency Change
True Ground LTL: & G ! baird_&_warner & G ! ace_hardware & G ! local_goods_chicago G ! currency_change
Out Ground LTL: & G ! baird_&_warner & G ! ace_hardware & G ! local_goods_chicago G ! currency_change
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! b G ! c
True Lmks: ('Baird & Warner', 'Ace Hardware', 'Local Goods Chicago', 'Currency Change')
Out Lmks:['Ace Hardware', 'Local Goods Chicago', 'Currency Change', 'Baird & Warner']
Out Grounds: {'Ace Hardware', 'Local Goods Chicago', 'Currency Change', 'Baird & Warner'}
Placeholder Map: {'Ace Hardware': 'a', 'Local Goods Chicago': 'b', 'Currency Change': 'c', 'Baird & Warner': 'd'}
True

200
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Little Nest Care, Creativo! Academy, Edward Jones, and My Sister's Closet, must never be visited
True Ground LTL: & G ! little_nest_care & G ! creativo_academy & G ! edward_jones G ! my_sisters_closet
Out Ground LTL: & G ! little_nest_care & G ! creativo_academy & G ! edward_jones G ! my_sisters_closet
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! c G ! b
True Lmks: ('Little Nest Care', 'Creativo! Academy', 'Edward Jones', "My Sister's Closet")
Out Lmks:["My Sister's Closet", 'Creativo! Academy', 'Little Nest Care', 'Edward Jones']
Out Grounds: {'Creativo! Academy', "My Sister's Closet", 'Edward Jones', 'Little Nest Care'}
Placeholder Map: {'Creativo! Academy': 'a', "My Sister's Closet": 'b', 'Edward Jones': 'c', 'Little Nest Care': 'd'}
True

201
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Edgebrook Coffee Ship, King Pho, Kanellos Shoe Repair, and North Branch Arts, must never be visited
True Ground LTL: & G ! edgebrook_coffee_ship & G ! king_pho & G ! kanellos_shoe_repair G ! north_branch_arts
Out Ground LTL: & G ! edgebrook_coffee_ship & G ! king_pho & G ! kanellos_shoe_repair G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! c G ! a
True Lmks: ('Edgebrook Coffee Ship', 'King Pho', 'Kanellos Shoe Repair', 'North Branch Arts')
Out Lmks:['King Pho', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', 'North Branch Arts']
Out Grounds: {'North Branch Arts', 'Edgebrook Coffee Ship', 'Kanellos Shoe Repair', 'King Pho'}
Placeholder Map: {'North Branch Arts': 'a', 'Edgebrook Coffee Ship': 'b', 'Kanellos Shoe Repair': 'c', 'King Pho': 'd'}
True

202
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Starbucks, never go to Local Goods Chicago, never go to Edward Jones, and never go to King Pho
True Ground LTL: & G ! starbucks & G ! local_goods_chicago & G ! edward_jones G ! king_pho
Out Ground LTL: & G ! starbucks & G ! local_goods_chicago & G ! edward_jones G ! king_pho
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! a G ! b
True Lmks: ('Starbucks', 'Local Goods Chicago', 'Edward Jones', 'King Pho')
Out Lmks:['Edward Jones', 'King Pho', 'Local Goods Chicago', 'Starbucks']
Out Grounds: {'Edward Jones', 'King Pho', 'Local Goods Chicago', 'Starbucks'}
Placeholder Map: {'Edward Jones': 'a', 'King Pho': 'b', 'Local Goods Chicago': 'c', 'Starbucks': 'd'}
True

203
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to My Sister's Closet, never go to Edgebrook Coffee Ship, never go to Creativo! Academy, and never go to Edward Jones
True Ground LTL: & G ! my_sisters_closet & G ! edgebrook_coffee_ship & G ! creativo_academy G ! edward_jones
Out Ground LTL: & G ! my_sisters_closet & G ! edgebrook_coffee_ship & G ! creativo_academy G ! edward_jones
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ("My Sister's Closet", 'Edgebrook Coffee Ship', 'Creativo! Academy', 'Edward Jones')
Out Lmks:['Edgebrook Coffee Ship', "My Sister's Closet", 'Edward Jones', 'Creativo! Academy']
Out Grounds: {'Edgebrook Coffee Ship', "My Sister's Closet", 'Edward Jones', 'Creativo! Academy'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', "My Sister's Closet": 'b', 'Edward Jones': 'c', 'Creativo! Academy': 'd'}
True

204
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Central & Devon NB, US Post Office, Central & Devon SB, or Terry's Place
True Ground LTL: & G ! central_&_devon_nb & G ! us_post_office & G ! central_&_devon_sb G ! terrys_place
Out Ground LTL: & G ! us_post_office & G ! central_&_devon_sb & G ! central_&_devon_nb & G ! terrys_place G terrys_place
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! a & G ! d G d
True Lmks: ('Central & Devon NB', 'US Post Office', 'Central & Devon SB', "Terry's Place")
Out Lmks:['Central & Devon NB', 'Central & Devon SB', 'US Post Office', "Terry's Place"]
Out Grounds: {'Central & Devon NB', 'Central & Devon SB', 'US Post Office', "Terry's Place"}
Placeholder Map: {'Central & Devon NB': 'a', 'Central & Devon SB': 'b', 'US Post Office': 'c', "Terry's Place": 'd'}
False

205
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to US Post Office, Local Goods Chicago, Central & Devon NB, or Edward Jones
True Ground LTL: & G ! us_post_office & G ! local_goods_chicago & G ! central_&_devon_nb G ! edward_jones
Out Ground LTL: & G ! local_goods_chicago & G ! central_&_devon_nb & G ! us_post_office & G ! edward_jones G local_goods_chicago & G central_&_devon_nb & G us_post_office & G edward_jones G ! local_goods_chicago G local_goods_chicago G ! central_&_devon_nb G central_&_devon_nb G ! us_post_office G us_post_office G ! edward_jones G edward_jones
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! b & G ! d G c & G a & G b & G d G ! c G c G ! a G a G ! b G b G ! d G d
True Lmks: ('US Post Office', 'Local Goods Chicago', 'Central & Devon NB', 'Edward Jones')
Out Lmks:['Central & Devon NB', 'US Post Office', 'Local Goods Chicago', 'Edward Jones']
Out Grounds: {'Central & Devon NB', 'US Post Office', 'Local Goods Chicago', 'Edward Jones'}
Placeholder Map: {'Central & Devon NB': 'a', 'US Post Office': 'b', 'Local Goods Chicago': 'c', 'Edward Jones': 'd'}
Syntax Error

206
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not go to Associated Bank, Edward Jones, Becker Roofing Company, or Lee Nails
True Ground LTL: & G ! associated_bank & G ! edward_jones & G ! becker_roofing_company G ! lee_nails
Out Ground LTL: & G ! edward_jones & G ! becker_roofing_company & G ! lee_nails G associated_bank
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G a
True Lmks: ('Associated Bank', 'Edward Jones', 'Becker Roofing Company', 'Lee Nails')
Out Lmks:['Associated Bank', 'Becker Roofing Company', 'Edward Jones', 'Lee Nails']
Out Grounds: {'Associated Bank', 'Becker Roofing Company', 'Edward Jones', 'Lee Nails'}
Placeholder Map: {'Associated Bank': 'a', 'Becker Roofing Company': 'b', 'Edward Jones': 'c', 'Lee Nails': 'd'}
False

207
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not go to Central & Devon SB, North Branch Arts, Creativo! Academy, or King Pho
True Ground LTL: & G ! central_&_devon_sb & G ! north_branch_arts & G ! creativo_academy G ! king_pho
Out Ground LTL: & G ! central_&_devon_sb & G ! north_branch_arts & G ! creativo_academy G ! king_pho
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! b G ! d
True Lmks: ('Central & Devon SB', 'North Branch Arts', 'Creativo! Academy', 'King Pho')
Out Lmks:['North Branch Arts', 'Creativo! Academy', 'Central & Devon SB', 'King Pho']
Out Grounds: {'North Branch Arts', 'Creativo! Academy', 'Central & Devon SB', 'King Pho'}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', 'Central & Devon SB': 'c', 'King Pho': 'd'}
True

208
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can go anywhere but Local Goods Chicago, Currency Change, Edgebrook Coffee Ship, and Domino's
True Ground LTL: & G ! local_goods_chicago & G ! currency_change & G ! edgebrook_coffee_ship G ! dominos
Out Ground LTL: & G ! local_goods_chicago & G ! currency_change & G ! edgebrook_coffee_ship G ! dominos
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! a G ! b
True Lmks: ('Local Goods Chicago', 'Currency Change', 'Edgebrook Coffee Ship', "Domino's")
Out Lmks:['Edgebrook Coffee Ship', "Domino's", 'Local Goods Chicago', 'Currency Change']
Out Grounds: {'Edgebrook Coffee Ship', "Domino's", 'Local Goods Chicago', 'Currency Change'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', "Domino's": 'b', 'Local Goods Chicago': 'c', 'Currency Change': 'd'}
True

209
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can go anywhere but Kanellos Shoe Repair, US Post Office, Terry's Place, and My Sister's Closet
True Ground LTL: & G ! kanellos_shoe_repair & G ! us_post_office & G ! terrys_place G ! my_sisters_closet
Out Ground LTL: & G ! kanellos_shoe_repair & G ! us_post_office & G ! terrys_place G ! my_sisters_closet
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('Kanellos Shoe Repair', 'US Post Office', "Terry's Place", "My Sister's Closet")
Out Lmks:['Kanellos Shoe Repair', 'US Post Office', "My Sister's Closet", "Terry's Place"]
Out Grounds: {'US Post Office', 'Kanellos Shoe Repair', "My Sister's Closet", "Terry's Place"}
Placeholder Map: {'US Post Office': 'a', 'Kanellos Shoe Repair': 'b', "My Sister's Closet": 'c', "Terry's Place": 'd'}
True

210
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: North Branch Arts, Terry's Place, Baird & Warner, and Associated Bank, can not be visited at any time
True Ground LTL: & G ! north_branch_arts & G ! terrys_place & G ! baird_&_warner G ! associated_bank
Out Ground LTL: & G ! north_branch_arts & G ! terrys_place & G ! baird_&_warner G ! associated_bank
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ('North Branch Arts', "Terry's Place", 'Baird & Warner', 'Associated Bank')
Out Lmks:['Associated Bank', 'North Branch Arts', "Terry's Place", 'Baird & Warner']
Out Grounds: {'Associated Bank', 'North Branch Arts', "Terry's Place", 'Baird & Warner'}
Placeholder Map: {'Associated Bank': 'a', 'North Branch Arts': 'b', "Terry's Place": 'c', 'Baird & Warner': 'd'}
True

211
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Edgebrook Coffee Ship, Edward Jones, My Sister's Closet, and Little Nest Care, can not be visited at any time
True Ground LTL: & G ! edgebrook_coffee_ship & G ! edward_jones & G ! my_sisters_closet G ! little_nest_care
Out Ground LTL: & G ! edgebrook_coffee_ship & G ! edward_jones & G ! my_sisters_closet G ! little_nest_care
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! c & G ! b G ! d
True Lmks: ('Edgebrook Coffee Ship', 'Edward Jones', "My Sister's Closet", 'Little Nest Care')
Out Lmks:['Edgebrook Coffee Ship', "My Sister's Closet", 'Edward Jones', 'Little Nest Care']
Out Grounds: {'Edgebrook Coffee Ship', "My Sister's Closet", 'Edward Jones', 'Little Nest Care'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', "My Sister's Closet": 'b', 'Edward Jones': 'c', 'Little Nest Care': 'd'}
True

212
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always keep away from Edgebrook Coffee Ship, Currency Change, Ace Hardware, and Little Nest Care
True Ground LTL: & G ! edgebrook_coffee_ship & G ! currency_change & G ! ace_hardware G ! little_nest_care
Out Ground LTL: & G ! edgebrook_coffee_ship & G ! currency_change & G ! ace_hardware G ! little_nest_care
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! c & G ! d G ! b
True Lmks: ('Edgebrook Coffee Ship', 'Currency Change', 'Ace Hardware', 'Little Nest Care')
Out Lmks:['Edgebrook Coffee Ship', 'Little Nest Care', 'Currency Change', 'Ace Hardware']
Out Grounds: {'Edgebrook Coffee Ship', 'Little Nest Care', 'Currency Change', 'Ace Hardware'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Little Nest Care': 'b', 'Currency Change': 'c', 'Ace Hardware': 'd'}
True

213
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always keep away from Domino's, Currency Change, North Branch Arts, and Central & Devon NB
True Ground LTL: & G ! dominos & G ! currency_change & G ! north_branch_arts G ! central_&_devon_nb
Out Ground LTL: & G ! dominos & G ! currency_change & G ! north_branch_arts G ! central_&_devon_nb
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ("Domino's", 'Currency Change', 'North Branch Arts', 'Central & Devon NB')
Out Lmks:['North Branch Arts', "Domino's", 'Currency Change', 'Central & Devon NB']
Out Grounds: {'Currency Change', 'Central & Devon NB', "Domino's", 'North Branch Arts'}
Placeholder Map: {'Currency Change': 'a', 'Central & Devon NB': 'b', "Domino's": 'c', 'North Branch Arts': 'd'}
True

214
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you must avoid Ruk Sushi & Thai, Edgebrook Coffee Ship, Baird & Warner, and North Branch Arts, at all costs
True Ground LTL: & G ! ruk_sushi_&_thai & G ! edgebrook_coffee_ship & G ! baird_&_warner G ! north_branch_arts
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! edgebrook_coffee_ship & G ! baird_&_warner G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ('Ruk Sushi & Thai', 'Edgebrook Coffee Ship', 'Baird & Warner', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Edgebrook Coffee Ship', 'Ruk Sushi & Thai', 'Baird & Warner']
Out Grounds: {'North Branch Arts', 'Edgebrook Coffee Ship', 'Ruk Sushi & Thai', 'Baird & Warner'}
Placeholder Map: {'North Branch Arts': 'a', 'Edgebrook Coffee Ship': 'b', 'Ruk Sushi & Thai': 'c', 'Baird & Warner': 'd'}
True

215
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you must avoid Kanellos Shoe Repair, Edward Jones, North Branch Arts, and Currency Change, at all costs
True Ground LTL: & G ! kanellos_shoe_repair & G ! edward_jones & G ! north_branch_arts G ! currency_change
Out Ground LTL: & G ! kanellos_shoe_repair & G ! edward_jones & G ! north_branch_arts G ! currency_change
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! a G ! d
True Lmks: ('Kanellos Shoe Repair', 'Edward Jones', 'North Branch Arts', 'Currency Change')
Out Lmks:['North Branch Arts', 'Kanellos Shoe Repair', 'Edward Jones', 'Currency Change']
Out Grounds: {'North Branch Arts', 'Kanellos Shoe Repair', 'Edward Jones', 'Currency Change'}
Placeholder Map: {'North Branch Arts': 'a', 'Kanellos Shoe Repair': 'b', 'Edward Jones': 'c', 'Currency Change': 'd'}
True

216
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Edgebrook Coffee Ship, Edward Jones, Local Goods Chicago, or Domino's
True Ground LTL: & G ! edgebrook_coffee_ship & G ! edward_jones & G ! local_goods_chicago G ! dominos
Out Ground LTL: & G ! edward_jones & G ! local_goods_chicago & G ! dominos G ! edgebrook_coffee_ship
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ('Edgebrook Coffee Ship', 'Edward Jones', 'Local Goods Chicago', "Domino's")
Out Lmks:['Edgebrook Coffee Ship', 'Local Goods Chicago', "Domino's", 'Edward Jones']
Out Grounds: {'Edward Jones', 'Edgebrook Coffee Ship', "Domino's", 'Local Goods Chicago'}
Placeholder Map: {'Edward Jones': 'a', 'Edgebrook Coffee Ship': 'b', "Domino's": 'c', 'Local Goods Chicago': 'd'}
True

217
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Becker Roofing Company, King Pho, Associated Bank, or Central & Devon NB
True Ground LTL: & G ! becker_roofing_company & G ! king_pho & G ! associated_bank G ! central_&_devon_nb
Out Ground LTL: & G ! king_pho & G ! associated_bank & G ! becker_roofing_company G ! central_&_devon_nb
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('Becker Roofing Company', 'King Pho', 'Associated Bank', 'Central & Devon NB')
Out Lmks:['Associated Bank', 'King Pho', 'Becker Roofing Company', 'Central & Devon NB']
Out Grounds: {'Associated Bank', 'Central & Devon NB', 'King Pho', 'Becker Roofing Company'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon NB': 'b', 'King Pho': 'c', 'Becker Roofing Company': 'd'}
True

218
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid Terry's Place, Edward Jones, Associated Bank, and Baird & Warner, forever
True Ground LTL: & G ! terrys_place & G ! edward_jones & G ! associated_bank G ! baird_&_warner
Out Ground LTL: & G ! terrys_place & G ! edward_jones & G ! associated_bank G ! baird_&_warner
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! a G ! d
True Lmks: ("Terry's Place", 'Edward Jones', 'Associated Bank', 'Baird & Warner')
Out Lmks:['Associated Bank', 'Edward Jones', "Terry's Place", 'Baird & Warner']
Out Grounds: {'Associated Bank', 'Edward Jones', "Terry's Place", 'Baird & Warner'}
Placeholder Map: {'Associated Bank': 'a', 'Edward Jones': 'b', "Terry's Place": 'c', 'Baird & Warner': 'd'}
True

219
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid Local Goods Chicago, Lee Nails, Terry's Place, and Becker Roofing Company, forever
True Ground LTL: & G ! local_goods_chicago & G ! lee_nails & G ! terrys_place G ! becker_roofing_company
Out Ground LTL: & G ! local_goods_chicago & G ! lee_nails & G ! terrys_place G ! becker_roofing_company
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('Local Goods Chicago', 'Lee Nails', "Terry's Place", 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', 'Local Goods Chicago', 'Lee Nails', "Terry's Place"]
Out Grounds: {'Lee Nails', 'Becker Roofing Company', 'Local Goods Chicago', "Terry's Place"}
Placeholder Map: {'Lee Nails': 'a', 'Becker Roofing Company': 'b', 'Local Goods Chicago': 'c', "Terry's Place": 'd'}
True

220
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not make any single visit to Associated Bank, Currency Change, US Post Office, or Kanellos Shoe Repair
True Ground LTL: & G ! associated_bank & G ! currency_change & G ! us_post_office G ! kanellos_shoe_repair
Out Ground LTL: & G ! associated_bank & G ! currency_change & G ! us_post_office G ! kanellos_shoe_repair
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ('Associated Bank', 'Currency Change', 'US Post Office', 'Kanellos Shoe Repair')
Out Lmks:['Associated Bank', 'Kanellos Shoe Repair', 'US Post Office', 'Currency Change']
Out Grounds: {'Associated Bank', 'Kanellos Shoe Repair', 'US Post Office', 'Currency Change'}
Placeholder Map: {'Associated Bank': 'a', 'Kanellos Shoe Repair': 'b', 'US Post Office': 'c', 'Currency Change': 'd'}
True

221
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not make any single visit to Central & Devon NB, King Pho, Edgebrook Coffee Ship, or US Post Office
True Ground LTL: & G ! central_&_devon_nb & G ! king_pho & G ! edgebrook_coffee_ship G ! us_post_office
Out Ground LTL: & G ! central_&_devon_nb & G ! king_pho & G ! edgebrook_coffee_ship G ! us_post_office
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! c & G ! b G ! d
True Lmks: ('Central & Devon NB', 'King Pho', 'Edgebrook Coffee Ship', 'US Post Office')
Out Lmks:['Central & Devon NB', 'Edgebrook Coffee Ship', 'King Pho', 'US Post Office']
Out Grounds: {'Central & Devon NB', 'Edgebrook Coffee Ship', 'King Pho', 'US Post Office'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edgebrook Coffee Ship': 'b', 'King Pho': 'c', 'US Post Office': 'd'}
True

222
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Ruk Sushi & Thai, Edward Jones, Local Goods Chicago, and North Branch Arts, must never be allowed to be true
True Ground LTL: & G ! ruk_sushi_&_thai & G ! edward_jones & G ! local_goods_chicago G ! north_branch_arts
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! edward_jones & G ! local_goods_chicago G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ('Ruk Sushi & Thai', 'Edward Jones', 'Local Goods Chicago', 'North Branch Arts')
Out Lmks:['Edward Jones', 'Local Goods Chicago', 'Ruk Sushi & Thai', 'North Branch Arts']
Out Grounds: {'North Branch Arts', 'Ruk Sushi & Thai', 'Edward Jones', 'Local Goods Chicago'}
Placeholder Map: {'North Branch Arts': 'a', 'Ruk Sushi & Thai': 'b', 'Edward Jones': 'c', 'Local Goods Chicago': 'd'}
True

223
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Domino's, Edgebrook Coffee Ship, Local Goods Chicago, and Associated Bank, must never be allowed to be true
True Ground LTL: & G ! dominos & G ! edgebrook_coffee_ship & G ! local_goods_chicago G ! associated_bank
Out Ground LTL: & G ! dominos & G ! edgebrook_coffee_ship & G ! local_goods_chicago G ! associated_bank
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ("Domino's", 'Edgebrook Coffee Ship', 'Local Goods Chicago', 'Associated Bank')
Out Lmks:['Associated Bank', 'Edgebrook Coffee Ship', "Domino's", 'Local Goods Chicago']
Out Grounds: {'Associated Bank', 'Edgebrook Coffee Ship', "Domino's", 'Local Goods Chicago'}
Placeholder Map: {'Associated Bank': 'a', 'Edgebrook Coffee Ship': 'b', "Domino's": 'c', 'Local Goods Chicago': 'd'}
True

224
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go through any of My Sister's Closet, Central & Devon NB, Kanellos Shoe Repair, or North Branch Arts
True Ground LTL: & G ! my_sisters_closet & G ! central_&_devon_nb & G ! kanellos_shoe_repair G ! north_branch_arts
Out Ground LTL: & G ! my_sisters_closet & G ! central_&_devon_nb & G ! kanellos_shoe_repair G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! b G ! d
True Lmks: ("My Sister's Closet", 'Central & Devon NB', 'Kanellos Shoe Repair', 'North Branch Arts')
Out Lmks:['Central & Devon NB', 'Kanellos Shoe Repair', "My Sister's Closet", 'North Branch Arts']
Out Grounds: {'Central & Devon NB', 'Kanellos Shoe Repair', "My Sister's Closet", 'North Branch Arts'}
Placeholder Map: {'Central & Devon NB': 'a', 'Kanellos Shoe Repair': 'b', "My Sister's Closet": 'c', 'North Branch Arts': 'd'}
True

225
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go through any of Currency Change, Local Goods Chicago, Lee Nails, or Central & Devon NB
True Ground LTL: & G ! currency_change & G ! local_goods_chicago & G ! lee_nails G ! central_&_devon_nb
Out Ground LTL: & G ! currency_change & G ! local_goods_chicago & G ! lee_nails G ! central_&_devon_nb
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ('Currency Change', 'Local Goods Chicago', 'Lee Nails', 'Central & Devon NB')
Out Lmks:['Lee Nails', 'Local Goods Chicago', 'Currency Change', 'Central & Devon NB']
Out Grounds: {'Central & Devon NB', 'Local Goods Chicago', 'Currency Change', 'Lee Nails'}
Placeholder Map: {'Central & Devon NB': 'a', 'Local Goods Chicago': 'b', 'Currency Change': 'c', 'Lee Nails': 'd'}
True

226
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never visit Edward Jones, Domino's, Local Goods Chicago, North Branch Arts, or My Sister's Closet
True Ground LTL: & G ! edward_jones & G ! dominos & G ! local_goods_chicago & G ! north_branch_arts G ! my_sisters_closet
Out Ground LTL: & G ! edward_jones & G ! dominos & G ! local_goods_chicago & G ! north_branch_arts G ! my_sisters_closet
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! b & G ! c & G ! a G ! d
True Lmks: ('Edward Jones', "Domino's", 'Local Goods Chicago', 'North Branch Arts', "My Sister's Closet")
Out Lmks:['North Branch Arts', "Domino's", 'Local Goods Chicago', "My Sister's Closet", 'Edward Jones']
Out Grounds: {'North Branch Arts', "Domino's", 'Local Goods Chicago', "My Sister's Closet", 'Edward Jones'}
Placeholder Map: {'North Branch Arts': 'a', "Domino's": 'b', 'Local Goods Chicago': 'c', "My Sister's Closet": 'd', 'Edward Jones': 'h'}
True

227
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never visit Central & Devon NB, Edgebrook Coffee Ship, King Pho, Terry's Place, or Central & Devon SB
True Ground LTL: & G ! central_&_devon_nb & G ! edgebrook_coffee_ship & G ! king_pho & G ! terrys_place G ! central_&_devon_sb
Out Ground LTL: & G ! central_&_devon_nb & G ! edgebrook_coffee_ship & G ! king_pho & G ! terrys_place G ! central_&_devon_sb
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! c & G ! a & G ! d G ! b
True Lmks: ('Central & Devon NB', 'Edgebrook Coffee Ship', 'King Pho', "Terry's Place", 'Central & Devon SB')
Out Lmks:['King Pho', 'Central & Devon SB', 'Edgebrook Coffee Ship', "Terry's Place", 'Central & Devon NB']
Out Grounds: {'King Pho', 'Central & Devon SB', 'Edgebrook Coffee Ship', "Terry's Place", 'Central & Devon NB'}
Placeholder Map: {'King Pho': 'a', 'Central & Devon SB': 'b', 'Edgebrook Coffee Ship': 'c', "Terry's Place": 'd', 'Central & Devon NB': 'h'}
True

228
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can never go to Local Goods Chicago, Domino's, Central & Devon SB, Edgebrook Coffee Ship, or Associated Bank
True Ground LTL: & G ! local_goods_chicago & G ! dominos & G ! central_&_devon_sb & G ! edgebrook_coffee_ship G ! associated_bank
Out Ground LTL: & G ! dominos & G ! central_&_devon_sb & G ! edgebrook_coffee_ship G ! associated_bank
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! a & G ! h G ! d
True Lmks: ('Local Goods Chicago', "Domino's", 'Central & Devon SB', 'Edgebrook Coffee Ship', 'Associated Bank')
Out Lmks:['Central & Devon SB', "Domino's", 'Local Goods Chicago', 'Associated Bank', 'Edgebrook Coffee Ship']
Out Grounds: {'Central & Devon SB', "Domino's", 'Local Goods Chicago', 'Associated Bank', 'Edgebrook Coffee Ship'}
Placeholder Map: {'Central & Devon SB': 'a', "Domino's": 'b', 'Local Goods Chicago': 'c', 'Associated Bank': 'd', 'Edgebrook Coffee Ship': 'h'}
False

229
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can never go to King Pho, Edward Jones, Creativo! Academy, Associated Bank, or US Post Office
True Ground LTL: & G ! king_pho & G ! edward_jones & G ! creativo_academy & G ! associated_bank G ! us_post_office
Out Ground LTL: & G ! edward_jones & G ! creativo_academy & G ! associated_bank G ! us_post_office
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! b & G ! c G ! d
True Lmks: ('King Pho', 'Edward Jones', 'Creativo! Academy', 'Associated Bank', 'US Post Office')
Out Lmks:['King Pho', 'Creativo! Academy', 'Associated Bank', 'US Post Office', 'Edward Jones']
Out Grounds: {'King Pho', 'Creativo! Academy', 'Associated Bank', 'US Post Office', 'Edward Jones'}
Placeholder Map: {'King Pho': 'a', 'Creativo! Academy': 'b', 'Associated Bank': 'c', 'US Post Office': 'd', 'Edward Jones': 'h'}
False

230
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to US Post Office, Central & Devon NB, Edgebrook Coffee Ship, My Sister's Closet, or North Branch Arts, at any time
True Ground LTL: & G ! us_post_office & G ! central_&_devon_nb & G ! edgebrook_coffee_ship & G ! my_sisters_closet G ! north_branch_arts
Out Ground LTL: & G ! us_post_office & G ! central_&_devon_nb & G ! edgebrook_coffee_ship & G ! my_sisters_closet G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! d & G ! b & G ! h G ! a
True Lmks: ('US Post Office', 'Central & Devon NB', 'Edgebrook Coffee Ship', "My Sister's Closet", 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Edgebrook Coffee Ship', 'US Post Office', 'Central & Devon NB', "My Sister's Closet"]
Out Grounds: {'North Branch Arts', 'Edgebrook Coffee Ship', 'US Post Office', 'Central & Devon NB', "My Sister's Closet"}
Placeholder Map: {'North Branch Arts': 'a', 'Edgebrook Coffee Ship': 'b', 'US Post Office': 'c', 'Central & Devon NB': 'd', "My Sister's Closet": 'h'}
True

231
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Central & Devon SB, Ruk Sushi & Thai, King Pho, Little Nest Care, or Central & Devon NB, at any time
True Ground LTL: & G ! central_&_devon_sb & G ! ruk_sushi_&_thai & G ! king_pho & G ! little_nest_care G ! central_&_devon_nb
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! king_pho & G ! little_nest_care G ! central_&_devon_nb
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! h
True Lmks: ('Central & Devon SB', 'Ruk Sushi & Thai', 'King Pho', 'Little Nest Care', 'Central & Devon NB')
Out Lmks:['King Pho', 'Central & Devon SB', 'Ruk Sushi & Thai', 'Little Nest Care', 'Central & Devon NB']
Out Grounds: {'King Pho', 'Central & Devon SB', 'Ruk Sushi & Thai', 'Little Nest Care', 'Central & Devon NB'}
Placeholder Map: {'King Pho': 'a', 'Central & Devon SB': 'b', 'Ruk Sushi & Thai': 'c', 'Little Nest Care': 'd', 'Central & Devon NB': 'h'}
False

232
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never visit Associated Bank, King Pho, Domino's, Ruk Sushi & Thai, or US Post Office
True Ground LTL: & G ! associated_bank & G ! king_pho & G ! dominos & G ! ruk_sushi_&_thai G ! us_post_office
Out Ground LTL: & G ! associated_bank & G ! king_pho & G ! dominos & G ! ruk_sushi_&_thai G ! us_post_office
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! a & G ! b & G ! c G ! h
True Lmks: ('Associated Bank', 'King Pho', "Domino's", 'Ruk Sushi & Thai', 'US Post Office')
Out Lmks:['King Pho', "Domino's", 'Ruk Sushi & Thai', 'Associated Bank', 'US Post Office']
Out Grounds: {'King Pho', "Domino's", 'Ruk Sushi & Thai', 'Associated Bank', 'US Post Office'}
Placeholder Map: {'King Pho': 'a', "Domino's": 'b', 'Ruk Sushi & Thai': 'c', 'Associated Bank': 'd', 'US Post Office': 'h'}
True

233
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never visit My Sister's Closet, Associated Bank, Edgebrook Coffee Ship, Ace Hardware, or Lee Nails
True Ground LTL: & G ! my_sisters_closet & G ! associated_bank & G ! edgebrook_coffee_ship & G ! ace_hardware G ! lee_nails
Out Ground LTL: & G ! my_sisters_closet & G ! associated_bank & G ! edgebrook_coffee_ship & G ! ace_hardware G ! lee_nails
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! b & G ! c & G ! h G ! a
True Lmks: ("My Sister's Closet", 'Associated Bank', 'Edgebrook Coffee Ship', 'Ace Hardware', 'Lee Nails')
Out Lmks:['Lee Nails', 'Associated Bank', 'Edgebrook Coffee Ship', "My Sister's Closet", 'Ace Hardware']
Out Grounds: {'Lee Nails', 'Associated Bank', 'Edgebrook Coffee Ship', "My Sister's Closet", 'Ace Hardware'}
Placeholder Map: {'Lee Nails': 'a', 'Associated Bank': 'b', 'Edgebrook Coffee Ship': 'c', "My Sister's Closet": 'd', 'Ace Hardware': 'h'}
True

234
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always avoid going to Edward Jones, King Pho, Currency Change, Domino's, and Ruk Sushi & Thai
True Ground LTL: & G ! edward_jones & G ! king_pho & G ! currency_change & G ! dominos G ! ruk_sushi_&_thai
Out Ground LTL: & G ! edward_jones & G ! king_pho & G ! currency_change & G ! dominos G ! ruk_sushi_&_thai
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! a & G ! h & G ! b G ! c
True Lmks: ('Edward Jones', 'King Pho', 'Currency Change', "Domino's", 'Ruk Sushi & Thai')
Out Lmks:['King Pho', "Domino's", 'Ruk Sushi & Thai', 'Edward Jones', 'Currency Change']
Out Grounds: {'King Pho', "Domino's", 'Ruk Sushi & Thai', 'Edward Jones', 'Currency Change'}
Placeholder Map: {'King Pho': 'a', "Domino's": 'b', 'Ruk Sushi & Thai': 'c', 'Edward Jones': 'd', 'Currency Change': 'h'}
True

235
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always avoid going to US Post Office, Little Nest Care, My Sister's Closet, Ruk Sushi & Thai, and Baird & Warner
True Ground LTL: & G ! us_post_office & G ! little_nest_care & G ! my_sisters_closet & G ! ruk_sushi_&_thai G ! baird_&_warner
Out Ground LTL: & G ! us_post_office & G ! little_nest_care & G ! my_sisters_closet & G ! ruk_sushi_&_thai G ! baird_&_warner
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! d & G ! h & G ! a G ! b
True Lmks: ('US Post Office', 'Little Nest Care', "My Sister's Closet", 'Ruk Sushi & Thai', 'Baird & Warner')
Out Lmks:['Ruk Sushi & Thai', 'Baird & Warner', 'US Post Office', 'Little Nest Care', "My Sister's Closet"]
Out Grounds: {'Ruk Sushi & Thai', 'Baird & Warner', 'US Post Office', 'Little Nest Care', "My Sister's Closet"}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Baird & Warner': 'b', 'US Post Office': 'c', 'Little Nest Care': 'd', "My Sister's Closet": 'h'}
True

236
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always stay away from Kanellos Shoe Repair, Domino's, Lee Nails, My Sister's Closet, and Edward Jones
True Ground LTL: & G ! kanellos_shoe_repair & G ! dominos & G ! lee_nails & G ! my_sisters_closet G ! edward_jones
Out Ground LTL: & G ! kanellos_shoe_repair & G ! dominos & G ! lee_nails & G ! my_sisters_closet G ! edward_jones
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! a & G ! b & G ! d G ! h
True Lmks: ('Kanellos Shoe Repair', "Domino's", 'Lee Nails', "My Sister's Closet", 'Edward Jones')
Out Lmks:["Domino's", 'Lee Nails', 'Kanellos Shoe Repair', "My Sister's Closet", 'Edward Jones']
Out Grounds: {"Domino's", 'Lee Nails', 'Kanellos Shoe Repair', "My Sister's Closet", 'Edward Jones'}
Placeholder Map: {"Domino's": 'a', 'Lee Nails': 'b', 'Kanellos Shoe Repair': 'c', "My Sister's Closet": 'd', 'Edward Jones': 'h'}
True

237
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always stay away from Lee Nails, Associated Bank, Local Goods Chicago, Ruk Sushi & Thai, and My Sister's Closet
True Ground LTL: & G ! lee_nails & G ! associated_bank & G ! local_goods_chicago & G ! ruk_sushi_&_thai G ! my_sisters_closet
Out Ground LTL: & G ! lee_nails & G ! associated_bank & G ! local_goods_chicago & G ! ruk_sushi_&_thai G ! my_sisters_closet
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! d & G ! b & G ! a G ! h
True Lmks: ('Lee Nails', 'Associated Bank', 'Local Goods Chicago', 'Ruk Sushi & Thai', "My Sister's Closet")
Out Lmks:['Ruk Sushi & Thai', 'Local Goods Chicago', 'Lee Nails', 'Associated Bank', "My Sister's Closet"]
Out Grounds: {'Ruk Sushi & Thai', 'Local Goods Chicago', 'Lee Nails', 'Associated Bank', "My Sister's Closet"}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Local Goods Chicago': 'b', 'Lee Nails': 'c', 'Associated Bank': 'd', "My Sister's Closet": 'h'}
True

238
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you have to avoid US Post Office, Starbucks, Central & Devon SB, Kanellos Shoe Repair, and Terry's Place, at all costs
True Ground LTL: & G ! us_post_office & G ! starbucks & G ! central_&_devon_sb & G ! kanellos_shoe_repair G ! terrys_place
Out Ground LTL: & G ! us_post_office & G ! starbucks & G ! central_&_devon_sb & G ! kanellos_shoe_repair G ! terrys_place
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! h & G ! a & G ! d G ! c
True Lmks: ('US Post Office', 'Starbucks', 'Central & Devon SB', 'Kanellos Shoe Repair', "Terry's Place")
Out Lmks:['Central & Devon SB', 'US Post Office', "Terry's Place", 'Kanellos Shoe Repair', 'Starbucks']
Out Grounds: {'Central & Devon SB', 'US Post Office', "Terry's Place", 'Kanellos Shoe Repair', 'Starbucks'}
Placeholder Map: {'Central & Devon SB': 'a', 'US Post Office': 'b', "Terry's Place": 'c', 'Kanellos Shoe Repair': 'd', 'Starbucks': 'h'}
True

239
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you have to avoid Currency Change, Terry's Place, Starbucks, Baird & Warner, and Lee Nails, at all costs
True Ground LTL: & G ! currency_change & G ! terrys_place & G ! starbucks & G ! baird_&_warner G ! lee_nails
Out Ground LTL: & G ! currency_change & G ! terrys_place & G ! starbucks & G ! baird_&_warner G ! lee_nails
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! c & G ! d & G ! b G ! a
True Lmks: ('Currency Change', "Terry's Place", 'Starbucks', 'Baird & Warner', 'Lee Nails')
Out Lmks:['Lee Nails', 'Baird & Warner', "Terry's Place", 'Starbucks', 'Currency Change']
Out Grounds: {'Lee Nails', 'Baird & Warner', "Terry's Place", 'Starbucks', 'Currency Change'}
Placeholder Map: {'Lee Nails': 'a', 'Baird & Warner': 'b', "Terry's Place": 'c', 'Starbucks': 'd', 'Currency Change': 'h'}
True

240
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Baird & Warner, never go to Domino's, never go to Creativo! Academy, never reach Local Goods Chicago, and never reach Kanellos Shoe Repair
True Ground LTL: & G ! baird_&_warner & G ! dominos & G ! creativo_academy & G ! local_goods_chicago G ! kanellos_shoe_repair
Out Ground LTL: & G ! baird_&_warner & G ! dominos & G ! creativo_academy & G ! local_goods_chicago G ! kanellos_shoe_repair
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! b & G ! a & G ! c G ! h
True Lmks: ('Baird & Warner', "Domino's", 'Creativo! Academy', 'Local Goods Chicago', 'Kanellos Shoe Repair')
Out Lmks:['Creativo! Academy', "Domino's", 'Local Goods Chicago', 'Baird & Warner', 'Kanellos Shoe Repair']
Out Grounds: {'Creativo! Academy', "Domino's", 'Local Goods Chicago', 'Baird & Warner', 'Kanellos Shoe Repair'}
Placeholder Map: {'Creativo! Academy': 'a', "Domino's": 'b', 'Local Goods Chicago': 'c', 'Baird & Warner': 'd', 'Kanellos Shoe Repair': 'h'}
True

241
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Lee Nails, never go to Ace Hardware, never go to Little Nest Care, never reach Baird & Warner, and never reach Kanellos Shoe Repair
True Ground LTL: & G ! lee_nails & G ! ace_hardware & G ! little_nest_care & G ! baird_&_warner G ! kanellos_shoe_repair
Out Ground LTL: & G ! lee_nails & G ! ace_hardware & G ! little_nest_care & G ! baird_&_warner G ! kanellos_shoe_repair
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! c & G ! b G ! d
True Lmks: ('Lee Nails', 'Ace Hardware', 'Little Nest Care', 'Baird & Warner', 'Kanellos Shoe Repair')
Out Lmks:['Lee Nails', 'Baird & Warner', 'Little Nest Care', 'Kanellos Shoe Repair', 'Ace Hardware']
Out Grounds: {'Lee Nails', 'Baird & Warner', 'Little Nest Care', 'Kanellos Shoe Repair', 'Ace Hardware'}
Placeholder Map: {'Lee Nails': 'a', 'Baird & Warner': 'b', 'Little Nest Care': 'c', 'Kanellos Shoe Repair': 'd', 'Ace Hardware': 'h'}
True

242
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never reach the following locations Ace Hardware, Little Nest Care, My Sister's Closet, Domino's, and US Post Office
True Ground LTL: & G ! ace_hardware & G ! little_nest_care & G ! my_sisters_closet & G ! dominos G ! us_post_office
Out Ground LTL: & G ! ace_hardware & G ! little_nest_care & G ! my_sisters_closet & G ! dominos G ! us_post_office
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! c & G ! d & G ! a G ! b
True Lmks: ('Ace Hardware', 'Little Nest Care', "My Sister's Closet", "Domino's", 'US Post Office')
Out Lmks:["Domino's", 'US Post Office', 'Little Nest Care', "My Sister's Closet", 'Ace Hardware']
Out Grounds: {"Domino's", 'US Post Office', 'Little Nest Care', "My Sister's Closet", 'Ace Hardware'}
Placeholder Map: {"Domino's": 'a', 'US Post Office': 'b', 'Little Nest Care': 'c', "My Sister's Closet": 'd', 'Ace Hardware': 'h'}
True

243
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never reach the following locations Central & Devon SB, Currency Change, Domino's, Starbucks, and Associated Bank
True Ground LTL: & G ! central_&_devon_sb & G ! currency_change & G ! dominos & G ! starbucks G ! associated_bank
Out Ground LTL: & G ! central_&_devon_sb & G ! currency_change & G ! dominos & G ! starbucks G ! associated_bank
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! b & G ! d G ! c
True Lmks: ('Central & Devon SB', 'Currency Change', "Domino's", 'Starbucks', 'Associated Bank')
Out Lmks:['Central & Devon SB', "Domino's", 'Associated Bank', 'Starbucks', 'Currency Change']
Out Grounds: {'Central & Devon SB', "Domino's", 'Associated Bank', 'Starbucks', 'Currency Change'}
Placeholder Map: {'Central & Devon SB': 'a', "Domino's": 'b', 'Associated Bank': 'c', 'Starbucks': 'd', 'Currency Change': 'h'}
True

244
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that North Branch Arts, Edgebrook Coffee Ship, Lee Nails, Ruk Sushi & Thai, and Starbucks, are never visited
True Ground LTL: & G ! north_branch_arts & G ! edgebrook_coffee_ship & G ! lee_nails & G ! ruk_sushi_&_thai G ! starbucks
Out Ground LTL: & G ! north_branch_arts & G ! edgebrook_coffee_ship & G ! lee_nails & G ! ruk_sushi_&_thai G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! d & G ! c & G ! b G ! h
True Lmks: ('North Branch Arts', 'Edgebrook Coffee Ship', 'Lee Nails', 'Ruk Sushi & Thai', 'Starbucks')
Out Lmks:['North Branch Arts', 'Ruk Sushi & Thai', 'Lee Nails', 'Edgebrook Coffee Ship', 'Starbucks']
Out Grounds: {'North Branch Arts', 'Ruk Sushi & Thai', 'Lee Nails', 'Edgebrook Coffee Ship', 'Starbucks'}
Placeholder Map: {'North Branch Arts': 'a', 'Ruk Sushi & Thai': 'b', 'Lee Nails': 'c', 'Edgebrook Coffee Ship': 'd', 'Starbucks': 'h'}
True

245
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that Local Goods Chicago, Currency Change, Little Nest Care, Starbucks, and US Post Office, are never visited
True Ground LTL: & G ! local_goods_chicago & G ! currency_change & G ! little_nest_care & G ! starbucks G ! us_post_office
Out Ground LTL: & G ! local_goods_chicago & G ! currency_change & G ! little_nest_care & G ! starbucks G ! us_post_office
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! c & G ! d G ! b
True Lmks: ('Local Goods Chicago', 'Currency Change', 'Little Nest Care', 'Starbucks', 'US Post Office')
Out Lmks:['Local Goods Chicago', 'US Post Office', 'Little Nest Care', 'Starbucks', 'Currency Change']
Out Grounds: {'Local Goods Chicago', 'US Post Office', 'Little Nest Care', 'Starbucks', 'Currency Change'}
Placeholder Map: {'Local Goods Chicago': 'a', 'US Post Office': 'b', 'Little Nest Care': 'c', 'Starbucks': 'd', 'Currency Change': 'h'}
True

246
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Little Nest Care, Central & Devon SB, Starbucks, Currency Change, and Domino's, should never be reached
True Ground LTL: & G ! little_nest_care & G ! central_&_devon_sb & G ! starbucks & G ! currency_change G ! dominos
Out Ground LTL: & G ! little_nest_care & G ! central_&_devon_sb & G ! starbucks & G ! currency_change G ! dominos
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! a & G ! d & G ! h G ! b
True Lmks: ('Little Nest Care', 'Central & Devon SB', 'Starbucks', 'Currency Change', "Domino's")
Out Lmks:['Central & Devon SB', "Domino's", 'Little Nest Care', 'Starbucks', 'Currency Change']
Out Grounds: {'Central & Devon SB', "Domino's", 'Little Nest Care', 'Starbucks', 'Currency Change'}
Placeholder Map: {'Central & Devon SB': 'a', "Domino's": 'b', 'Little Nest Care': 'c', 'Starbucks': 'd', 'Currency Change': 'h'}
True

247
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Ace Hardware, Associated Bank, Kanellos Shoe Repair, Central & Devon NB, and My Sister's Closet, should never be reached
True Ground LTL: & G ! ace_hardware & G ! associated_bank & G ! kanellos_shoe_repair & G ! central_&_devon_nb G ! my_sisters_closet
Out Ground LTL: & G ! ace_hardware & G ! associated_bank & G ! kanellos_shoe_repair & G ! central_&_devon_nb G ! my_sisters_closet
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! a & G ! c & G ! b G ! d
True Lmks: ('Ace Hardware', 'Associated Bank', 'Kanellos Shoe Repair', 'Central & Devon NB', "My Sister's Closet")
Out Lmks:['Associated Bank', 'Central & Devon NB', 'Kanellos Shoe Repair', "My Sister's Closet", 'Ace Hardware']
Out Grounds: {'Associated Bank', 'Central & Devon NB', 'Kanellos Shoe Repair', "My Sister's Closet", 'Ace Hardware'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon NB': 'b', 'Kanellos Shoe Repair': 'c', "My Sister's Closet": 'd', 'Ace Hardware': 'h'}
True

248
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Edward Jones, Central & Devon NB, Currency Change, Creativo! Academy, or Kanellos Shoe Repair
True Ground LTL: & G ! edward_jones & G ! central_&_devon_nb & G ! currency_change & G ! creativo_academy G ! kanellos_shoe_repair
Out Ground LTL: & G ! central_&_devon_nb & G ! currency_change & G ! creativo_academy G ! kanellos_shoe_repair
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! h & G ! a G ! c
True Lmks: ('Edward Jones', 'Central & Devon NB', 'Currency Change', 'Creativo! Academy', 'Kanellos Shoe Repair')
Out Lmks:['Creativo! Academy', 'Central & Devon NB', 'Kanellos Shoe Repair', 'Edward Jones', 'Currency Change']
Out Grounds: {'Creativo! Academy', 'Central & Devon NB', 'Kanellos Shoe Repair', 'Edward Jones', 'Currency Change'}
Placeholder Map: {'Creativo! Academy': 'a', 'Central & Devon NB': 'b', 'Kanellos Shoe Repair': 'c', 'Edward Jones': 'd', 'Currency Change': 'h'}
False

249
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Terry's Place, Central & Devon SB, Ace Hardware, Currency Change, or Starbucks
True Ground LTL: & G ! terrys_place & G ! central_&_devon_sb & G ! ace_hardware & G ! currency_change G ! starbucks
Out Ground LTL: & G ! terrys_place & G ! central_&_devon_sb & G ! ace_hardware & G ! currency_change G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! a & G ! h & G ! d G ! c
True Lmks: ("Terry's Place", 'Central & Devon SB', 'Ace Hardware', 'Currency Change', 'Starbucks')
Out Lmks:['Central & Devon SB', "Terry's Place", 'Starbucks', 'Currency Change', 'Ace Hardware']
Out Grounds: {'Central & Devon SB', "Terry's Place", 'Starbucks', 'Currency Change', 'Ace Hardware'}
Placeholder Map: {'Central & Devon SB': 'a', "Terry's Place": 'b', 'Starbucks': 'c', 'Currency Change': 'd', 'Ace Hardware': 'h'}
True

250
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not go to Baird & Warner, My Sister's Closet, Currency Change, Associated Bank, or Domino's
True Ground LTL: & G ! baird_&_warner & G ! my_sisters_closet & G ! currency_change & G ! associated_bank G ! dominos
Out Ground LTL: & G ! baird_&_warner & G ! my_sisters_closet & G ! currency_change & G ! associated_bank G ! dominos
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! h & G ! c G ! a
True Lmks: ('Baird & Warner', "My Sister's Closet", 'Currency Change', 'Associated Bank', "Domino's")
Out Lmks:["Domino's", 'Baird & Warner', 'Associated Bank', "My Sister's Closet", 'Currency Change']
Out Grounds: {"Domino's", 'Baird & Warner', 'Associated Bank', "My Sister's Closet", 'Currency Change'}
Placeholder Map: {"Domino's": 'a', 'Baird & Warner': 'b', 'Associated Bank': 'c', "My Sister's Closet": 'd', 'Currency Change': 'h'}
True

251
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not go to Little Nest Care, Ruk Sushi & Thai, Local Goods Chicago, Creativo! Academy, or Central & Devon NB
True Ground LTL: & G ! little_nest_care & G ! ruk_sushi_&_thai & G ! local_goods_chicago & G ! creativo_academy G ! central_&_devon_nb
Out Ground LTL: & G ! ruk_sushi_&_thai & G ! local_goods_chicago & G ! creativo_academy G ! central_&_devon_nb
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! a G ! h
True Lmks: ('Little Nest Care', 'Ruk Sushi & Thai', 'Local Goods Chicago', 'Creativo! Academy', 'Central & Devon NB')
Out Lmks:['Creativo! Academy', 'Local Goods Chicago', 'Ruk Sushi & Thai', 'Little Nest Care', 'Central & Devon NB']
Out Grounds: {'Creativo! Academy', 'Local Goods Chicago', 'Ruk Sushi & Thai', 'Little Nest Care', 'Central & Devon NB'}
Placeholder Map: {'Creativo! Academy': 'a', 'Local Goods Chicago': 'b', 'Ruk Sushi & Thai': 'c', 'Little Nest Care': 'd', 'Central & Devon NB': 'h'}
False

252
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can go anywhere but Starbucks, My Sister's Closet, Creativo! Academy, Central & Devon NB, and Associated Bank
True Ground LTL: & G ! starbucks & G ! my_sisters_closet & G ! creativo_academy & G ! central_&_devon_nb G ! associated_bank
Out Ground LTL: & G ! starbucks & G ! my_sisters_closet & G ! creativo_academy & G ! central_&_devon_nb G ! associated_bank
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! h & G ! a & G ! c G ! b
True Lmks: ('Starbucks', "My Sister's Closet", 'Creativo! Academy', 'Central & Devon NB', 'Associated Bank')
Out Lmks:['Creativo! Academy', 'Associated Bank', 'Central & Devon NB', 'Starbucks', "My Sister's Closet"]
Out Grounds: {'Creativo! Academy', 'Associated Bank', 'Central & Devon NB', 'Starbucks', "My Sister's Closet"}
Placeholder Map: {'Creativo! Academy': 'a', 'Associated Bank': 'b', 'Central & Devon NB': 'c', 'Starbucks': 'd', "My Sister's Closet": 'h'}
True

253
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can go anywhere but Terry's Place, Becker Roofing Company, Ruk Sushi & Thai, Associated Bank, and Little Nest Care
True Ground LTL: & G ! terrys_place & G ! becker_roofing_company & G ! ruk_sushi_&_thai & G ! associated_bank G ! little_nest_care
Out Ground LTL: & G ! terrys_place & G ! becker_roofing_company & G ! ruk_sushi_&_thai & G ! associated_bank G ! little_nest_care
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! h & G ! a & G ! b G ! c
True Lmks: ("Terry's Place", 'Becker Roofing Company', 'Ruk Sushi & Thai', 'Associated Bank', 'Little Nest Care')
Out Lmks:['Ruk Sushi & Thai', 'Associated Bank', 'Little Nest Care', "Terry's Place", 'Becker Roofing Company']
Out Grounds: {'Ruk Sushi & Thai', 'Associated Bank', 'Little Nest Care', "Terry's Place", 'Becker Roofing Company'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Associated Bank': 'b', 'Little Nest Care': 'c', "Terry's Place": 'd', 'Becker Roofing Company': 'h'}
True

254
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Terry's Place, Edgebrook Coffee Ship, My Sister's Closet, US Post Office, and Ruk Sushi & Thai, can not be visited at any time
True Ground LTL: & G ! terrys_place & G ! edgebrook_coffee_ship & G ! my_sisters_closet & G ! us_post_office G ! ruk_sushi_&_thai
Out Ground LTL: & G ! terrys_place & G ! edgebrook_coffee_ship & G ! my_sisters_closet & G ! us_post_office G ! ruk_sushi_&_thai
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! b & G ! h & G ! c G ! a
True Lmks: ("Terry's Place", 'Edgebrook Coffee Ship', "My Sister's Closet", 'US Post Office', 'Ruk Sushi & Thai')
Out Lmks:['Ruk Sushi & Thai', 'Edgebrook Coffee Ship', 'US Post Office', "Terry's Place", "My Sister's Closet"]
Out Grounds: {'Ruk Sushi & Thai', 'Edgebrook Coffee Ship', 'US Post Office', "Terry's Place", "My Sister's Closet"}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Edgebrook Coffee Ship': 'b', 'US Post Office': 'c', "Terry's Place": 'd', "My Sister's Closet": 'h'}
True

255
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Baird & Warner, Ace Hardware, Central & Devon SB, US Post Office, and North Branch Arts, can not be visited at any time
True Ground LTL: & G ! baird_&_warner & G ! ace_hardware & G ! central_&_devon_sb & G ! us_post_office G ! north_branch_arts
Out Ground LTL: & G ! baird_&_warner & G ! ace_hardware & G ! central_&_devon_sb & G ! us_post_office G ! north_branch_arts
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! h & G ! b & G ! d G ! a
True Lmks: ('Baird & Warner', 'Ace Hardware', 'Central & Devon SB', 'US Post Office', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Central & Devon SB', 'Baird & Warner', 'US Post Office', 'Ace Hardware']
Out Grounds: {'North Branch Arts', 'Central & Devon SB', 'Baird & Warner', 'US Post Office', 'Ace Hardware'}
Placeholder Map: {'North Branch Arts': 'a', 'Central & Devon SB': 'b', 'Baird & Warner': 'c', 'US Post Office': 'd', 'Ace Hardware': 'h'}
True

256
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always keep away from Baird & Warner, My Sister's Closet, Edward Jones, Ruk Sushi & Thai, and Local Goods Chicago
True Ground LTL: & G ! baird_&_warner & G ! my_sisters_closet & G ! edward_jones & G ! ruk_sushi_&_thai G ! local_goods_chicago
Out Ground LTL: & G ! baird_&_warner & G ! my_sisters_closet & G ! edward_jones & G ! ruk_sushi_&_thai G ! local_goods_chicago
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! d & G ! h & G ! a G ! b
True Lmks: ('Baird & Warner', "My Sister's Closet", 'Edward Jones', 'Ruk Sushi & Thai', 'Local Goods Chicago')
Out Lmks:['Ruk Sushi & Thai', 'Local Goods Chicago', 'Baird & Warner', "My Sister's Closet", 'Edward Jones']
Out Grounds: {'Ruk Sushi & Thai', 'Local Goods Chicago', 'Baird & Warner', "My Sister's Closet", 'Edward Jones'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Local Goods Chicago': 'b', 'Baird & Warner': 'c', "My Sister's Closet": 'd', 'Edward Jones': 'h'}
True

257
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always keep away from North Branch Arts, Becker Roofing Company, Edward Jones, My Sister's Closet, and Ruk Sushi & Thai
True Ground LTL: & G ! north_branch_arts & G ! becker_roofing_company & G ! edward_jones & G ! my_sisters_closet G ! ruk_sushi_&_thai
Out Ground LTL: & G ! north_branch_arts & G ! becker_roofing_company & G ! edward_jones & G ! my_sisters_closet G ! ruk_sushi_&_thai
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! c & G ! h & G ! d G ! b
True Lmks: ('North Branch Arts', 'Becker Roofing Company', 'Edward Jones', "My Sister's Closet", 'Ruk Sushi & Thai')
Out Lmks:['North Branch Arts', 'Ruk Sushi & Thai', 'Becker Roofing Company', "My Sister's Closet", 'Edward Jones']
Out Grounds: {'North Branch Arts', 'Ruk Sushi & Thai', 'Becker Roofing Company', "My Sister's Closet", 'Edward Jones'}
Placeholder Map: {'North Branch Arts': 'a', 'Ruk Sushi & Thai': 'b', 'Becker Roofing Company': 'c', "My Sister's Closet": 'd', 'Edward Jones': 'h'}
True

258
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you must avoid Central & Devon NB, Currency Change, Local Goods Chicago, Associated Bank, and Lee Nails, at all costs
True Ground LTL: & G ! central_&_devon_nb & G ! currency_change & G ! local_goods_chicago & G ! associated_bank G ! lee_nails
Out Ground LTL: & G ! central_&_devon_nb & G ! currency_change & G ! local_goods_chicago & G ! associated_bank G ! lee_nails
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! h & G ! a & G ! c G ! b
True Lmks: ('Central & Devon NB', 'Currency Change', 'Local Goods Chicago', 'Associated Bank', 'Lee Nails')
Out Lmks:['Local Goods Chicago', 'Lee Nails', 'Associated Bank', 'Central & Devon NB', 'Currency Change']
Out Grounds: {'Local Goods Chicago', 'Lee Nails', 'Associated Bank', 'Central & Devon NB', 'Currency Change'}
Placeholder Map: {'Local Goods Chicago': 'a', 'Lee Nails': 'b', 'Associated Bank': 'c', 'Central & Devon NB': 'd', 'Currency Change': 'h'}
True

259
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you must avoid Kanellos Shoe Repair, Becker Roofing Company, Ace Hardware, Terry's Place, and Lee Nails, at all costs
True Ground LTL: & G ! kanellos_shoe_repair & G ! becker_roofing_company & G ! ace_hardware & G ! terrys_place G ! lee_nails
Out Ground LTL: & G ! kanellos_shoe_repair & G ! becker_roofing_company & G ! ace_hardware & G ! terrys_place G ! lee_nails
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! d & G ! h & G ! b G ! a
True Lmks: ('Kanellos Shoe Repair', 'Becker Roofing Company', 'Ace Hardware', "Terry's Place", 'Lee Nails')
Out Lmks:['Lee Nails', "Terry's Place", 'Kanellos Shoe Repair', 'Becker Roofing Company', 'Ace Hardware']
Out Grounds: {'Lee Nails', "Terry's Place", 'Kanellos Shoe Repair', 'Becker Roofing Company', 'Ace Hardware'}
Placeholder Map: {'Lee Nails': 'a', "Terry's Place": 'b', 'Kanellos Shoe Repair': 'c', 'Becker Roofing Company': 'd', 'Ace Hardware': 'h'}
True

260
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Little Nest Care, Lee Nails, Baird & Warner, Associated Bank, or North Branch Arts
True Ground LTL: & G ! little_nest_care & G ! lee_nails & G ! baird_&_warner & G ! associated_bank G ! north_branch_arts
Out Ground LTL: & G ! lee_nails & G ! baird_&_warner & G ! associated_bank G ! little_nest_care
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! h
True Lmks: ('Little Nest Care', 'Lee Nails', 'Baird & Warner', 'Associated Bank', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Lee Nails', 'Baird & Warner', 'Associated Bank', 'Little Nest Care']
Out Grounds: {'North Branch Arts', 'Lee Nails', 'Baird & Warner', 'Associated Bank', 'Little Nest Care'}
Placeholder Map: {'North Branch Arts': 'a', 'Lee Nails': 'b', 'Baird & Warner': 'c', 'Associated Bank': 'd', 'Little Nest Care': 'h'}
False

261
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Little Nest Care, Becker Roofing Company, Lee Nails, Edgebrook Coffee Ship, or Central & Devon NB
True Ground LTL: & G ! little_nest_care & G ! becker_roofing_company & G ! lee_nails & G ! edgebrook_coffee_ship G ! central_&_devon_nb
Out Ground LTL: & G ! little_nest_care & G ! becker_roofing_company & G ! lee_nails & G ! edgebrook_coffee_ship G ! central_&_devon_nb
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! h & G ! a & G ! b G ! d
True Lmks: ('Little Nest Care', 'Becker Roofing Company', 'Lee Nails', 'Edgebrook Coffee Ship', 'Central & Devon NB')
Out Lmks:['Lee Nails', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Central & Devon NB', 'Becker Roofing Company']
Out Grounds: {'Lee Nails', 'Edgebrook Coffee Ship', 'Little Nest Care', 'Central & Devon NB', 'Becker Roofing Company'}
Placeholder Map: {'Lee Nails': 'a', 'Edgebrook Coffee Ship': 'b', 'Little Nest Care': 'c', 'Central & Devon NB': 'd', 'Becker Roofing Company': 'h'}
True

262
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: avoid Edgebrook Coffee Ship, US Post Office, Central & Devon NB, Currency Change, and Starbucks, forever
True Ground LTL: & G ! edgebrook_coffee_ship & G ! us_post_office & G ! central_&_devon_nb & G ! currency_change G ! starbucks
Out Ground LTL: & G ! edgebrook_coffee_ship & G ! us_post_office & G ! central_&_devon_nb & G ! currency_change G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! b & G ! c & G ! h G ! d
True Lmks: ('Edgebrook Coffee Ship', 'US Post Office', 'Central & Devon NB', 'Currency Change', 'Starbucks')
Out Lmks:['Edgebrook Coffee Ship', 'US Post Office', 'Central & Devon NB', 'Starbucks', 'Currency Change']
Out Grounds: {'Edgebrook Coffee Ship', 'US Post Office', 'Central & Devon NB', 'Starbucks', 'Currency Change'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'US Post Office': 'b', 'Central & Devon NB': 'c', 'Starbucks': 'd', 'Currency Change': 'h'}
True

263
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: avoid Associated Bank, Edward Jones, North Branch Arts, Domino's, and Lee Nails, forever
True Ground LTL: & G ! associated_bank & G ! edward_jones & G ! north_branch_arts & G ! dominos G ! lee_nails
Out Ground LTL: & G F associated_bank & G F edward_jones & G F north_branch_arts & G F dominos G F lee_nails
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G F d & G F h & G F a & G F b G F c
True Lmks: ('Associated Bank', 'Edward Jones', 'North Branch Arts', "Domino's", 'Lee Nails')
Out Lmks:['North Branch Arts', "Domino's", 'Lee Nails', 'Associated Bank', 'Edward Jones']
Out Grounds: {'North Branch Arts', "Domino's", 'Lee Nails', 'Associated Bank', 'Edward Jones'}
Placeholder Map: {'North Branch Arts': 'a', "Domino's": 'b', 'Lee Nails': 'c', 'Associated Bank': 'd', 'Edward Jones': 'h'}
False

264
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not make any single visit to My Sister's Closet, Kanellos Shoe Repair, Creativo! Academy, Domino's, or Local Goods Chicago
True Ground LTL: & G ! my_sisters_closet & G ! kanellos_shoe_repair & G ! creativo_academy & G ! dominos G ! local_goods_chicago
Out Ground LTL: & G ! my_sisters_closet & G ! kanellos_shoe_repair & G ! creativo_academy & G ! dominos G ! local_goods_chicago
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! d & G ! a & G ! b G ! c
True Lmks: ("My Sister's Closet", 'Kanellos Shoe Repair', 'Creativo! Academy', "Domino's", 'Local Goods Chicago')
Out Lmks:['Creativo! Academy', "Domino's", 'Local Goods Chicago', 'Kanellos Shoe Repair', "My Sister's Closet"]
Out Grounds: {'Creativo! Academy', "Domino's", 'Local Goods Chicago', 'Kanellos Shoe Repair', "My Sister's Closet"}
Placeholder Map: {'Creativo! Academy': 'a', "Domino's": 'b', 'Local Goods Chicago': 'c', 'Kanellos Shoe Repair': 'd', "My Sister's Closet": 'h'}
True

265
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not make any single visit to Domino's, North Branch Arts, Creativo! Academy, Ruk Sushi & Thai, or Central & Devon NB
True Ground LTL: & G ! dominos & G ! north_branch_arts & G ! creativo_academy & G ! ruk_sushi_&_thai G ! central_&_devon_nb
Out Ground LTL: & G ! dominos & G ! north_branch_arts & G ! creativo_academy & G ! ruk_sushi_&_thai G ! central_&_devon_nb
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! a & G ! b & G ! d G ! h
True Lmks: ("Domino's", 'North Branch Arts', 'Creativo! Academy', 'Ruk Sushi & Thai', 'Central & Devon NB')
Out Lmks:['North Branch Arts', 'Creativo! Academy', "Domino's", 'Ruk Sushi & Thai', 'Central & Devon NB']
Out Grounds: {'North Branch Arts', 'Creativo! Academy', "Domino's", 'Ruk Sushi & Thai', 'Central & Devon NB'}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', "Domino's": 'c', 'Ruk Sushi & Thai': 'd', 'Central & Devon NB': 'h'}
True

266
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that none among US Post Office, My Sister's Closet, Starbucks, North Branch Arts, and Creativo! Academy, are ever visited
True Ground LTL: & G ! us_post_office & G ! my_sisters_closet & G ! starbucks & G ! north_branch_arts G ! creativo_academy
Out Ground LTL: & G ! us_post_office & G ! my_sisters_closet & G ! starbucks & G ! north_branch_arts G ! creativo_academy
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! h & G ! d & G ! a G ! b
True Lmks: ('US Post Office', "My Sister's Closet", 'Starbucks', 'North Branch Arts', 'Creativo! Academy')
Out Lmks:['North Branch Arts', 'Creativo! Academy', 'US Post Office', 'Starbucks', "My Sister's Closet"]
Out Grounds: {'North Branch Arts', 'Creativo! Academy', 'US Post Office', 'Starbucks', "My Sister's Closet"}
Placeholder Map: {'North Branch Arts': 'a', 'Creativo! Academy': 'b', 'US Post Office': 'c', 'Starbucks': 'd', "My Sister's Closet": 'h'}
True

267
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that none among Creativo! Academy, Currency Change, Lee Nails, Edward Jones, and Domino's, are ever visited
True Ground LTL: & G ! creativo_academy & G ! currency_change & G ! lee_nails & G ! edward_jones G ! dominos
Out Ground LTL: & G ! creativo_academy & G ! currency_change & G ! lee_nails & G ! edward_jones G ! dominos
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! c & G ! d G ! b
True Lmks: ('Creativo! Academy', 'Currency Change', 'Lee Nails', 'Edward Jones', "Domino's")
Out Lmks:['Creativo! Academy', "Domino's", 'Lee Nails', 'Edward Jones', 'Currency Change']
Out Grounds: {'Creativo! Academy', "Domino's", 'Lee Nails', 'Edward Jones', 'Currency Change'}
Placeholder Map: {'Creativo! Academy': 'a', "Domino's": 'b', 'Lee Nails': 'c', 'Edward Jones': 'd', 'Currency Change': 'h'}
True

268
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Lee Nails, Central & Devon NB, Terry's Place, Domino's, and Starbucks, must never be allowed to hold true
True Ground LTL: & G ! lee_nails & G ! central_&_devon_nb & G ! terrys_place & G ! dominos G ! starbucks
Out Ground LTL: & G ! lee_nails & G ! central_&_devon_nb & G ! terrys_place & G ! dominos G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! c & G ! a G ! h
True Lmks: ('Lee Nails', 'Central & Devon NB', "Terry's Place", "Domino's", 'Starbucks')
Out Lmks:["Domino's", 'Lee Nails', "Terry's Place", 'Central & Devon NB', 'Starbucks']
Out Grounds: {"Domino's", 'Lee Nails', "Terry's Place", 'Central & Devon NB', 'Starbucks'}
Placeholder Map: {"Domino's": 'a', 'Lee Nails': 'b', "Terry's Place": 'c', 'Central & Devon NB': 'd', 'Starbucks': 'h'}
True

269
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Central & Devon SB, US Post Office, Starbucks, Kanellos Shoe Repair, and My Sister's Closet, must never be allowed to hold true
True Ground LTL: & G ! central_&_devon_sb & G ! us_post_office & G ! starbucks & G ! kanellos_shoe_repair G ! my_sisters_closet
Out Ground LTL: & G ! central_&_devon_sb & G ! us_post_office & G ! starbucks & G ! kanellos_shoe_repair G ! my_sisters_closet
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! b & G ! d & G ! c G ! h
True Lmks: ('Central & Devon SB', 'US Post Office', 'Starbucks', 'Kanellos Shoe Repair', "My Sister's Closet")
Out Lmks:['Central & Devon SB', 'US Post Office', 'Kanellos Shoe Repair', 'Starbucks', "My Sister's Closet"]
Out Grounds: {'Central & Devon SB', 'US Post Office', 'Kanellos Shoe Repair', 'Starbucks', "My Sister's Closet"}
Placeholder Map: {'Central & Devon SB': 'a', 'US Post Office': 'b', 'Kanellos Shoe Repair': 'c', 'Starbucks': 'd', "My Sister's Closet": 'h'}
True

270
past_avoidance ['a', 'b'] Input utterance: do not go to Domino's, until you see Central & Devon SB
True Ground LTL: U ! dominos central_&_devon_sb
Out Ground LTL: U dominos central_&_devon_sb
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ("Domino's", 'Central & Devon SB')
Out Lmks:['Central & Devon SB', "Domino's"]
Out Grounds: {'Central & Devon SB', "Domino's"}
Placeholder Map: {'Central & Devon SB': 'a', "Domino's": 'b'}
False

271
past_avoidance ['a', 'b'] Input utterance: do not go to US Post Office, until you see Ruk Sushi & Thai
True Ground LTL: U ! us_post_office ruk_sushi_&_thai
Out Ground LTL: U us_post_office ruk_sushi_&_thai
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('US Post Office', 'Ruk Sushi & Thai')
Out Lmks:['US Post Office', 'Ruk Sushi & Thai']
Out Grounds: {'US Post Office', 'Ruk Sushi & Thai'}
Placeholder Map: {'US Post Office': 'a', 'Ruk Sushi & Thai': 'b'}
False

272
past_avoidance ['a', 'b'] Input utterance: avoid visiting Baird & Warner, till you observe Local Goods Chicago
True Ground LTL: U ! baird_&_warner local_goods_chicago
Out Ground LTL: U baird_&_warner local_goods_chicago
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Baird & Warner', 'Local Goods Chicago')
Out Lmks:['Local Goods Chicago', 'Baird & Warner']
Out Grounds: {'Local Goods Chicago', 'Baird & Warner'}
Placeholder Map: {'Local Goods Chicago': 'a', 'Baird & Warner': 'b'}
False

273
past_avoidance ['a', 'b'] Input utterance: avoid visiting Associated Bank, till you observe Central & Devon SB
True Ground LTL: U ! associated_bank central_&_devon_sb
Out Ground LTL: U associated_bank central_&_devon_sb
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Associated Bank', 'Central & Devon SB')
Out Lmks:['Associated Bank', 'Central & Devon SB']
Out Grounds: {'Associated Bank', 'Central & Devon SB'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon SB': 'b'}
False

274
past_avoidance ['a', 'b'] Input utterance: do not go to Central & Devon NB, until Baird & Warner, has occured
True Ground LTL: U ! central_&_devon_nb baird_&_warner
Out Ground LTL: & U ! central_&_devon_nb baird_&_warner F central_&_devon_nb
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Central & Devon NB', 'Baird & Warner')
Out Lmks:['Central & Devon NB', 'Baird & Warner']
Out Grounds: {'Central & Devon NB', 'Baird & Warner'}
Placeholder Map: {'Central & Devon NB': 'a', 'Baird & Warner': 'b'}
False

275
past_avoidance ['a', 'b'] Input utterance: do not go to Ruk Sushi & Thai, until Currency Change, has occured
True Ground LTL: U ! ruk_sushi_&_thai currency_change
Out Ground LTL: & U ! ruk_sushi_&_thai currency_change F ruk_sushi_&_thai
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Ruk Sushi & Thai', 'Currency Change')
Out Lmks:['Ruk Sushi & Thai', 'Currency Change']
Out Grounds: {'Ruk Sushi & Thai', 'Currency Change'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Currency Change': 'b'}
False

276
past_avoidance ['a', 'b'] Input utterance: once you observe Becker Roofing Company, only then are you allowed to go to Little Nest Care
True Ground LTL: U ! little_nest_care becker_roofing_company
Out Ground LTL: U little_nest_care becker_roofing_company
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Little Nest Care', 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', 'Little Nest Care']
Out Grounds: {'Becker Roofing Company', 'Little Nest Care'}
Placeholder Map: {'Becker Roofing Company': 'a', 'Little Nest Care': 'b'}
False

277
past_avoidance ['a', 'b'] Input utterance: once you observe Creativo! Academy, only then are you allowed to go to Little Nest Care
True Ground LTL: U ! little_nest_care creativo_academy
Out Ground LTL: U little_nest_care creativo_academy
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Little Nest Care', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Little Nest Care']
Out Grounds: {'Creativo! Academy', 'Little Nest Care'}
Placeholder Map: {'Creativo! Academy': 'a', 'Little Nest Care': 'b'}
False

278
past_avoidance ['a', 'b'] Input utterance: you can visit Associated Bank, only after seeing Creativo! Academy
True Ground LTL: U ! associated_bank creativo_academy
Out Ground LTL: & U ! associated_bank creativo_academy F associated_bank
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Associated Bank', 'Creativo! Academy')
Out Lmks:['Associated Bank', 'Creativo! Academy']
Out Grounds: {'Associated Bank', 'Creativo! Academy'}
Placeholder Map: {'Associated Bank': 'a', 'Creativo! Academy': 'b'}
False

279
past_avoidance ['a', 'b'] Input utterance: you can visit Creativo! Academy, only after seeing Currency Change
True Ground LTL: U ! creativo_academy currency_change
Out Ground LTL: & U ! creativo_academy currency_change F creativo_academy
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Creativo! Academy', 'Currency Change')
Out Lmks:['Creativo! Academy', 'Currency Change']
Out Grounds: {'Creativo! Academy', 'Currency Change'}
Placeholder Map: {'Creativo! Academy': 'a', 'Currency Change': 'b'}
False

280
past_avoidance ['a', 'b'] Input utterance: do not go to Currency Change, until you go to Edgebrook Coffee Ship
True Ground LTL: U ! currency_change edgebrook_coffee_ship
Out Ground LTL: & U ! currency_change edgebrook_coffee_ship F currency_change
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Currency Change', 'Edgebrook Coffee Ship')
Out Lmks:['Edgebrook Coffee Ship', 'Currency Change']
Out Grounds: {'Edgebrook Coffee Ship', 'Currency Change'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Currency Change': 'b'}
False

281
past_avoidance ['a', 'b'] Input utterance: do not go to Ruk Sushi & Thai, until you go to North Branch Arts
True Ground LTL: U ! ruk_sushi_&_thai north_branch_arts
Out Ground LTL: & U ! ruk_sushi_&_thai north_branch_arts F ruk_sushi_&_thai
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Ruk Sushi & Thai', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Ruk Sushi & Thai']
Out Grounds: {'North Branch Arts', 'Ruk Sushi & Thai'}
Placeholder Map: {'North Branch Arts': 'a', 'Ruk Sushi & Thai': 'b'}
False

282
past_avoidance ['a', 'b'] Input utterance: avoid Terry's Place, until you reach Domino's
True Ground LTL: U ! terrys_place dominos
Out Ground LTL: U terrys_place dominos
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ("Terry's Place", "Domino's")
Out Lmks:["Domino's", "Terry's Place"]
Out Grounds: {"Domino's", "Terry's Place"}
Placeholder Map: {"Domino's": 'a', "Terry's Place": 'b'}
False

283
past_avoidance ['a', 'b'] Input utterance: avoid Edward Jones, until you reach Baird & Warner
True Ground LTL: U ! edward_jones baird_&_warner
Out Ground LTL: U edward_jones baird_&_warner
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Edward Jones', 'Baird & Warner')
Out Lmks:['Edward Jones', 'Baird & Warner']
Out Grounds: {'Edward Jones', 'Baird & Warner'}
Placeholder Map: {'Edward Jones': 'a', 'Baird & Warner': 'b'}
False

284
past_avoidance ['a', 'b'] Input utterance: stay away from Local Goods Chicago, until you move to Lee Nails
True Ground LTL: U ! local_goods_chicago lee_nails
Out Ground LTL: U local_goods_chicago lee_nails
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Local Goods Chicago', 'Lee Nails')
Out Lmks:['Local Goods Chicago', 'Lee Nails']
Out Grounds: {'Local Goods Chicago', 'Lee Nails'}
Placeholder Map: {'Local Goods Chicago': 'a', 'Lee Nails': 'b'}
False

285
past_avoidance ['a', 'b'] Input utterance: stay away from Lee Nails, until you move to Baird & Warner
True Ground LTL: U ! lee_nails baird_&_warner
Out Ground LTL: U lee_nails baird_&_warner
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Lee Nails', 'Baird & Warner')
Out Lmks:['Lee Nails', 'Baird & Warner']
Out Grounds: {'Lee Nails', 'Baird & Warner'}
Placeholder Map: {'Lee Nails': 'a', 'Baird & Warner': 'b'}
False

286
past_avoidance ['a', 'b'] Input utterance: do not move to Terry's Place, until you arrive at Kanellos Shoe Repair
True Ground LTL: U ! terrys_place kanellos_shoe_repair
Out Ground LTL: & U ! terrys_place kanellos_shoe_repair F terrys_place
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("Terry's Place", 'Kanellos Shoe Repair')
Out Lmks:['Kanellos Shoe Repair', "Terry's Place"]
Out Grounds: {'Kanellos Shoe Repair', "Terry's Place"}
Placeholder Map: {'Kanellos Shoe Repair': 'a', "Terry's Place": 'b'}
False

287
past_avoidance ['a', 'b'] Input utterance: do not move to My Sister's Closet, until you arrive at Edgebrook Coffee Ship
True Ground LTL: U ! my_sisters_closet edgebrook_coffee_ship
Out Ground LTL: & U ! my_sisters_closet edgebrook_coffee_ship F my_sisters_closet
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("My Sister's Closet", 'Edgebrook Coffee Ship')
Out Lmks:['Edgebrook Coffee Ship', "My Sister's Closet"]
Out Grounds: {'Edgebrook Coffee Ship', "My Sister's Closet"}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', "My Sister's Closet": 'b'}
False

288
past_avoidance ['a', 'b'] Input utterance: do not go to King Pho, until you have gone to Local Goods Chicago
True Ground LTL: U ! king_pho local_goods_chicago
Out Ground LTL: & U ! king_pho local_goods_chicago F king_pho
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('King Pho', 'Local Goods Chicago')
Out Lmks:['King Pho', 'Local Goods Chicago']
Out Grounds: {'King Pho', 'Local Goods Chicago'}
Placeholder Map: {'King Pho': 'a', 'Local Goods Chicago': 'b'}
False

289
past_avoidance ['a', 'b'] Input utterance: do not go to My Sister's Closet, until you have gone to Central & Devon SB
True Ground LTL: U ! my_sisters_closet central_&_devon_sb
Out Ground LTL: & U ! my_sisters_closet central_&_devon_sb F my_sisters_closet
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("My Sister's Closet", 'Central & Devon SB')
Out Lmks:['Central & Devon SB', "My Sister's Closet"]
Out Grounds: {'Central & Devon SB', "My Sister's Closet"}
Placeholder Map: {'Central & Devon SB': 'a', "My Sister's Closet": 'b'}
False

290
past_avoidance ['a', 'b'] Input utterance: avoid Associated Bank, at all costs until you reach Becker Roofing Company, first
True Ground LTL: U ! associated_bank becker_roofing_company
Out Ground LTL: U associated_bank becker_roofing_company
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Associated Bank', 'Becker Roofing Company')
Out Lmks:['Associated Bank', 'Becker Roofing Company']
Out Grounds: {'Associated Bank', 'Becker Roofing Company'}
Placeholder Map: {'Associated Bank': 'a', 'Becker Roofing Company': 'b'}
False

291
past_avoidance ['a', 'b'] Input utterance: avoid Central & Devon NB, at all costs until you reach Lee Nails, first
True Ground LTL: U ! central_&_devon_nb lee_nails
Out Ground LTL: U central_&_devon_nb lee_nails
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Central & Devon NB', 'Lee Nails')
Out Lmks:['Central & Devon NB', 'Lee Nails']
Out Grounds: {'Central & Devon NB', 'Lee Nails'}
Placeholder Map: {'Central & Devon NB': 'a', 'Lee Nails': 'b'}
False

292
past_avoidance ['a', 'b'] Input utterance: until you have gone to Central & Devon NB, you can not go to Ruk Sushi & Thai
True Ground LTL: U ! ruk_sushi_&_thai central_&_devon_nb
Out Ground LTL: U central_&_devon_nb ruk_sushi_&_thai
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Ruk Sushi & Thai', 'Central & Devon NB')
Out Lmks:['Central & Devon NB', 'Ruk Sushi & Thai']
Out Grounds: {'Central & Devon NB', 'Ruk Sushi & Thai'}
Placeholder Map: {'Central & Devon NB': 'a', 'Ruk Sushi & Thai': 'b'}
False

293
past_avoidance ['a', 'b'] Input utterance: until you have gone to Kanellos Shoe Repair, you can not go to King Pho
True Ground LTL: U ! king_pho kanellos_shoe_repair
Out Ground LTL: U kanellos_shoe_repair king_pho
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('King Pho', 'Kanellos Shoe Repair')
Out Lmks:['King Pho', 'Kanellos Shoe Repair']
Out Grounds: {'King Pho', 'Kanellos Shoe Repair'}
Placeholder Map: {'King Pho': 'a', 'Kanellos Shoe Repair': 'b'}
False

294
past_avoidance ['a', 'b'] Input utterance: you can not go to Baird & Warner, until you go to Becker Roofing Company
True Ground LTL: U ! baird_&_warner becker_roofing_company
Out Ground LTL: & U ! baird_&_warner becker_roofing_company F baird_&_warner
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Baird & Warner', 'Becker Roofing Company')
Out Lmks:['Becker Roofing Company', 'Baird & Warner']
Out Grounds: {'Becker Roofing Company', 'Baird & Warner'}
Placeholder Map: {'Becker Roofing Company': 'a', 'Baird & Warner': 'b'}
False

295
past_avoidance ['a', 'b'] Input utterance: you can not go to Creativo! Academy, until you go to Ace Hardware
True Ground LTL: U ! creativo_academy ace_hardware
Out Ground LTL: & U ! creativo_academy ace_hardware F creativo_academy
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Creativo! Academy', 'Ace Hardware')
Out Lmks:['Creativo! Academy', 'Ace Hardware']
Out Grounds: {'Creativo! Academy', 'Ace Hardware'}
Placeholder Map: {'Creativo! Academy': 'a', 'Ace Hardware': 'b'}
False

296
past_avoidance ['a', 'b'] Input utterance: never go to Starbucks, until you see Ruk Sushi & Thai
True Ground LTL: U ! starbucks ruk_sushi_&_thai
Out Ground LTL: U starbucks ruk_sushi_&_thai
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Starbucks', 'Ruk Sushi & Thai')
Out Lmks:['Ruk Sushi & Thai', 'Starbucks']
Out Grounds: {'Ruk Sushi & Thai', 'Starbucks'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Starbucks': 'b'}
False

297
past_avoidance ['a', 'b'] Input utterance: never go to Baird & Warner, until you see Local Goods Chicago
True Ground LTL: U ! baird_&_warner local_goods_chicago
Out Ground LTL: U baird_&_warner local_goods_chicago
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Baird & Warner', 'Local Goods Chicago')
Out Lmks:['Local Goods Chicago', 'Baird & Warner']
Out Grounds: {'Local Goods Chicago', 'Baird & Warner'}
Placeholder Map: {'Local Goods Chicago': 'a', 'Baird & Warner': 'b'}
False

298
past_avoidance ['a', 'b'] Input utterance: you can not go to Currency Change, before North Branch Arts, happens
True Ground LTL: U ! currency_change north_branch_arts
Out Ground LTL: U north_branch_arts currency_change
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Currency Change', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Currency Change']
Out Grounds: {'North Branch Arts', 'Currency Change'}
Placeholder Map: {'North Branch Arts': 'a', 'Currency Change': 'b'}
False

299
past_avoidance ['a', 'b'] Input utterance: you can not go to Baird & Warner, before Kanellos Shoe Repair, happens
True Ground LTL: U ! baird_&_warner kanellos_shoe_repair
Out Ground LTL: U kanellos_shoe_repair baird_&_warner
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Baird & Warner', 'Kanellos Shoe Repair')
Out Lmks:['Kanellos Shoe Repair', 'Baird & Warner']
Out Grounds: {'Kanellos Shoe Repair', 'Baird & Warner'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'Baird & Warner': 'b'}
False

300
past_avoidance ['a', 'b'] Input utterance: you can only go to Kanellos Shoe Repair, after Ruk Sushi & Thai, is seen
True Ground LTL: U ! kanellos_shoe_repair ruk_sushi_&_thai
Out Ground LTL: G i ruk_sushi_&_thai X kanellos_shoe_repair
True Symbolic LTL: U ! a b
Out Symbolic LTL: G i b X a
True Lmks: ('Kanellos Shoe Repair', 'Ruk Sushi & Thai')
Out Lmks:['Kanellos Shoe Repair', 'Ruk Sushi & Thai']
Out Grounds: {'Kanellos Shoe Repair', 'Ruk Sushi & Thai'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'Ruk Sushi & Thai': 'b'}
False

301
past_avoidance ['a', 'b'] Input utterance: you can only go to Kanellos Shoe Repair, after Becker Roofing Company, is seen
True Ground LTL: U ! kanellos_shoe_repair becker_roofing_company
Out Ground LTL: G i becker_roofing_company X kanellos_shoe_repair
True Symbolic LTL: U ! a b
Out Symbolic LTL: G i b X a
True Lmks: ('Kanellos Shoe Repair', 'Becker Roofing Company')
Out Lmks:['Kanellos Shoe Repair', 'Becker Roofing Company']
Out Grounds: {'Kanellos Shoe Repair', 'Becker Roofing Company'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'Becker Roofing Company': 'b'}
False

302
past_avoidance ['a', 'b'] Input utterance: Central & Devon NB, must be observed before visiting My Sister's Closet
True Ground LTL: U ! my_sisters_closet central_&_devon_nb
Out Ground LTL: & U ! my_sisters_closet central_&_devon_nb F my_sisters_closet
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("My Sister's Closet", 'Central & Devon NB')
Out Lmks:['Central & Devon NB', "My Sister's Closet"]
Out Grounds: {'Central & Devon NB', "My Sister's Closet"}
Placeholder Map: {'Central & Devon NB': 'a', "My Sister's Closet": 'b'}
False

303
past_avoidance ['a', 'b'] Input utterance: US Post Office, must be observed before visiting Baird & Warner
True Ground LTL: U ! baird_&_warner us_post_office
Out Ground LTL: & U ! baird_&_warner us_post_office F baird_&_warner
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Baird & Warner', 'US Post Office')
Out Lmks:['US Post Office', 'Baird & Warner']
Out Grounds: {'US Post Office', 'Baird & Warner'}
Placeholder Map: {'US Post Office': 'a', 'Baird & Warner': 'b'}
False

304
past_avoidance ['a', 'b'] Input utterance: you can visit Ace Hardware, but only after you see Associated Bank
True Ground LTL: U ! ace_hardware associated_bank
Out Ground LTL: & U ! ace_hardware associated_bank F ace_hardware
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Ace Hardware', 'Associated Bank')
Out Lmks:['Associated Bank', 'Ace Hardware']
Out Grounds: {'Associated Bank', 'Ace Hardware'}
Placeholder Map: {'Associated Bank': 'a', 'Ace Hardware': 'b'}
False

305
past_avoidance ['a', 'b'] Input utterance: you can visit Currency Change, but only after you see Kanellos Shoe Repair
True Ground LTL: U ! currency_change kanellos_shoe_repair
Out Ground LTL: & U ! currency_change kanellos_shoe_repair F currency_change
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Currency Change', 'Kanellos Shoe Repair')
Out Lmks:['Kanellos Shoe Repair', 'Currency Change']
Out Grounds: {'Kanellos Shoe Repair', 'Currency Change'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'Currency Change': 'b'}
False

306
past_avoidance ['a', 'b'] Input utterance: Associated Bank, has to be observed prior to any visit to Central & Devon SB
True Ground LTL: U ! central_&_devon_sb associated_bank
Out Ground LTL: G e associated_bank F central_&_devon_sb
True Symbolic LTL: U ! a b
Out Symbolic LTL: G e a F b
True Lmks: ('Central & Devon SB', 'Associated Bank')
Out Lmks:['Associated Bank', 'Central & Devon SB']
Out Grounds: {'Associated Bank', 'Central & Devon SB'}
Placeholder Map: {'Associated Bank': 'a', 'Central & Devon SB': 'b'}
False

307
past_avoidance ['a', 'b'] Input utterance: Little Nest Care, has to be observed prior to any visit to US Post Office
True Ground LTL: U ! us_post_office little_nest_care
Out Ground LTL: & U ! us_post_office little_nest_care F us_post_office
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('US Post Office', 'Little Nest Care')
Out Lmks:['US Post Office', 'Little Nest Care']
Out Grounds: {'US Post Office', 'Little Nest Care'}
Placeholder Map: {'US Post Office': 'a', 'Little Nest Care': 'b'}
False

308
past_avoidance ['a', 'b'] Input utterance: make sure you see My Sister's Closet, before going to Terry's Place
True Ground LTL: U ! terrys_place my_sisters_closet
Out Ground LTL: & U ! terrys_place my_sisters_closet F terrys_place
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("Terry's Place", "My Sister's Closet")
Out Lmks:["My Sister's Closet", "Terry's Place"]
Out Grounds: {"My Sister's Closet", "Terry's Place"}
Placeholder Map: {"My Sister's Closet": 'a', "Terry's Place": 'b'}
False

309
past_avoidance ['a', 'b'] Input utterance: make sure you see Associated Bank, before going to My Sister's Closet
True Ground LTL: U ! my_sisters_closet associated_bank
Out Ground LTL: & U ! my_sisters_closet associated_bank F my_sisters_closet
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("My Sister's Closet", 'Associated Bank')
Out Lmks:['Associated Bank', "My Sister's Closet"]
Out Grounds: {'Associated Bank', "My Sister's Closet"}
Placeholder Map: {'Associated Bank': 'a', "My Sister's Closet": 'b'}
False

310
past_avoidance ['a', 'b'] Input utterance: you can not make any visit to Becker Roofing Company, when Edward Jones, remains unseen
True Ground LTL: U ! becker_roofing_company edward_jones
Out Ground LTL: U becker_roofing_company edward_jones
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Becker Roofing Company', 'Edward Jones')
Out Lmks:['Becker Roofing Company', 'Edward Jones']
Out Grounds: {'Becker Roofing Company', 'Edward Jones'}
Placeholder Map: {'Becker Roofing Company': 'a', 'Edward Jones': 'b'}
False

311
past_avoidance ['a', 'b'] Input utterance: you can not make any visit to Creativo! Academy, when US Post Office, remains unseen
True Ground LTL: U ! creativo_academy us_post_office
Out Ground LTL: U creativo_academy us_post_office
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Creativo! Academy', 'US Post Office')
Out Lmks:['Creativo! Academy', 'US Post Office']
Out Grounds: {'Creativo! Academy', 'US Post Office'}
Placeholder Map: {'Creativo! Academy': 'a', 'US Post Office': 'b'}
False

312
past_avoidance ['a', 'b'] Input utterance: do not visit Central & Devon NB, till you observe Currency Change
True Ground LTL: U ! central_&_devon_nb currency_change
Out Ground LTL: U central_&_devon_nb currency_change
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Central & Devon NB', 'Currency Change')
Out Lmks:['Central & Devon NB', 'Currency Change']
Out Grounds: {'Central & Devon NB', 'Currency Change'}
Placeholder Map: {'Central & Devon NB': 'a', 'Currency Change': 'b'}
False

313
past_avoidance ['a', 'b'] Input utterance: do not visit Ruk Sushi & Thai, till you observe Local Goods Chicago
True Ground LTL: U ! ruk_sushi_&_thai local_goods_chicago
Out Ground LTL: U ruk_sushi_&_thai local_goods_chicago
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Ruk Sushi & Thai', 'Local Goods Chicago')
Out Lmks:['Local Goods Chicago', 'Ruk Sushi & Thai']
Out Grounds: {'Ruk Sushi & Thai', 'Local Goods Chicago'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Local Goods Chicago': 'b'}
False

314
past_avoidance ['a', 'b'] Input utterance: seeing King Pho, unlocks Edgebrook Coffee Ship
True Ground LTL: U ! edgebrook_coffee_ship king_pho
Out Ground LTL: U edgebrook_coffee_ship king_pho
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Edgebrook Coffee Ship', 'King Pho')
Out Lmks:['King Pho', 'Edgebrook Coffee Ship']
Out Grounds: {'King Pho', 'Edgebrook Coffee Ship'}
Placeholder Map: {'King Pho': 'a', 'Edgebrook Coffee Ship': 'b'}
False

315
past_avoidance ['a', 'b'] Input utterance: seeing My Sister's Closet, unlocks Terry's Place
True Ground LTL: U ! terrys_place my_sisters_closet
Out Ground LTL: U terrys_place my_sisters_closet
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ("Terry's Place", "My Sister's Closet")
Out Lmks:["My Sister's Closet", "Terry's Place"]
Out Grounds: {"My Sister's Closet", "Terry's Place"}
Placeholder Map: {"My Sister's Closet": 'a', "Terry's Place": 'b'}
False

316
lower_restricted_avoidance ['h'] Input utterance: visit Edward Jones, at least five times
True Ground LTL: F & edward_jones U edward_jones & ! edward_jones U ! edward_jones F & edward_jones U edward_jones & ! edward_jones U ! edward_jones F & edward_jones U edward_jones & ! edward_jones U ! edward_jones F & edward_jones U edward_jones & ! edward_jones U ! edward_jones F edward_jones
Out Ground LTL: F & edward_jones U edward_jones & ! edward_jones U ! edward_jones F & edward_jones U edward_jones & ! edward_jones U ! edward_jones F & edward_jones U edward_jones & ! edward_jones U ! edward_jones F & edward_jones U edward_jones & ! edward_jones U ! edward_jones F edward_jones
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Edward Jones',)
Out Lmks:['Edward Jones']
Out Grounds: {'Edward Jones'}
Placeholder Map: {'Edward Jones': 'a'}
True

317
lower_restricted_avoidance ['h'] Input utterance: visit Central & Devon NB, at least five times
True Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
Out Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

318
lower_restricted_avoidance ['h'] Input utterance: go to Becker Roofing Company, at least five times
True Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
Out Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Becker Roofing Company',)
Out Lmks:['Becker Roofing Company']
Out Grounds: {'Becker Roofing Company'}
Placeholder Map: {'Becker Roofing Company': 'a'}
True

319
lower_restricted_avoidance ['h'] Input utterance: go to Central & Devon NB, at least five times
True Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
Out Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

320
lower_restricted_avoidance ['h'] Input utterance: make your way to Starbucks, at least five times
True Ground LTL: F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F starbucks
Out Ground LTL: F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F starbucks
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

321
lower_restricted_avoidance ['h'] Input utterance: make your way to Creativo! Academy, at least five times
True Ground LTL: F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F creativo_academy
Out Ground LTL: F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F creativo_academy
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Creativo! Academy',)
Out Lmks:['Creativo! Academy']
Out Grounds: {'Creativo! Academy'}
Placeholder Map: {'Creativo! Academy': 'a'}
True

322
lower_restricted_avoidance ['h'] Input utterance: you have to visit Central & Devon SB, at least five times
True Ground LTL: F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F central_&_devon_sb
Out Ground LTL: F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F central_&_devon_sb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon SB',)
Out Lmks:['Central & Devon SB']
Out Grounds: {'Central & Devon SB'}
Placeholder Map: {'Central & Devon SB': 'a'}
True

323
lower_restricted_avoidance ['h'] Input utterance: you have to visit Becker Roofing Company, at least five times
True Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
Out Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Becker Roofing Company',)
Out Lmks:['Becker Roofing Company']
Out Grounds: {'Becker Roofing Company'}
Placeholder Map: {'Becker Roofing Company': 'a'}
True

324
lower_restricted_avoidance ['h'] Input utterance: visit Central & Devon NB, at least five times or more
True Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
Out Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

325
lower_restricted_avoidance ['h'] Input utterance: visit Central & Devon NB, at least five times or more
True Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
Out Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

326
lower_restricted_avoidance ['h'] Input utterance: you can not visit Kanellos Shoe Repair, less than five times
True Ground LTL: F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F kanellos_shoe_repair
Out Ground LTL: F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F kanellos_shoe_repair
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Kanellos Shoe Repair',)
Out Lmks:['Kanellos Shoe Repair']
Out Grounds: {'Kanellos Shoe Repair'}
Placeholder Map: {'Kanellos Shoe Repair': 'a'}
True

327
lower_restricted_avoidance ['h'] Input utterance: you can not visit Domino's, less than five times
True Ground LTL: F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F dominos
Out Ground LTL: F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F dominos
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Domino's",)
Out Lmks:["Domino's"]
Out Grounds: {"Domino's"}
Placeholder Map: {"Domino's": 'a'}
True

328
lower_restricted_avoidance ['h'] Input utterance: never go to Becker Roofing Company, less than five times
True Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
Out Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Becker Roofing Company',)
Out Lmks:['Becker Roofing Company']
Out Grounds: {'Becker Roofing Company'}
Placeholder Map: {'Becker Roofing Company': 'a'}
True

329
lower_restricted_avoidance ['h'] Input utterance: never go to Domino's, less than five times
True Ground LTL: F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F dominos
Out Ground LTL: F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F dominos
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Domino's",)
Out Lmks:["Domino's"]
Out Grounds: {"Domino's"}
Placeholder Map: {"Domino's": 'a'}
True

330
lower_restricted_avoidance ['h'] Input utterance: you have to visit Creativo! Academy, five or more than five times
True Ground LTL: F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F creativo_academy
Out Ground LTL: F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F & creativo_academy U creativo_academy & ! creativo_academy U ! creativo_academy F creativo_academy
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Creativo! Academy',)
Out Lmks:['Creativo! Academy']
Out Grounds: {'Creativo! Academy'}
Placeholder Map: {'Creativo! Academy': 'a'}
True

331
lower_restricted_avoidance ['h'] Input utterance: you have to visit Domino's, five or more than five times
True Ground LTL: F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F dominos
Out Ground LTL: F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F dominos
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Domino's",)
Out Lmks:["Domino's"]
Out Grounds: {"Domino's"}
Placeholder Map: {"Domino's": 'a'}
True

332
lower_restricted_avoidance ['h'] Input utterance: your task is to go to Currency Change, five or more times
True Ground LTL: F & currency_change U currency_change & ! currency_change U ! currency_change F & currency_change U currency_change & ! currency_change U ! currency_change F & currency_change U currency_change & ! currency_change U ! currency_change F & currency_change U currency_change & ! currency_change U ! currency_change F currency_change
Out Ground LTL: F & currency_change U currency_change & ! currency_change U ! currency_change F & currency_change U currency_change & ! currency_change U ! currency_change F & currency_change U currency_change & ! currency_change U ! currency_change F & currency_change U currency_change & ! currency_change U ! currency_change F currency_change
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Currency Change',)
Out Lmks:['Currency Change']
Out Grounds: {'Currency Change'}
Placeholder Map: {'Currency Change': 'a'}
True

333
lower_restricted_avoidance ['h'] Input utterance: your task is to go to Baird & Warner, five or more times
True Ground LTL: F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F baird_&_warner
Out Ground LTL: F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F baird_&_warner
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Baird & Warner',)
Out Lmks:['Baird & Warner']
Out Grounds: {'Baird & Warner'}
Placeholder Map: {'Baird & Warner': 'a'}
True

334
lower_restricted_avoidance ['h'] Input utterance: do not visit Associated Bank, less than five times
True Ground LTL: F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F associated_bank
Out Ground LTL: F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F associated_bank
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Associated Bank',)
Out Lmks:['Associated Bank']
Out Grounds: {'Associated Bank'}
Placeholder Map: {'Associated Bank': 'a'}
True

335
lower_restricted_avoidance ['h'] Input utterance: do not visit Domino's, less than five times
True Ground LTL: F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F dominos
Out Ground LTL: F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F & dominos U dominos & ! dominos U ! dominos F dominos
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Domino's",)
Out Lmks:["Domino's"]
Out Grounds: {"Domino's"}
Placeholder Map: {"Domino's": 'a'}
True

336
lower_restricted_avoidance ['h'] Input utterance: make sure you visit Kanellos Shoe Repair, five or more times
True Ground LTL: F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F kanellos_shoe_repair
Out Ground LTL: F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F & kanellos_shoe_repair U kanellos_shoe_repair & ! kanellos_shoe_repair U ! kanellos_shoe_repair F kanellos_shoe_repair
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Kanellos Shoe Repair',)
Out Lmks:['Kanellos Shoe Repair']
Out Grounds: {'Kanellos Shoe Repair'}
Placeholder Map: {'Kanellos Shoe Repair': 'a'}
True

337
lower_restricted_avoidance ['h'] Input utterance: make sure you visit Terry's Place, five or more times
True Ground LTL: F & terrys_place U terrys_place & ! terrys_place U ! terrys_place F & terrys_place U terrys_place & ! terrys_place U ! terrys_place F & terrys_place U terrys_place & ! terrys_place U ! terrys_place F & terrys_place U terrys_place & ! terrys_place U ! terrys_place F terrys_place
Out Ground LTL: F & terrys_place U terrys_place & ! terrys_place U ! terrys_place F & terrys_place U terrys_place & ! terrys_place U ! terrys_place F & terrys_place U terrys_place & ! terrys_place U ! terrys_place F & terrys_place U terrys_place & ! terrys_place U ! terrys_place F terrys_place
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Terry's Place",)
Out Lmks:["Terry's Place"]
Out Grounds: {"Terry's Place"}
Placeholder Map: {"Terry's Place": 'a'}
True

338
lower_restricted_avoidance ['h'] Input utterance: you have to reach Becker Roofing Company, at least five times
True Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
Out Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Becker Roofing Company',)
Out Lmks:['Becker Roofing Company']
Out Grounds: {'Becker Roofing Company'}
Placeholder Map: {'Becker Roofing Company': 'a'}
True

339
lower_restricted_avoidance ['h'] Input utterance: you have to reach Starbucks, at least five times
True Ground LTL: F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F starbucks
Out Ground LTL: F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F starbucks
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

340
lower_restricted_avoidance ['h'] Input utterance: visit Central & Devon SB, equal or more than five times
True Ground LTL: F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F central_&_devon_sb
Out Ground LTL: F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F central_&_devon_sb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon SB',)
Out Lmks:['Central & Devon SB']
Out Grounds: {'Central & Devon SB'}
Placeholder Map: {'Central & Devon SB': 'a'}
True

341
lower_restricted_avoidance ['h'] Input utterance: visit Central & Devon NB, equal or more than five times
True Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
Out Ground LTL: F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F & central_&_devon_nb U central_&_devon_nb & ! central_&_devon_nb U ! central_&_devon_nb F central_&_devon_nb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

342
lower_restricted_avoidance ['h'] Input utterance: you have to go to Baird & Warner, five or more than five times
True Ground LTL: F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F baird_&_warner
Out Ground LTL: F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F baird_&_warner
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Baird & Warner',)
Out Lmks:['Baird & Warner']
Out Grounds: {'Baird & Warner'}
Placeholder Map: {'Baird & Warner': 'a'}
True

343
lower_restricted_avoidance ['h'] Input utterance: you have to go to Lee Nails, five or more than five times
True Ground LTL: F & lee_nails U lee_nails & ! lee_nails U ! lee_nails F & lee_nails U lee_nails & ! lee_nails U ! lee_nails F & lee_nails U lee_nails & ! lee_nails U ! lee_nails F & lee_nails U lee_nails & ! lee_nails U ! lee_nails F lee_nails
Out Ground LTL: F & lee_nails U lee_nails & ! lee_nails U ! lee_nails F & lee_nails U lee_nails & ! lee_nails U ! lee_nails F & lee_nails U lee_nails & ! lee_nails U ! lee_nails F & lee_nails U lee_nails & ! lee_nails U ! lee_nails F lee_nails
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Lee Nails',)
Out Lmks:['Lee Nails']
Out Grounds: {'Lee Nails'}
Placeholder Map: {'Lee Nails': 'a'}
True

344
lower_restricted_avoidance ['h'] Input utterance: Associated Bank, has to be visited at least five times
True Ground LTL: F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F associated_bank
Out Ground LTL: F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F & associated_bank U associated_bank & ! associated_bank U ! associated_bank F associated_bank
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Associated Bank',)
Out Lmks:['Associated Bank']
Out Grounds: {'Associated Bank'}
Placeholder Map: {'Associated Bank': 'a'}
True

345
lower_restricted_avoidance ['h'] Input utterance: Ruk Sushi & Thai, has to be visited at least five times
True Ground LTL: F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F ruk_sushi_&_thai
Out Ground LTL: F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F ruk_sushi_&_thai
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Ruk Sushi & Thai',)
Out Lmks:['Ruk Sushi & Thai']
Out Grounds: {'Ruk Sushi & Thai'}
Placeholder Map: {'Ruk Sushi & Thai': 'a'}
True

346
lower_restricted_avoidance ['h'] Input utterance: you must visit and then leave North Branch Arts, at least five times
True Ground LTL: F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F north_branch_arts
Out Ground LTL: F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F north_branch_arts
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('North Branch Arts',)
Out Lmks:['North Branch Arts']
Out Grounds: {'North Branch Arts'}
Placeholder Map: {'North Branch Arts': 'a'}
True

347
lower_restricted_avoidance ['h'] Input utterance: you must visit and then leave Starbucks, at least five times
True Ground LTL: F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F starbucks
Out Ground LTL: F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F starbucks
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

348
lower_restricted_avoidance ['h'] Input utterance: go to US Post Office, then leave US Post Office, at least five times
True Ground LTL: F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F us_post_office
Out Ground LTL: F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F us_post_office
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('US Post Office',)
Out Lmks:['US Post Office']
Out Grounds: {'US Post Office'}
Placeholder Map: {'US Post Office': 'a'}
True

349
lower_restricted_avoidance ['h'] Input utterance: go to Little Nest Care, then leave Little Nest Care, at least five times
True Ground LTL: F & little_nest_care U little_nest_care & ! little_nest_care U ! little_nest_care F & little_nest_care U little_nest_care & ! little_nest_care U ! little_nest_care F & little_nest_care U little_nest_care & ! little_nest_care U ! little_nest_care F & little_nest_care U little_nest_care & ! little_nest_care U ! little_nest_care F little_nest_care
Out Ground LTL: F & little_nest_care U little_nest_care & ! little_nest_care U ! little_nest_care F & little_nest_care U little_nest_care & ! little_nest_care U ! little_nest_care F & little_nest_care U little_nest_care & ! little_nest_care U ! little_nest_care F & little_nest_care U little_nest_care & ! little_nest_care U ! little_nest_care F little_nest_care
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Little Nest Care',)
Out Lmks:['Little Nest Care']
Out Grounds: {'Little Nest Care'}
Placeholder Map: {'Little Nest Care': 'a'}
True

350
lower_restricted_avoidance ['h'] Input utterance: you must pass through Central & Devon SB, on at least five separate occasions
True Ground LTL: F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F central_&_devon_sb
Out Ground LTL: F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F central_&_devon_sb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon SB',)
Out Lmks:['Central & Devon SB']
Out Grounds: {'Central & Devon SB'}
Placeholder Map: {'Central & Devon SB': 'a'}
True

351
lower_restricted_avoidance ['h'] Input utterance: you must pass through Ruk Sushi & Thai, on at least five separate occasions
True Ground LTL: F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F ruk_sushi_&_thai
Out Ground LTL: F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F ruk_sushi_&_thai
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Ruk Sushi & Thai',)
Out Lmks:['Ruk Sushi & Thai']
Out Grounds: {'Ruk Sushi & Thai'}
Placeholder Map: {'Ruk Sushi & Thai': 'a'}
True

352
lower_restricted_avoidance ['h'] Input utterance: the minimum number of times you must visit Becker Roofing Company, is five
True Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
Out Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Becker Roofing Company',)
Out Lmks:['Becker Roofing Company']
Out Grounds: {'Becker Roofing Company'}
Placeholder Map: {'Becker Roofing Company': 'a'}
True

353
lower_restricted_avoidance ['h'] Input utterance: the minimum number of times you must visit Becker Roofing Company, is five
True Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
Out Ground LTL: F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F & becker_roofing_company U becker_roofing_company & ! becker_roofing_company U ! becker_roofing_company F becker_roofing_company
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Becker Roofing Company',)
Out Lmks:['Becker Roofing Company']
Out Grounds: {'Becker Roofing Company'}
Placeholder Map: {'Becker Roofing Company': 'a'}
True

354
lower_restricted_avoidance ['h'] Input utterance: reach North Branch Arts, then leave North Branch Arts, and repeat this at least four more times
True Ground LTL: F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F north_branch_arts
Out Ground LTL: F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F & north_branch_arts U north_branch_arts & ! north_branch_arts U ! north_branch_arts F north_branch_arts
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('North Branch Arts',)
Out Lmks:['North Branch Arts']
Out Grounds: {'North Branch Arts'}
Placeholder Map: {'North Branch Arts': 'a'}
False

355
lower_restricted_avoidance ['h'] Input utterance: reach Ruk Sushi & Thai, then leave Ruk Sushi & Thai, and repeat this at least four more times
True Ground LTL: F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F ruk_sushi_&_thai
Out Ground LTL: F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F & ruk_sushi_&_thai U ruk_sushi_&_thai & ! ruk_sushi_&_thai U ! ruk_sushi_&_thai F ruk_sushi_&_thai
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Ruk Sushi & Thai',)
Out Lmks:['Ruk Sushi & Thai']
Out Grounds: {'Ruk Sushi & Thai'}
Placeholder Map: {'Ruk Sushi & Thai': 'a'}
False

356
lower_restricted_avoidance ['h'] Input utterance: you can not complete the task without visiting King Pho, on five separate occasions
True Ground LTL: F & king_pho U king_pho & ! king_pho U ! king_pho F & king_pho U king_pho & ! king_pho U ! king_pho F & king_pho U king_pho & ! king_pho U ! king_pho F & king_pho U king_pho & ! king_pho U ! king_pho F king_pho
Out Ground LTL: F & king_pho U king_pho & ! king_pho U ! king_pho F & king_pho U king_pho & ! king_pho U ! king_pho F & king_pho U king_pho & ! king_pho U ! king_pho F & king_pho U king_pho & ! king_pho U ! king_pho F king_pho
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('King Pho',)
Out Lmks:['King Pho']
Out Grounds: {'King Pho'}
Placeholder Map: {'King Pho': 'a'}
True

357
lower_restricted_avoidance ['h'] Input utterance: you can not complete the task without visiting Ace Hardware, on five separate occasions
True Ground LTL: F & ace_hardware U ace_hardware & ! ace_hardware U ! ace_hardware F & ace_hardware U ace_hardware & ! ace_hardware U ! ace_hardware F & ace_hardware U ace_hardware & ! ace_hardware U ! ace_hardware F & ace_hardware U ace_hardware & ! ace_hardware U ! ace_hardware F ace_hardware
Out Ground LTL: F & ace_hardware U ace_hardware & ! ace_hardware U ! ace_hardware F & ace_hardware U ace_hardware & ! ace_hardware U ! ace_hardware F & ace_hardware U ace_hardware & ! ace_hardware U ! ace_hardware F & ace_hardware U ace_hardware & ! ace_hardware U ! ace_hardware F ace_hardware
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Ace Hardware',)
Out Lmks:['Ace Hardware']
Out Grounds: {'Ace Hardware'}
Placeholder Map: {'Ace Hardware': 'a'}
True

358
lower_restricted_avoidance ['h'] Input utterance: do not visit Central & Devon SB, any fewer than five separate times
True Ground LTL: F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F central_&_devon_sb
Out Ground LTL: F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F & central_&_devon_sb U central_&_devon_sb & ! central_&_devon_sb U ! central_&_devon_sb F central_&_devon_sb
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central & Devon SB',)
Out Lmks:['Central & Devon SB']
Out Grounds: {'Central & Devon SB'}
Placeholder Map: {'Central & Devon SB': 'a'}
True

359
lower_restricted_avoidance ['h'] Input utterance: do not visit US Post Office, any fewer than five separate times
True Ground LTL: F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F us_post_office
Out Ground LTL: F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F & us_post_office U us_post_office & ! us_post_office U ! us_post_office F us_post_office
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('US Post Office',)
Out Lmks:['US Post Office']
Out Grounds: {'US Post Office'}
Placeholder Map: {'US Post Office': 'a'}
True

360
lower_restricted_avoidance ['h'] Input utterance: ensure that you have at least five separate times where you reach Local Goods Chicago
True Ground LTL: F & local_goods_chicago U local_goods_chicago & ! local_goods_chicago U ! local_goods_chicago F & local_goods_chicago U local_goods_chicago & ! local_goods_chicago U ! local_goods_chicago F & local_goods_chicago U local_goods_chicago & ! local_goods_chicago U ! local_goods_chicago F & local_goods_chicago U local_goods_chicago & ! local_goods_chicago U ! local_goods_chicago F local_goods_chicago
Out Ground LTL: F & local_goods_chicago U local_goods_chicago & ! local_goods_chicago U ! local_goods_chicago F & local_goods_chicago U local_goods_chicago & ! local_goods_chicago U ! local_goods_chicago F & local_goods_chicago U local_goods_chicago & ! local_goods_chicago U ! local_goods_chicago F & local_goods_chicago U local_goods_chicago & ! local_goods_chicago U ! local_goods_chicago F local_goods_chicago
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Local Goods Chicago',)
Out Lmks:['Local Goods Chicago']
Out Grounds: {'Local Goods Chicago'}
Placeholder Map: {'Local Goods Chicago': 'a'}
True

361
lower_restricted_avoidance ['h'] Input utterance: ensure that you have at least five separate times where you reach Baird & Warner
True Ground LTL: F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F baird_&_warner
Out Ground LTL: F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F & baird_&_warner U baird_&_warner & ! baird_&_warner U ! baird_&_warner F baird_&_warner
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Baird & Warner',)
Out Lmks:['Baird & Warner']
Out Grounds: {'Baird & Warner'}
Placeholder Map: {'Baird & Warner': 'a'}
True

362
exact_restricted_avoidance ['c'] Input utterance: visit Baird & Warner, exactly three times
True Ground LTL: M & baird_&_warner F & ! baird_&_warner F & baird_&_warner F & ! baird_&_warner F baird_&_warner | ! baird_&_warner G | baird_&_warner G | ! baird_&_warner G | baird_&_warner G | ! baird_&_warner G | baird_&_warner G ! baird_&_warner
Out Ground LTL: M & baird_&_warner F & ! baird_&_warner F & baird_&_warner F & ! baird_&_warner F baird_&_warner | ! baird_&_warner G | baird_&_warner G | ! baird_&_warner G | baird_&_warner G | ! baird_&_warner G | baird_&_warner G ! baird_&_warner
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Baird & Warner',)
Out Lmks:['Baird & Warner']
Out Grounds: {'Baird & Warner'}
Placeholder Map: {'Baird & Warner': 'a'}
True

363
exact_restricted_avoidance ['c'] Input utterance: visit Starbucks, exactly three times
True Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
Out Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

364
exact_restricted_avoidance ['c'] Input utterance: go to Central & Devon NB, exactly three times
True Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
Out Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

365
exact_restricted_avoidance ['c'] Input utterance: go to Central & Devon NB, exactly three times
True Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
Out Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

366
exact_restricted_avoidance ['c'] Input utterance: make your way to Edward Jones, exactly three times
True Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
Out Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Edward Jones',)
Out Lmks:['Edward Jones']
Out Grounds: {'Edward Jones'}
Placeholder Map: {'Edward Jones': 'a'}
True

367
exact_restricted_avoidance ['c'] Input utterance: make your way to Central & Devon NB, exactly three times
True Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
Out Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

368
exact_restricted_avoidance ['c'] Input utterance: you have to visit Baird & Warner, exactly three times
True Ground LTL: M & baird_&_warner F & ! baird_&_warner F & baird_&_warner F & ! baird_&_warner F baird_&_warner | ! baird_&_warner G | baird_&_warner G | ! baird_&_warner G | baird_&_warner G | ! baird_&_warner G | baird_&_warner G ! baird_&_warner
Out Ground LTL: M & baird_&_warner F & ! baird_&_warner F & baird_&_warner F & ! baird_&_warner F baird_&_warner | ! baird_&_warner G | baird_&_warner G | ! baird_&_warner G | baird_&_warner G | ! baird_&_warner G | baird_&_warner G ! baird_&_warner
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Baird & Warner',)
Out Lmks:['Baird & Warner']
Out Grounds: {'Baird & Warner'}
Placeholder Map: {'Baird & Warner': 'a'}
True

369
exact_restricted_avoidance ['c'] Input utterance: you have to visit Central & Devon NB, exactly three times
True Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
Out Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

370
exact_restricted_avoidance ['c'] Input utterance: you must reach Edward Jones, exactly three times
True Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
Out Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Edward Jones',)
Out Lmks:['Edward Jones']
Out Grounds: {'Edward Jones'}
Placeholder Map: {'Edward Jones': 'a'}
True

371
exact_restricted_avoidance ['c'] Input utterance: you must reach North Branch Arts, exactly three times
True Ground LTL: M & north_branch_arts F & ! north_branch_arts F & north_branch_arts F & ! north_branch_arts F north_branch_arts | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G ! north_branch_arts
Out Ground LTL: M & north_branch_arts F & ! north_branch_arts F & north_branch_arts F & ! north_branch_arts F north_branch_arts | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G ! north_branch_arts
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('North Branch Arts',)
Out Lmks:['North Branch Arts']
Out Grounds: {'North Branch Arts'}
Placeholder Map: {'North Branch Arts': 'a'}
True

372
exact_restricted_avoidance ['c'] Input utterance: navigate to Becker Roofing Company, exactly three times
True Ground LTL: M & becker_roofing_company F & ! becker_roofing_company F & becker_roofing_company F & ! becker_roofing_company F becker_roofing_company | ! becker_roofing_company G | becker_roofing_company G | ! becker_roofing_company G | becker_roofing_company G | ! becker_roofing_company G | becker_roofing_company G ! becker_roofing_company
Out Ground LTL: M & becker_roofing_company F & ! becker_roofing_company F & becker_roofing_company F & ! becker_roofing_company F becker_roofing_company | ! becker_roofing_company G | becker_roofing_company G | ! becker_roofing_company G | becker_roofing_company G | ! becker_roofing_company G | becker_roofing_company G ! becker_roofing_company
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Becker Roofing Company',)
Out Lmks:['Becker Roofing Company']
Out Grounds: {'Becker Roofing Company'}
Placeholder Map: {'Becker Roofing Company': 'a'}
True

373
exact_restricted_avoidance ['c'] Input utterance: navigate to Kanellos Shoe Repair, exactly three times
True Ground LTL: M & kanellos_shoe_repair F & ! kanellos_shoe_repair F & kanellos_shoe_repair F & ! kanellos_shoe_repair F kanellos_shoe_repair | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G ! kanellos_shoe_repair
Out Ground LTL: M & kanellos_shoe_repair F & ! kanellos_shoe_repair F & kanellos_shoe_repair F & ! kanellos_shoe_repair F kanellos_shoe_repair | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G ! kanellos_shoe_repair
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Kanellos Shoe Repair',)
Out Lmks:['Kanellos Shoe Repair']
Out Grounds: {'Kanellos Shoe Repair'}
Placeholder Map: {'Kanellos Shoe Repair': 'a'}
True

374
exact_restricted_avoidance ['c'] Input utterance: visit North Branch Arts, exactly three times no more no less
True Ground LTL: M & north_branch_arts F & ! north_branch_arts F & north_branch_arts F & ! north_branch_arts F north_branch_arts | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G ! north_branch_arts
Out Ground LTL: M & north_branch_arts F & ! north_branch_arts F & north_branch_arts F & ! north_branch_arts F north_branch_arts | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G ! north_branch_arts
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('North Branch Arts',)
Out Lmks:['North Branch Arts']
Out Grounds: {'North Branch Arts'}
Placeholder Map: {'North Branch Arts': 'a'}
True

375
exact_restricted_avoidance ['c'] Input utterance: visit Kanellos Shoe Repair, exactly three times no more no less
True Ground LTL: M & kanellos_shoe_repair F & ! kanellos_shoe_repair F & kanellos_shoe_repair F & ! kanellos_shoe_repair F kanellos_shoe_repair | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G ! kanellos_shoe_repair
Out Ground LTL: M & kanellos_shoe_repair F & ! kanellos_shoe_repair F & kanellos_shoe_repair F & ! kanellos_shoe_repair F kanellos_shoe_repair | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G ! kanellos_shoe_repair
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Kanellos Shoe Repair',)
Out Lmks:['Kanellos Shoe Repair']
Out Grounds: {'Kanellos Shoe Repair'}
Placeholder Map: {'Kanellos Shoe Repair': 'a'}
True

376
exact_restricted_avoidance ['c'] Input utterance: you have to go to US Post Office, and you can not go there more or less than three times
True Ground LTL: M & us_post_office F & ! us_post_office F & us_post_office F & ! us_post_office F us_post_office | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G ! us_post_office
Out Ground LTL: M & us_post_office F & ! us_post_office F & us_post_office F & ! us_post_office F us_post_office | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G ! us_post_office
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('US Post Office',)
Out Lmks:['US Post Office']
Out Grounds: {'US Post Office'}
Placeholder Map: {'US Post Office': 'a'}
True

377
exact_restricted_avoidance ['c'] Input utterance: you have to go to My Sister's Closet, and you can not go there more or less than three times
True Ground LTL: M & my_sisters_closet F & ! my_sisters_closet F & my_sisters_closet F & ! my_sisters_closet F my_sisters_closet | ! my_sisters_closet G | my_sisters_closet G | ! my_sisters_closet G | my_sisters_closet G | ! my_sisters_closet G | my_sisters_closet G ! my_sisters_closet
Out Ground LTL: M & my_sisters_closet F & ! my_sisters_closet F & my_sisters_closet F & ! my_sisters_closet F my_sisters_closet | ! my_sisters_closet G | my_sisters_closet G | ! my_sisters_closet G | my_sisters_closet G | ! my_sisters_closet G | my_sisters_closet G ! my_sisters_closet
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("My Sister's Closet",)
Out Lmks:["My Sister's Closet"]
Out Grounds: {"My Sister's Closet"}
Placeholder Map: {"My Sister's Closet": 'a'}
True

378
exact_restricted_avoidance ['c'] Input utterance: go to King Pho, more or less than three times is prohibited
True Ground LTL: M & king_pho F & ! king_pho F & king_pho F & ! king_pho F king_pho | ! king_pho G | king_pho G | ! king_pho G | king_pho G | ! king_pho G | king_pho G ! king_pho
Out Ground LTL: M & king_pho F & ! king_pho F & king_pho F & ! king_pho F king_pho | ! king_pho G | king_pho G | ! king_pho G | king_pho G | ! king_pho G | king_pho G ! king_pho
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('King Pho',)
Out Lmks:['King Pho']
Out Grounds: {'King Pho'}
Placeholder Map: {'King Pho': 'a'}
True

379
exact_restricted_avoidance ['c'] Input utterance: go to Starbucks, more or less than three times is prohibited
True Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
Out Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

380
exact_restricted_avoidance ['c'] Input utterance: go to Edward Jones, three times and do not visit it anymore
True Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
Out Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Edward Jones',)
Out Lmks:['Edward Jones']
Out Grounds: {'Edward Jones'}
Placeholder Map: {'Edward Jones': 'a'}
True

381
exact_restricted_avoidance ['c'] Input utterance: go to Domino's, three times and do not visit it anymore
True Ground LTL: M & dominos F & ! dominos F & dominos F & ! dominos F dominos | ! dominos G | dominos G | ! dominos G | dominos G | ! dominos G | dominos G ! dominos
Out Ground LTL: M & dominos F & ! dominos F & dominos F & ! dominos F dominos | ! dominos G | dominos G | ! dominos G | dominos G | ! dominos G | dominos G ! dominos
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Domino's",)
Out Lmks:["Domino's"]
Out Grounds: {"Domino's"}
Placeholder Map: {"Domino's": 'a'}
True

382
exact_restricted_avoidance ['c'] Input utterance: you must visit Edward Jones, exactly three times
True Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
Out Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Edward Jones',)
Out Lmks:['Edward Jones']
Out Grounds: {'Edward Jones'}
Placeholder Map: {'Edward Jones': 'a'}
True

383
exact_restricted_avoidance ['c'] Input utterance: you must visit Central & Devon NB, exactly three times
True Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
Out Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

384
exact_restricted_avoidance ['c'] Input utterance: visit King Pho, three times and never revisit it again
True Ground LTL: M & king_pho F & ! king_pho F & king_pho F & ! king_pho F king_pho | ! king_pho G | king_pho G | ! king_pho G | king_pho G | ! king_pho G | king_pho G ! king_pho
Out Ground LTL: M & king_pho F & ! king_pho F & king_pho F & ! king_pho F king_pho | ! king_pho G | king_pho G | ! king_pho G | king_pho G | ! king_pho G | king_pho G ! king_pho
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('King Pho',)
Out Lmks:['King Pho']
Out Grounds: {'King Pho'}
Placeholder Map: {'King Pho': 'a'}
True

385
exact_restricted_avoidance ['c'] Input utterance: visit My Sister's Closet, three times and never revisit it again
True Ground LTL: M & my_sisters_closet F & ! my_sisters_closet F & my_sisters_closet F & ! my_sisters_closet F my_sisters_closet | ! my_sisters_closet G | my_sisters_closet G | ! my_sisters_closet G | my_sisters_closet G | ! my_sisters_closet G | my_sisters_closet G ! my_sisters_closet
Out Ground LTL: M & my_sisters_closet F & ! my_sisters_closet F & my_sisters_closet F & ! my_sisters_closet F my_sisters_closet | ! my_sisters_closet G | my_sisters_closet G | ! my_sisters_closet G | my_sisters_closet G | ! my_sisters_closet G | my_sisters_closet G ! my_sisters_closet
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("My Sister's Closet",)
Out Lmks:["My Sister's Closet"]
Out Grounds: {"My Sister's Closet"}
Placeholder Map: {"My Sister's Closet": 'a'}
True

386
exact_restricted_avoidance ['c'] Input utterance: you must go to Lee Nails, exactly three times
True Ground LTL: M & lee_nails F & ! lee_nails F & lee_nails F & ! lee_nails F lee_nails | ! lee_nails G | lee_nails G | ! lee_nails G | lee_nails G | ! lee_nails G | lee_nails G ! lee_nails
Out Ground LTL: M & lee_nails F & ! lee_nails F & lee_nails F & ! lee_nails F lee_nails | ! lee_nails G | lee_nails G | ! lee_nails G | lee_nails G | ! lee_nails G | lee_nails G ! lee_nails
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Lee Nails',)
Out Lmks:['Lee Nails']
Out Grounds: {'Lee Nails'}
Placeholder Map: {'Lee Nails': 'a'}
True

387
exact_restricted_avoidance ['c'] Input utterance: you must go to Local Goods Chicago, exactly three times
True Ground LTL: M & local_goods_chicago F & ! local_goods_chicago F & local_goods_chicago F & ! local_goods_chicago F local_goods_chicago | ! local_goods_chicago G | local_goods_chicago G | ! local_goods_chicago G | local_goods_chicago G | ! local_goods_chicago G | local_goods_chicago G ! local_goods_chicago
Out Ground LTL: M & local_goods_chicago F & ! local_goods_chicago F & local_goods_chicago F & ! local_goods_chicago F local_goods_chicago | ! local_goods_chicago G | local_goods_chicago G | ! local_goods_chicago G | local_goods_chicago G | ! local_goods_chicago G | local_goods_chicago G ! local_goods_chicago
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Local Goods Chicago',)
Out Lmks:['Local Goods Chicago']
Out Grounds: {'Local Goods Chicago'}
Placeholder Map: {'Local Goods Chicago': 'a'}
True

388
exact_restricted_avoidance ['c'] Input utterance: visit Associated Bank, three times and then stop visiting it anymore
True Ground LTL: M & associated_bank F & ! associated_bank F & associated_bank F & ! associated_bank F associated_bank | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G ! associated_bank
Out Ground LTL: M & associated_bank F & ! associated_bank F & associated_bank F & ! associated_bank F associated_bank | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G ! associated_bank
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Associated Bank',)
Out Lmks:['Associated Bank']
Out Grounds: {'Associated Bank'}
Placeholder Map: {'Associated Bank': 'a'}
True

389
exact_restricted_avoidance ['c'] Input utterance: visit Terry's Place, three times and then stop visiting it anymore
True Ground LTL: M & terrys_place F & ! terrys_place F & terrys_place F & ! terrys_place F terrys_place | ! terrys_place G | terrys_place G | ! terrys_place G | terrys_place G | ! terrys_place G | terrys_place G ! terrys_place
Out Ground LTL: M & terrys_place F & ! terrys_place F & terrys_place F & ! terrys_place F terrys_place | ! terrys_place G | terrys_place G | ! terrys_place G | terrys_place G | ! terrys_place G | terrys_place G ! terrys_place
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Terry's Place",)
Out Lmks:["Terry's Place"]
Out Grounds: {"Terry's Place"}
Placeholder Map: {"Terry's Place": 'a'}
True

390
exact_restricted_avoidance ['c'] Input utterance: you are required to visit Lee Nails, on exactly three separate instances
True Ground LTL: M & lee_nails F & ! lee_nails F & lee_nails F & ! lee_nails F lee_nails | ! lee_nails G | lee_nails G | ! lee_nails G | lee_nails G | ! lee_nails G | lee_nails G ! lee_nails
Out Ground LTL: M & lee_nails F & ! lee_nails F & lee_nails F lee_nails | ! lee_nails G | lee_nails G | ! lee_nails G | lee_nails G | ! lee_nails G | lee_nails G ! lee_nails
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Lee Nails',)
Out Lmks:['Lee Nails']
Out Grounds: {'Lee Nails'}
Placeholder Map: {'Lee Nails': 'a'}
False

391
exact_restricted_avoidance ['c'] Input utterance: you are required to visit Kanellos Shoe Repair, on exactly three separate instances
True Ground LTL: M & kanellos_shoe_repair F & ! kanellos_shoe_repair F & kanellos_shoe_repair F & ! kanellos_shoe_repair F kanellos_shoe_repair | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G ! kanellos_shoe_repair
Out Ground LTL: M & kanellos_shoe_repair F & ! kanellos_shoe_repair F & kanellos_shoe_repair F kanellos_shoe_repair | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G | ! kanellos_shoe_repair G | kanellos_shoe_repair G ! kanellos_shoe_repair
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Kanellos Shoe Repair',)
Out Lmks:['Kanellos Shoe Repair']
Out Grounds: {'Kanellos Shoe Repair'}
Placeholder Map: {'Kanellos Shoe Repair': 'a'}
False

392
exact_restricted_avoidance ['c'] Input utterance: the required number of separate visits to Terry's Place, is exactly three
True Ground LTL: M & terrys_place F & ! terrys_place F & terrys_place F & ! terrys_place F terrys_place | ! terrys_place G | terrys_place G | ! terrys_place G | terrys_place G | ! terrys_place G | terrys_place G ! terrys_place
Out Ground LTL: M & terrys_place F & ! terrys_place F & terrys_place F & ! terrys_place F terrys_place | ! terrys_place G | terrys_place G | ! terrys_place G | terrys_place G | ! terrys_place G | terrys_place G ! terrys_place
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Terry's Place",)
Out Lmks:["Terry's Place"]
Out Grounds: {"Terry's Place"}
Placeholder Map: {"Terry's Place": 'a'}
True

393
exact_restricted_avoidance ['c'] Input utterance: the required number of separate visits to Edgebrook Coffee Ship, is exactly three
True Ground LTL: M & edgebrook_coffee_ship F & ! edgebrook_coffee_ship F & edgebrook_coffee_ship F & ! edgebrook_coffee_ship F edgebrook_coffee_ship | ! edgebrook_coffee_ship G | edgebrook_coffee_ship G | ! edgebrook_coffee_ship G | edgebrook_coffee_ship G | ! edgebrook_coffee_ship G | edgebrook_coffee_ship G ! edgebrook_coffee_ship
Out Ground LTL: M & edgebrook_coffee_ship F & ! edgebrook_coffee_ship F & edgebrook_coffee_ship F & ! edgebrook_coffee_ship F edgebrook_coffee_ship | ! edgebrook_coffee_ship G | edgebrook_coffee_ship G | ! edgebrook_coffee_ship G | edgebrook_coffee_ship G | ! edgebrook_coffee_ship G | edgebrook_coffee_ship G ! edgebrook_coffee_ship
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Edgebrook Coffee Ship',)
Out Lmks:['Edgebrook Coffee Ship']
Out Grounds: {'Edgebrook Coffee Ship'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a'}
True

394
exact_restricted_avoidance ['c'] Input utterance: visit King Pho, exactly three separate times
True Ground LTL: M & king_pho F & ! king_pho F & king_pho F & ! king_pho F king_pho | ! king_pho G | king_pho G | ! king_pho G | king_pho G | ! king_pho G | king_pho G ! king_pho
Out Ground LTL: M & king_pho F & ! king_pho F & king_pho F & ! king_pho F king_pho | ! king_pho G | king_pho G | ! king_pho G | king_pho G | ! king_pho G | king_pho G ! king_pho
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('King Pho',)
Out Lmks:['King Pho']
Out Grounds: {'King Pho'}
Placeholder Map: {'King Pho': 'a'}
True

395
exact_restricted_avoidance ['c'] Input utterance: visit North Branch Arts, exactly three separate times
True Ground LTL: M & north_branch_arts F & ! north_branch_arts F & north_branch_arts F & ! north_branch_arts F north_branch_arts | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G ! north_branch_arts
Out Ground LTL: M & north_branch_arts F & ! north_branch_arts F & north_branch_arts F & ! north_branch_arts F north_branch_arts | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G | ! north_branch_arts G | north_branch_arts G ! north_branch_arts
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('North Branch Arts',)
Out Lmks:['North Branch Arts']
Out Grounds: {'North Branch Arts'}
Placeholder Map: {'North Branch Arts': 'a'}
True

396
exact_restricted_avoidance ['c'] Input utterance: pass through US Post Office, exactly three times
True Ground LTL: M & us_post_office F & ! us_post_office F & us_post_office F & ! us_post_office F us_post_office | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G ! us_post_office
Out Ground LTL: M & us_post_office F & ! us_post_office F & us_post_office F & ! us_post_office F us_post_office | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G ! us_post_office
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('US Post Office',)
Out Lmks:['US Post Office']
Out Grounds: {'US Post Office'}
Placeholder Map: {'US Post Office': 'a'}
True

397
exact_restricted_avoidance ['c'] Input utterance: pass through Domino's, exactly three times
True Ground LTL: M & dominos F & ! dominos F & dominos F & ! dominos F dominos | ! dominos G | dominos G | ! dominos G | dominos G | ! dominos G | dominos G ! dominos
Out Ground LTL: M & dominos F & ! dominos F & dominos F & ! dominos F dominos | ! dominos G | dominos G | ! dominos G | dominos G | ! dominos G | dominos G ! dominos
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Domino's",)
Out Lmks:["Domino's"]
Out Grounds: {"Domino's"}
Placeholder Map: {"Domino's": 'a'}
True

398
exact_restricted_avoidance ['c'] Input utterance: go to Associated Bank, then leave Associated Bank, and then repeat this exactly two more times
True Ground LTL: M & associated_bank F & ! associated_bank F & associated_bank F & ! associated_bank F associated_bank | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G ! associated_bank
Out Ground LTL: M & associated_bank F & ! associated_bank F & associated_bank F & ! associated_bank F & associated_bank F & ! associated_bank F associated_bank | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G | ! associated_bank G | associated_bank G ! associated_bank
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Associated Bank',)
Out Lmks:['Associated Bank']
Out Grounds: {'Associated Bank'}
Placeholder Map: {'Associated Bank': 'a'}
False

399
exact_restricted_avoidance ['c'] Input utterance: go to Little Nest Care, then leave Little Nest Care, and then repeat this exactly two more times
True Ground LTL: M & little_nest_care F & ! little_nest_care F & little_nest_care F & ! little_nest_care F little_nest_care | ! little_nest_care G | little_nest_care G | ! little_nest_care G | little_nest_care G | ! little_nest_care G | little_nest_care G ! little_nest_care
Out Ground LTL: M & little_nest_care F & ! little_nest_care F & little_nest_care F & ! little_nest_care F & little_nest_care F & ! little_nest_care F little_nest_care | ! little_nest_care G | little_nest_care G | ! little_nest_care G | little_nest_care G | ! little_nest_care G | little_nest_care G | ! little_nest_care G | little_nest_care G ! little_nest_care
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Little Nest Care',)
Out Lmks:['Little Nest Care']
Out Grounds: {'Little Nest Care'}
Placeholder Map: {'Little Nest Care': 'a'}
False

400
exact_restricted_avoidance ['c'] Input utterance: make sure that you have exactly three separate visits to Edward Jones
True Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
Out Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Edward Jones',)
Out Lmks:['Edward Jones']
Out Grounds: {'Edward Jones'}
Placeholder Map: {'Edward Jones': 'a'}
True

401
exact_restricted_avoidance ['c'] Input utterance: make sure that you have exactly three separate visits to Central & Devon NB
True Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
Out Ground LTL: M & central_&_devon_nb F & ! central_&_devon_nb F & central_&_devon_nb F & ! central_&_devon_nb F central_&_devon_nb | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G | ! central_&_devon_nb G | central_&_devon_nb G ! central_&_devon_nb
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Central & Devon NB',)
Out Lmks:['Central & Devon NB']
Out Grounds: {'Central & Devon NB'}
Placeholder Map: {'Central & Devon NB': 'a'}
True

402
exact_restricted_avoidance ['c'] Input utterance: do not exceed or fall short on three separate visits to Edward Jones
True Ground LTL: M & edward_jones F & ! edward_jones F & edward_jones F & ! edward_jones F edward_jones | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G | ! edward_jones G | edward_jones G ! edward_jones
Out Ground LTL: & & U ! edward_jones U edward_jones & U ! edward_jones U edward_jones & U ! edward_jones U edward_jones F edward_jones
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: & & U ! a U a & U ! a U a & U ! a U a F a
True Lmks: ('Edward Jones',)
Out Lmks:['Edward Jones']
Out Grounds: {'Edward Jones'}
Placeholder Map: {'Edward Jones': 'a'}
Syntax Error

403
exact_restricted_avoidance ['c'] Input utterance: do not exceed or fall short on three separate visits to US Post Office
True Ground LTL: M & us_post_office F & ! us_post_office F & us_post_office F & ! us_post_office F us_post_office | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G | ! us_post_office G | us_post_office G ! us_post_office
Out Ground LTL: & & U ! us_post_office U us_post_office & U ! us_post_office U us_post_office & U ! us_post_office U us_post_office F us_post_office
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: & & U ! a U a & U ! a U a & U ! a U a F a
True Lmks: ('US Post Office',)
Out Lmks:['US Post Office']
Out Grounds: {'US Post Office'}
Placeholder Map: {'US Post Office': 'a'}
Syntax Error

404
future_avoidance ['a', 'b'] Input utterance: do not go to Ace Hardware, once you have visited North Branch Arts
True Ground LTL: G i north_branch_arts X G ! ace_hardware
Out Ground LTL: & U ! ace_hardware north_branch_arts F ace_hardware
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('North Branch Arts', 'Ace Hardware')
Out Lmks:['North Branch Arts', 'Ace Hardware']
Out Grounds: {'North Branch Arts', 'Ace Hardware'}
Placeholder Map: {'North Branch Arts': 'a', 'Ace Hardware': 'b'}
False

405
future_avoidance ['a', 'b'] Input utterance: do not go to North Branch Arts, once you have visited Lee Nails
True Ground LTL: G i lee_nails X G ! north_branch_arts
Out Ground LTL: & U ! north_branch_arts lee_nails F north_branch_arts
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Lee Nails', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'Lee Nails']
Out Grounds: {'North Branch Arts', 'Lee Nails'}
Placeholder Map: {'North Branch Arts': 'a', 'Lee Nails': 'b'}
False

406
future_avoidance ['a', 'b'] Input utterance: never go to Creativo! Academy, once you go to Currency Change
True Ground LTL: G i currency_change X G ! creativo_academy
Out Ground LTL: G i currency_change X creativo_academy
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Currency Change', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Currency Change']
Out Grounds: {'Creativo! Academy', 'Currency Change'}
Placeholder Map: {'Creativo! Academy': 'a', 'Currency Change': 'b'}
False

407
future_avoidance ['a', 'b'] Input utterance: never go to Local Goods Chicago, once you go to Ace Hardware
True Ground LTL: G i ace_hardware X G ! local_goods_chicago
Out Ground LTL: G i ace_hardware X local_goods_chicago
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Ace Hardware', 'Local Goods Chicago')
Out Lmks:['Local Goods Chicago', 'Ace Hardware']
Out Grounds: {'Local Goods Chicago', 'Ace Hardware'}
Placeholder Map: {'Local Goods Chicago': 'a', 'Ace Hardware': 'b'}
False

408
future_avoidance ['a', 'b'] Input utterance: after you visit Domino's, you can not visit US Post Office, afterward
True Ground LTL: G i dominos X G ! us_post_office
Out Ground LTL: G e dominos X us_post_office
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ("Domino's", 'US Post Office')
Out Lmks:['US Post Office', "Domino's"]
Out Grounds: {"Domino's", 'US Post Office'}
Placeholder Map: {"Domino's": 'a', 'US Post Office': 'b'}
False

409
future_avoidance ['a', 'b'] Input utterance: after you visit Starbucks, you can not visit Lee Nails, afterward
True Ground LTL: G i starbucks X G ! lee_nails
Out Ground LTL: G e starbucks X lee_nails
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('Starbucks', 'Lee Nails')
Out Lmks:['Lee Nails', 'Starbucks']
Out Grounds: {'Lee Nails', 'Starbucks'}
Placeholder Map: {'Lee Nails': 'a', 'Starbucks': 'b'}
False

410
future_avoidance ['a', 'b'] Input utterance: once Central & Devon NB, is visited you can not go to Edward Jones, any more
True Ground LTL: G i central_&_devon_nb X G ! edward_jones
Out Ground LTL: G e central_&_devon_nb X edward_jones
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('Central & Devon NB', 'Edward Jones')
Out Lmks:['Central & Devon NB', 'Edward Jones']
Out Grounds: {'Central & Devon NB', 'Edward Jones'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edward Jones': 'b'}
False

411
future_avoidance ['a', 'b'] Input utterance: once Creativo! Academy, is visited you can not go to King Pho, any more
True Ground LTL: G i creativo_academy X G ! king_pho
Out Ground LTL: G e creativo_academy X king_pho
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('Creativo! Academy', 'King Pho')
Out Lmks:['King Pho', 'Creativo! Academy']
Out Grounds: {'King Pho', 'Creativo! Academy'}
Placeholder Map: {'King Pho': 'a', 'Creativo! Academy': 'b'}
False

412
future_avoidance ['a', 'b'] Input utterance: you can visit Ruk Sushi & Thai, before Baird & Warner, is visited but you can never visit Ruk Sushi & Thai, afterward
True Ground LTL: G i baird_&_warner X G ! ruk_sushi_&_thai
Out Ground LTL: G e ruk_sushi_&_thai X baird_&_warner
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('Baird & Warner', 'Ruk Sushi & Thai')
Out Lmks:['Ruk Sushi & Thai', 'Baird & Warner']
Out Grounds: {'Ruk Sushi & Thai', 'Baird & Warner'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Baird & Warner': 'b'}
False

413
future_avoidance ['a', 'b'] Input utterance: you can visit Edward Jones, before Central & Devon NB, is visited but you can never visit Edward Jones, afterward
True Ground LTL: G i central_&_devon_nb X G ! edward_jones
Out Ground LTL: G e central_&_devon_nb X edward_jones
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('Central & Devon NB', 'Edward Jones')
Out Lmks:['Central & Devon NB', 'Edward Jones']
Out Grounds: {'Central & Devon NB', 'Edward Jones'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edward Jones': 'b'}
False

414
future_avoidance ['a', 'b'] Input utterance: after you go to Domino's, you have to avoid Lee Nails
True Ground LTL: G i dominos X G ! lee_nails
Out Ground LTL: G i dominos X lee_nails
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Domino's", 'Lee Nails')
Out Lmks:["Domino's", 'Lee Nails']
Out Grounds: {"Domino's", 'Lee Nails'}
Placeholder Map: {"Domino's": 'a', 'Lee Nails': 'b'}
False

415
future_avoidance ['a', 'b'] Input utterance: after you go to Central & Devon SB, you have to avoid Local Goods Chicago
True Ground LTL: G i central_&_devon_sb X G ! local_goods_chicago
Out Ground LTL: G i central_&_devon_sb X local_goods_chicago
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Central & Devon SB', 'Local Goods Chicago')
Out Lmks:['Central & Devon SB', 'Local Goods Chicago']
Out Grounds: {'Central & Devon SB', 'Local Goods Chicago'}
Placeholder Map: {'Central & Devon SB': 'a', 'Local Goods Chicago': 'b'}
False

416
future_avoidance ['a', 'b'] Input utterance: you must avoid Central & Devon SB, only after you go to Central & Devon SB
True Ground LTL: G i central_&_devon_nb X G ! central_&_devon_sb
Out Ground LTL: & U ! central_&_devon_sb G central_&_devon_sb
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: & U ! a G a
True Lmks: ('Central & Devon NB', 'Central & Devon SB')
Out Lmks:['Central & Devon SB']
Out Grounds: {'Central & Devon SB'}
Placeholder Map: {'Central & Devon SB': 'a'}
RER or Grounding Error

417
future_avoidance ['a', 'b'] Input utterance: you must avoid Central & Devon SB, only after you go to Central & Devon SB
True Ground LTL: G i currency_change X G ! central_&_devon_sb
Out Ground LTL: & U ! central_&_devon_sb G central_&_devon_sb
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: & U ! a G a
True Lmks: ('Currency Change', 'Central & Devon SB')
Out Lmks:['Central & Devon SB']
Out Grounds: {'Central & Devon SB'}
Placeholder Map: {'Central & Devon SB': 'a'}
RER or Grounding Error

418
future_avoidance ['a', 'b'] Input utterance: once you have gone to Central & Devon NB, you must stay away from Edgebrook Coffee Ship
True Ground LTL: G i central_&_devon_nb X G ! edgebrook_coffee_ship
Out Ground LTL: G e central_&_devon_nb X edgebrook_coffee_ship
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('Central & Devon NB', 'Edgebrook Coffee Ship')
Out Lmks:['Central & Devon NB', 'Edgebrook Coffee Ship']
Out Grounds: {'Central & Devon NB', 'Edgebrook Coffee Ship'}
Placeholder Map: {'Central & Devon NB': 'a', 'Edgebrook Coffee Ship': 'b'}
False

419
future_avoidance ['a', 'b'] Input utterance: once you have gone to My Sister's Closet, you must stay away from North Branch Arts
True Ground LTL: G i my_sisters_closet X G ! north_branch_arts
Out Ground LTL: G i my_sisters_closet X my_sisters_closet
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X b
True Lmks: ("My Sister's Closet", 'North Branch Arts')
Out Lmks:['North Branch Arts', "My Sister's Closet"]
Out Grounds: {'North Branch Arts', "My Sister's Closet"}
Placeholder Map: {'North Branch Arts': 'a', "My Sister's Closet": 'b'}
False

420
future_avoidance ['a', 'b'] Input utterance: you must stay away from Lee Nails, once you have gone to Starbucks
True Ground LTL: G i starbucks X G ! lee_nails
Out Ground LTL: G i starbucks X lee_nails
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Starbucks', 'Lee Nails')
Out Lmks:['Lee Nails', 'Starbucks']
Out Grounds: {'Lee Nails', 'Starbucks'}
Placeholder Map: {'Lee Nails': 'a', 'Starbucks': 'b'}
False

421
future_avoidance ['a', 'b'] Input utterance: you must stay away from Central & Devon NB, once you have gone to King Pho
True Ground LTL: G i king_pho X G ! central_&_devon_nb
Out Ground LTL: G i king_pho X central_&_devon_nb
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('King Pho', 'Central & Devon NB')
Out Lmks:['Central & Devon NB', 'King Pho']
Out Grounds: {'Central & Devon NB', 'King Pho'}
Placeholder Map: {'Central & Devon NB': 'a', 'King Pho': 'b'}
False

422
future_avoidance ['a', 'b'] Input utterance: you can not move to Local Goods Chicago, after you reach Central & Devon NB
True Ground LTL: G i central_&_devon_nb X G ! local_goods_chicago
Out Ground LTL: G i central_&_devon_nb X local_goods_chicago
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Central & Devon NB', 'Local Goods Chicago')
Out Lmks:['Central & Devon NB', 'Local Goods Chicago']
Out Grounds: {'Central & Devon NB', 'Local Goods Chicago'}
Placeholder Map: {'Central & Devon NB': 'a', 'Local Goods Chicago': 'b'}
False

423
future_avoidance ['a', 'b'] Input utterance: you can not move to Ace Hardware, after you reach Edward Jones
True Ground LTL: G i edward_jones X G ! ace_hardware
Out Ground LTL: G i edward_jones X ace_hardware
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Edward Jones', 'Ace Hardware')
Out Lmks:['Edward Jones', 'Ace Hardware']
Out Grounds: {'Edward Jones', 'Ace Hardware'}
Placeholder Map: {'Edward Jones': 'a', 'Ace Hardware': 'b'}
False

424
future_avoidance ['a', 'b'] Input utterance: after you reach Domino's, you can not move to Currency Change
True Ground LTL: G i dominos X G ! currency_change
Out Ground LTL: G i dominos X currency_change
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Domino's", 'Currency Change')
Out Lmks:["Domino's", 'Currency Change']
Out Grounds: {"Domino's", 'Currency Change'}
Placeholder Map: {"Domino's": 'a', 'Currency Change': 'b'}
False

425
future_avoidance ['a', 'b'] Input utterance: after you reach Edward Jones, you can not move to Local Goods Chicago
True Ground LTL: G i edward_jones X G ! local_goods_chicago
Out Ground LTL: G i edward_jones X local_goods_chicago
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Edward Jones', 'Local Goods Chicago')
Out Lmks:['Local Goods Chicago', 'Edward Jones']
Out Grounds: {'Edward Jones', 'Local Goods Chicago'}
Placeholder Map: {'Edward Jones': 'a', 'Local Goods Chicago': 'b'}
False

426
future_avoidance ['a', 'b'] Input utterance: once you go to Becker Roofing Company, you have to avoid Little Nest Care, at all costs
True Ground LTL: G i becker_roofing_company X G ! little_nest_care
Out Ground LTL: G i becker_roofing_company X little_nest_care
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Becker Roofing Company', 'Little Nest Care')
Out Lmks:['Becker Roofing Company', 'Little Nest Care']
Out Grounds: {'Becker Roofing Company', 'Little Nest Care'}
Placeholder Map: {'Becker Roofing Company': 'a', 'Little Nest Care': 'b'}
False

427
future_avoidance ['a', 'b'] Input utterance: once you go to Local Goods Chicago, you have to avoid Creativo! Academy, at all costs
True Ground LTL: G i local_goods_chicago X G ! creativo_academy
Out Ground LTL: G i local_goods_chicago X creativo_academy
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Local Goods Chicago', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Local Goods Chicago']
Out Grounds: {'Creativo! Academy', 'Local Goods Chicago'}
Placeholder Map: {'Creativo! Academy': 'a', 'Local Goods Chicago': 'b'}
False

428
future_avoidance ['a', 'b'] Input utterance: you have to avoid Ace Hardware, once you go to Terry's Place
True Ground LTL: G i terrys_place X G ! ace_hardware
Out Ground LTL: G i terrys_place X ace_hardware
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Terry's Place", 'Ace Hardware')
Out Lmks:["Terry's Place", 'Ace Hardware']
Out Grounds: {"Terry's Place", 'Ace Hardware'}
Placeholder Map: {"Terry's Place": 'a', 'Ace Hardware': 'b'}
False

429
future_avoidance ['a', 'b'] Input utterance: you have to avoid Currency Change, once you go to North Branch Arts
True Ground LTL: G i north_branch_arts X G ! currency_change
Out Ground LTL: G i north_branch_arts X currency_change
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('North Branch Arts', 'Currency Change')
Out Lmks:['North Branch Arts', 'Currency Change']
Out Grounds: {'North Branch Arts', 'Currency Change'}
Placeholder Map: {'North Branch Arts': 'a', 'Currency Change': 'b'}
False

430
future_avoidance ['a', 'b'] Input utterance: do not visit Ruk Sushi & Thai, after Edward Jones, is visited
True Ground LTL: G i edward_jones X G ! ruk_sushi_&_thai
Out Ground LTL: ! F & edward_jones F ruk_sushi_&_thai
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a F b
True Lmks: ('Edward Jones', 'Ruk Sushi & Thai')
Out Lmks:['Edward Jones', 'Ruk Sushi & Thai']
Out Grounds: {'Edward Jones', 'Ruk Sushi & Thai'}
Placeholder Map: {'Edward Jones': 'a', 'Ruk Sushi & Thai': 'b'}
False

431
future_avoidance ['a', 'b'] Input utterance: do not visit Lee Nails, after Central & Devon NB, is visited
True Ground LTL: G i central_&_devon_nb X G ! lee_nails
Out Ground LTL: ! F & central_&_devon_nb F lee_nails
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a F b
True Lmks: ('Central & Devon NB', 'Lee Nails')
Out Lmks:['Central & Devon NB', 'Lee Nails']
Out Grounds: {'Central & Devon NB', 'Lee Nails'}
Placeholder Map: {'Central & Devon NB': 'a', 'Lee Nails': 'b'}
False

432
future_avoidance ['a', 'b'] Input utterance: you can go to Local Goods Chicago, but you must not go to Creativo! Academy, after that
True Ground LTL: G i local_goods_chicago X G ! creativo_academy
Out Ground LTL: G i local_goods_chicago X creativo_academy
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Local Goods Chicago', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Local Goods Chicago']
Out Grounds: {'Creativo! Academy', 'Local Goods Chicago'}
Placeholder Map: {'Creativo! Academy': 'a', 'Local Goods Chicago': 'b'}
False

433
future_avoidance ['a', 'b'] Input utterance: you can go to Kanellos Shoe Repair, but you must not go to My Sister's Closet, after that
True Ground LTL: G i kanellos_shoe_repair X G ! my_sisters_closet
Out Ground LTL: G i kanellos_shoe_repair X my_sisters_closet
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Kanellos Shoe Repair', "My Sister's Closet")
Out Lmks:['Kanellos Shoe Repair', "My Sister's Closet"]
Out Grounds: {'Kanellos Shoe Repair', "My Sister's Closet"}
Placeholder Map: {'Kanellos Shoe Repair': 'a', "My Sister's Closet": 'b'}
False

434
future_avoidance ['a', 'b'] Input utterance: any visit to Baird & Warner, is not allowed after you visit Domino's
True Ground LTL: G i dominos X G ! baird_&_warner
Out Ground LTL: G i dominos X baird_&_warner
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Domino's", 'Baird & Warner')
Out Lmks:["Domino's", 'Baird & Warner']
Out Grounds: {"Domino's", 'Baird & Warner'}
Placeholder Map: {"Domino's": 'a', 'Baird & Warner': 'b'}
False

435
future_avoidance ['a', 'b'] Input utterance: any visit to Central & Devon NB, is not allowed after you visit My Sister's Closet
True Ground LTL: G i my_sisters_closet X G ! central_&_devon_nb
Out Ground LTL: G i my_sisters_closet X central_&_devon_nb
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ("My Sister's Closet", 'Central & Devon NB')
Out Lmks:['Central & Devon NB', "My Sister's Closet"]
Out Grounds: {'Central & Devon NB', "My Sister's Closet"}
Placeholder Map: {'Central & Devon NB': 'a', "My Sister's Closet": 'b'}
False

436
future_avoidance ['a', 'b'] Input utterance: once My Sister's Closet, is reached after that you can never visit Edward Jones
True Ground LTL: G i my_sisters_closet X G ! edward_jones
Out Ground LTL: G ! edward_jones G my_sisters_closet
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b G a
True Lmks: ("My Sister's Closet", 'Edward Jones')
Out Lmks:["My Sister's Closet", 'Edward Jones']
Out Grounds: {"My Sister's Closet", 'Edward Jones'}
Placeholder Map: {"My Sister's Closet": 'a', 'Edward Jones': 'b'}
Syntax Error

437
future_avoidance ['a', 'b'] Input utterance: once Central & Devon SB, is reached after that you can never visit Kanellos Shoe Repair
True Ground LTL: G i central_&_devon_sb X G ! kanellos_shoe_repair
Out Ground LTL: G ! kanellos_shoe_repair G central_&_devon_sb
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! a G b
True Lmks: ('Central & Devon SB', 'Kanellos Shoe Repair')
Out Lmks:['Central & Devon SB', 'Kanellos Shoe Repair']
Out Grounds: {'Kanellos Shoe Repair', 'Central & Devon SB'}
Placeholder Map: {'Kanellos Shoe Repair': 'a', 'Central & Devon SB': 'b'}
Syntax Error

438
future_avoidance ['a', 'b'] Input utterance: Creativo! Academy, can never be visited once Central & Devon SB, occurs
True Ground LTL: G i central_&_devon_sb X G ! creativo_academy
Out Ground LTL: G ! central_&_devon_sb G creativo_academy
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b G a
True Lmks: ('Central & Devon SB', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Central & Devon SB']
Out Grounds: {'Creativo! Academy', 'Central & Devon SB'}
Placeholder Map: {'Creativo! Academy': 'a', 'Central & Devon SB': 'b'}
Syntax Error

439
future_avoidance ['a', 'b'] Input utterance: Creativo! Academy, can never be visited once Baird & Warner, occurs
True Ground LTL: G i baird_&_warner X G ! creativo_academy
Out Ground LTL: G ! baird_&_warner G creativo_academy
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b G a
True Lmks: ('Baird & Warner', 'Creativo! Academy')
Out Lmks:['Creativo! Academy', 'Baird & Warner']
Out Grounds: {'Creativo! Academy', 'Baird & Warner'}
Placeholder Map: {'Creativo! Academy': 'a', 'Baird & Warner': 'b'}
Syntax Error

440
future_avoidance ['a', 'b'] Input utterance: if you go to King Pho, you can never go to Becker Roofing Company, after that
True Ground LTL: G i king_pho X G ! becker_roofing_company
Out Ground LTL: G i king_pho X becker_roofing_company
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('King Pho', 'Becker Roofing Company')
Out Lmks:['King Pho', 'Becker Roofing Company']
Out Grounds: {'King Pho', 'Becker Roofing Company'}
Placeholder Map: {'King Pho': 'a', 'Becker Roofing Company': 'b'}
False

441
future_avoidance ['a', 'b'] Input utterance: if you go to Creativo! Academy, you can never go to Edward Jones, after that
True Ground LTL: G i creativo_academy X G ! edward_jones
Out Ground LTL: G i creativo_academy X edward_jones
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Creativo! Academy', 'Edward Jones')
Out Lmks:['Creativo! Academy', 'Edward Jones']
Out Grounds: {'Creativo! Academy', 'Edward Jones'}
Placeholder Map: {'Creativo! Academy': 'a', 'Edward Jones': 'b'}
False

442
future_avoidance ['a', 'b'] Input utterance: if US Post Office, happens that prevents North Branch Arts, from happening afterwards
True Ground LTL: G i us_post_office X G ! north_branch_arts
Out Ground LTL: G i us_post_office X north_branch_arts
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('US Post Office', 'North Branch Arts')
Out Lmks:['North Branch Arts', 'US Post Office']
Out Grounds: {'North Branch Arts', 'US Post Office'}
Placeholder Map: {'North Branch Arts': 'a', 'US Post Office': 'b'}
False

443
future_avoidance ['a', 'b'] Input utterance: if Currency Change, happens that prevents Ruk Sushi & Thai, from happening afterwards
True Ground LTL: G i currency_change X G ! ruk_sushi_&_thai
Out Ground LTL: G i currency_change X ruk_sushi_&_thai
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Currency Change', 'Ruk Sushi & Thai')
Out Lmks:['Ruk Sushi & Thai', 'Currency Change']
Out Grounds: {'Ruk Sushi & Thai', 'Currency Change'}
Placeholder Map: {'Ruk Sushi & Thai': 'a', 'Currency Change': 'b'}
False

444
future_avoidance ['a', 'b'] Input utterance: if you visit Kanellos Shoe Repair, you are not allowed to reach Edgebrook Coffee Ship, afterwards
True Ground LTL: G i kanellos_shoe_repair X G ! edgebrook_coffee_ship
Out Ground LTL: G i kanellos_shoe_repair X edgebrook_coffee_ship
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Kanellos Shoe Repair', 'Edgebrook Coffee Ship')
Out Lmks:['Edgebrook Coffee Ship', 'Kanellos Shoe Repair']
Out Grounds: {'Edgebrook Coffee Ship', 'Kanellos Shoe Repair'}
Placeholder Map: {'Edgebrook Coffee Ship': 'a', 'Kanellos Shoe Repair': 'b'}
False

445
future_avoidance ['a', 'b'] Input utterance: if you visit Becker Roofing Company, you are not allowed to reach Ruk Sushi & Thai, afterwards
True Ground LTL: G i becker_roofing_company X G ! ruk_sushi_&_thai
Out Ground LTL: G i becker_roofing_company X ruk_sushi_&_thai
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Becker Roofing Company', 'Ruk Sushi & Thai')
Out Lmks:['Becker Roofing Company', 'Ruk Sushi & Thai']
Out Grounds: {'Becker Roofing Company', 'Ruk Sushi & Thai'}
Placeholder Map: {'Becker Roofing Company': 'a', 'Ruk Sushi & Thai': 'b'}
False

446
future_avoidance ['a', 'b'] Input utterance: whenever you observe Starbucks, this locks Local Goods Chicago, from becoming true from the next instance
True Ground LTL: G i starbucks X G ! local_goods_chicago
Out Ground LTL: G i starbucks X local_goods_chicago
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Starbucks', 'Local Goods Chicago')
Out Lmks:['Local Goods Chicago', 'Starbucks']
Out Grounds: {'Local Goods Chicago', 'Starbucks'}
Placeholder Map: {'Local Goods Chicago': 'a', 'Starbucks': 'b'}
False

447
future_avoidance ['a', 'b'] Input utterance: whenever you observe Starbucks, this locks Domino's, from becoming true from the next instance
True Ground LTL: G i starbucks X G ! dominos
Out Ground LTL: G i starbucks X dominos
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Starbucks', "Domino's")
Out Lmks:["Domino's", 'Starbucks']
Out Grounds: {"Domino's", 'Starbucks'}
Placeholder Map: {"Domino's": 'a', 'Starbucks': 'b'}
False

448
future_avoidance ['a', 'b'] Input utterance: seeing US Post Office, locks Ruk Sushi & Thai, from being true for all time instances starting from the next one
True Ground LTL: G i us_post_office X G ! ruk_sushi_&_thai
Out Ground LTL: G ! ruk_sushi_&_thai
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b
True Lmks: ('US Post Office', 'Ruk Sushi & Thai')
Out Lmks:['US Post Office', 'Ruk Sushi & Thai']
Out Grounds: {'US Post Office', 'Ruk Sushi & Thai'}
Placeholder Map: {'US Post Office': 'a', 'Ruk Sushi & Thai': 'b'}
False

449
future_avoidance ['a', 'b'] Input utterance: seeing Starbucks, locks Currency Change, from being true for all time instances starting from the next one
True Ground LTL: G i starbucks X G ! currency_change
Out Ground LTL: G ! currency_change
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! a
True Lmks: ('Starbucks', 'Currency Change')
Out Lmks:['Locks Currency Change', 'Starbucks']
Out Grounds: {'Currency Change', 'Starbucks'}
Placeholder Map: {'Currency Change': 'a', 'Starbucks': 'b'}
False

450
future_avoidance ['a', 'b'] Input utterance: after you get to Lee Nails, you must avoid US Post Office
True Ground LTL: G i lee_nails X G ! us_post_office
Out Ground LTL: G i lee_nails X us_post_office
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Lee Nails', 'US Post Office')
Out Lmks:['US Post Office', 'Lee Nails']
Out Grounds: {'US Post Office', 'Lee Nails'}
Placeholder Map: {'US Post Office': 'a', 'Lee Nails': 'b'}
False

451
future_avoidance ['a', 'b'] Input utterance: after you get to Becker Roofing Company, you must avoid Ace Hardware
True Ground LTL: G i becker_roofing_company X G ! ace_hardware
Out Ground LTL: G i becker_roofing_company X ace_hardware
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Becker Roofing Company', 'Ace Hardware')
Out Lmks:['Becker Roofing Company', 'Ace Hardware']
Out Grounds: {'Becker Roofing Company', 'Ace Hardware'}
Placeholder Map: {'Becker Roofing Company': 'a', 'Ace Hardware': 'b'}
False

Language to LTL translation accuracy: 0.6438053097345132


