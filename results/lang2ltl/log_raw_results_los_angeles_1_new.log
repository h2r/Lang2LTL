data/osm/lang2ltl/los_angeles_1/symbolic_batch12_perm_ltl_formula_9_42_fold0.pkl
RER engine: text-davinci-003
Embedding engine: text-embedding-ada-002
Symbolic translation engine: davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30
known lmk embed: data/osm/lmk_sem_embeds/obj2embed_los_angeles_1_text-embedding-ada-002.pkl
cached lmk embed: data/osm/lmk_name_embeds/name2embed_los_angeles_1_text-embedding-ada-002.pkl



RUN: 0
Extracting referring expressions from utterance: 0/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Ike\'s Place, Red Pelican Music, Novel Cafe Westwood, Nature\'s Way Caf\\u00e9, and UCLA Extension - Lindbrook Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
Starting new HTTPS connection (1): api.openai.com:443
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1309 request_id=c236107a4040b95b610397cda92842e5 response_code=200
Extracting referring expressions from utterance: 1/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Nature\'s Way Caf\\u00e9, UCLA Extension - Westwood Village Center, Gayley Center, Yogurtland, and Red Pelican Music\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1030 request_id=8cb8f08b6383379bdfae0dec4e9954e4 response_code=200
Extracting referring expressions from utterance: 2/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: sometime visit Veggie Grill, UCLA Extension - Lindbrook Center, Peet\'s Coffee & Tea, The Gayley Building, and Janss Dome\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 370
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1407 request_id=609471ced96954806cdf8b3d235ab327 response_code=200
Extracting referring expressions from utterance: 3/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: sometime visit Kinross Building South, Westwood\'s Village Square, Native Foods, Urban Outfitters, and Novel Cafe Westwood\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 371
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=902 request_id=57f898eb68e8d994645ac713ec34fa6b response_code=200
Extracting referring expressions from utterance: 4/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: eventually go visit Yogurtland, Victoria\'s Secret, Ike\'s Place, Starbucks, and 800 Degrees\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=812 request_id=ff9bd8fd965f313d75032b7d4aef602c response_code=200
Extracting referring expressions from utterance: 5/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: eventually go visit Plaza la Reina, Native Foods, Janss Dome, Westwood Wilshire, and bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1620 request_id=0971e186d310300925d1f28dfaaaec0a response_code=200
Extracting referring expressions from utterance: 6/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Subway, Yogurtland, London Cleaners, Starbucks, and TCT Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=963 request_id=b5a2e66e1abbf5c883e7b17d121652ec response_code=200
Extracting referring expressions from utterance: 7/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Starbucks, Subway, Native Foods, Parking 32, and The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=724 request_id=2d16494a785062a3db1ddcdb9421e63b response_code=200
Extracting referring expressions from utterance: 8/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Westwood Wilshire, go to London Cleaners, go to Ike\'s Place, go to Plaza la Reina, go to U-Mini\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=829 request_id=e5f30ddd982fbf18c99125338263b282 response_code=200
Extracting referring expressions from utterance: 9/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to The Gayley Building, go to Village Center Newsstand, go to Mongol BBQ, go to Occidental Petroleum Heliport, go to Ike\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 370
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1209 request_id=a8d30815724c9b5bd11f0ed70aa0f71f response_code=200
Extracting referring expressions from utterance: 10/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Novel Cafe Westwood, Westwood\'s Village Square, Nature\'s Way Caf\\u00e9, The Gayley Building, Iso Fusion Caf\\u00e9, in any order required\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=924 request_id=458bd5a25c349b74a22481a728412ccc response_code=200
Extracting referring expressions from utterance: 11/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Parking 32, Mongol BBQ, Village Center Newsstand, Gayley Center, Nature\'s Way Caf\\u00e9, in any order required\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=806 request_id=5258239f5f786a030cc2ba7ac0d0ba8d response_code=200
Extracting referring expressions from utterance: 12/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit all locations Urban Outfitters, bibigo, Nature\'s Way Caf\\u00e9, UCLA Extension - Lindbrook Center, Gayley & Lindbrook Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1096 request_id=bf0fa35b4b1d5ffaeb25936f5e5560d5 response_code=200
Extracting referring expressions from utterance: 13/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit all locations Westwood Wilshire, Subway, Red Pelican Music, Westwood\'s Village Square, Village Center Newsstand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 366
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=587 request_id=eaffdd4ef3e9807b28f8d966fbb25cd6 response_code=200
Extracting referring expressions from utterance: 14/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach the following five locations Urban Outfitters, Westwood\'s Village Square, Subway, bibigo, Yogurtland\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=911 request_id=95bda8d5265e199141f0d20d1f22371d response_code=200
Extracting referring expressions from utterance: 15/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach the following five locations Urban Outfitters, Stone Canyon Creek (underground), UCLA Extension - Lindbrook Center, Westwood Wilshire, bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 381
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1037 request_id=ed539038fd785c126ed350416a354fa1 response_code=200
Extracting referring expressions from utterance: 16/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: find the following Mongol BBQ, Janss Dome, Ike\'s Place, UCLA Extension - Westwood Village Center, Westwood\'s Village Square\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 373
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1852 request_id=31fac0d7a1b2f10691345c444c853f99 response_code=200
Extracting referring expressions from utterance: 17/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: find the following TCT Foods, Westwood\'s Village Square, London Cleaners, Subway, Kinross Building South\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=783 request_id=a4a050ff0267ad9a40af692d90ada7ec response_code=200
Extracting referring expressions from utterance: 18/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Mio Babbo\'s, Westwood\'s Village Square, Red Pelican Music, Yogurtland, and TCT Foods, in arbitrary order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1146 request_id=cf6dfa73571c38316fe8d43e7e0604d9 response_code=200
Extracting referring expressions from utterance: 19/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to TCT Foods, Occidental Petroleum Heliport, Subway, Nature\'s Way Caf\\u00e9, and Parking 32, in arbitrary order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=936 request_id=31cabf731aacf1db303e3547c153545f response_code=200
Extracting referring expressions from utterance: 20/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Village Center Newsstand, Gayley & Lindbrook Apartments, U-Mini, Janss Dome, and Peet\'s Coffee & Tea, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 365
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1079 request_id=02504ced00cdc9a8ab55e474b449120e response_code=200
Extracting referring expressions from utterance: 21/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Westwood Wilshire, Noah\'s Bagels, Mio Babbo\'s, Plaza la Reina, and Denny\'s, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1250 request_id=90c67abe3531129e305b30eff7872bd6 response_code=200
Extracting referring expressions from utterance: 22/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop until Stone Canyon Creek (underground), Denny\'s, Native Foods, Peet\'s Coffee & Tea, and Victoria\'s Secret, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 364
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=958 request_id=dc568d3245b2485f23bce0f7093af4cc response_code=200
Extracting referring expressions from utterance: 23/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop until Occidental Petroleum Heliport, Denny\'s, Westwood Wilshire, Parking 32, and Yogurtland, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=808 request_id=4cb72467e0cb212fae7b4f5c377a9b05 response_code=200
Extracting referring expressions from utterance: 24/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Subway, Parking 36, 800 Degrees, UCLA Extension - Westwood Village Center, and Veggie Grill\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=615 request_id=39f4b4364423d36217b90ee912d87187 response_code=200
Extracting referring expressions from utterance: 25/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to UCLA Extension - Lindbrook Center, Poke Bar, bibigo, Parking 36, and Iso Fusion Caf\\u00e9\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=937 request_id=f5ba2ac57bd1e7ec92dd4243a5b15f73 response_code=200
Extracting referring expressions from utterance: 26/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Occidental Petroleum Heliport, Stone Canyon Creek (underground), Denny\'s, London Cleaners, and Noah\'s Bagels, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 373
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=941 request_id=255c7b7f38e8d48a0e65cde729a587e8 response_code=200
Extracting referring expressions from utterance: 27/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Mongol BBQ, Yogurtland, Red Pelican Music, Mio Babbo\'s, and London Cleaners, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=819 request_id=0148e249c7f2175abfa9d3b61d315fe3 response_code=200
Extracting referring expressions from utterance: 28/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Parking 36, Kinross Building South, 800 Degrees, U-Mini, and Iso Fusion Caf\\u00e9, in no particular order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=799 request_id=72cf9aabff4396d9d2a35403bc6a2cbe response_code=200
Extracting referring expressions from utterance: 29/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Mongol BBQ, UTLA Beauty, TCT Foods, Peet\'s Coffee & Tea, and bibigo, in no particular order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=957 request_id=524c0f673c56469eb10c0e5c5102ee9c response_code=200
Extracting referring expressions from utterance: 30/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Parking 36, Red Pelican Music, Westwood Wilshire, Victoria\'s Secret, and Janss Dome, at least once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=954 request_id=d901bff03ce0278a6b8277e0a4f78362 response_code=200
Extracting referring expressions from utterance: 31/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Parking 32, The Gayley Building, Ike\'s Place, Nature\'s Way Caf\\u00e9, and U-Mini, at least once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=836 request_id=8a27a64e49054c789c7e9da9cff83cb4 response_code=200
Extracting referring expressions from utterance: 32/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Native Foods, Yogurtland, Westwood\'s Village Square, Westwood Sporting Goods, and UCLA Extension - Westwood Village Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 387
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1379 request_id=d423e08879015753df04ea988db036f7 response_code=200
Extracting referring expressions from utterance: 33/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Stone Canyon Creek (underground), Noah\'s Bagels, U-Mini, Subway, and The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1411 request_id=8f2e03a549abc224fa1aabf5886c5a75 response_code=200
Extracting referring expressions from utterance: 34/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to UCLA Extension - Lindbrook Center, Victoria\'s Secret, 800 Degrees, Subway, and Gayley & Lindbrook Apartments, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 373
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1021 request_id=8092f3047951409a115ebbe6747ce1a8 response_code=200
Extracting referring expressions from utterance: 35/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Red Pelican Music, Nature\'s Way Caf\\u00e9, UCLA Extension - Westwood Village Center, 800 Degrees, and U-Mini, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1023 request_id=972ae01a05113b4f152803ef23ae1556 response_code=200
Extracting referring expressions from utterance: 36/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit London Cleaners, Red Pelican Music, Yogurtland, Novel Cafe Westwood, and Village Center Newsstand, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1000 request_id=ba3c24ed6a577b2b93510b0485d09ee9 response_code=200
Extracting referring expressions from utterance: 37/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Janss Dome, Parking 32, UCLA Extension - Westwood Village Center, Village Center Newsstand, and Urban Outfitters, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 377
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1203 request_id=8ac2bf6411500ee4dd4e74aebc5babcc response_code=200
Extracting referring expressions from utterance: 38/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach Parking 36, Occidental Petroleum Heliport, Yogurtland, Mongol BBQ, and Kinross Building South, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 358
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1226 request_id=4a9dc4568b1c94739435b0fdb6f5d28b response_code=200
Extracting referring expressions from utterance: 39/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach bibigo, Victoria\'s Secret, Occidental Petroleum Heliport, Village Center Newsstand, and Nature\'s Way Caf\\u00e9, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1528 request_id=9ca2283b3e024135cdc5280d338e948f response_code=200
Extracting referring expressions from utterance: 40/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you go to Gayley & Lindbrook Apartments, Peet\'s Coffee & Tea, Native Foods, Subway, Occidental Petroleum Heliport, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 372
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1137 request_id=4980ddb63939c53ec037581930c5853d response_code=200
Extracting referring expressions from utterance: 41/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you go to Red Pelican Music, UCLA Extension - Westwood Village Center, Native Foods, London Cleaners, Noah\'s Bagels, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 374
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=991 request_id=c508fd9aeef3b74a4604c46caee215d7 response_code=200
Extracting referring expressions from utterance: 42/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Peet\'s Coffee & Tea, Gayley & Lindbrook Apartments, Native Foods, Westwood\'s Village Square, Kinross Building South, but it can be done in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 384
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1608 request_id=f5fbfbd6780bae47145037b0944cbb53 response_code=200
Extracting referring expressions from utterance: 43/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Veggie Grill, Urban Outfitters, Village Center Newsstand, Noah\'s Bagels, Iso Fusion Caf\\u00e9, but it can be done in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=600 request_id=73e5cc51aa974f0a137b1720d726a1ae response_code=200
Extracting referring expressions from utterance: 44/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: in no particular order visit Red Pelican Music, Mongol BBQ, Janss Dome, Westwood Wilshire, Occidental Petroleum Heliport\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=875 request_id=c54f592c7a71e754ced410f3d68ea981 response_code=200
Extracting referring expressions from utterance: 45/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: in no particular order visit Gayley & Lindbrook Apartments, Parking 32, Kinross Building South, UCLA Extension - Westwood Village Center, Veggie Grill\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 390
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1546 request_id=0b412cf125a952dd5ce227523b466a64 response_code=200
Extracting referring expressions from utterance: 46/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Westwood Sporting Goods, until you visit Peet\'s Coffee & Tea, visit Peet\'s Coffee & Tea, only once do not visit Peet\'s Coffee & Tea, until you visit bibigo, visit bibigo, only once do no visit bibigo, until you visit Urban Outfitters, visit Urban Outfitters, only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=974 request_id=c601167ad6b07c6a346973ce44eb9df5 response_code=200
Extracting referring expressions from utterance: 47/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Janss Dome, until you visit Ike\'s Place, visit Ike\'s Place, only once do not visit Ike\'s Place, until you visit Subway, visit Subway, only once do no visit Subway, until you visit Stone Canyon Creek (underground), visit Stone Canyon Creek (underground), only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=787 request_id=403520e22c2a0fd9f6b5091a66401edc response_code=200
Extracting referring expressions from utterance: 48/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Denny\'s, then Subway, then Occidental Petroleum Heliport, and then Veggie Grill, you can only visit each landmark once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1037 request_id=0cf27d16f5097b86309247d83f85fdbc response_code=200
Extracting referring expressions from utterance: 49/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Gayley & Lindbrook Apartments, then Janss Dome, then Plaza la Reina, and then Noah\'s Bagels, you can only visit each landmark once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=740 request_id=786d11cc76fbb38797177a51bd5c1a93 response_code=200
Extracting referring expressions from utterance: 50/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Westwood\'s Village Square, but not through Westwood Wilshire, Mongol BBQ, or Mio Babbo\'s, and then go to Westwood Wilshire, but not through Mongol BBQ, or Mio Babbo\'s, and then go to Mongol BBQ, but not through Mio Babbo\'s, and finally go to Mio Babbo\'s, no revisiting is allowed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=842 request_id=991aa9c66c5090cf95a61706bed7f95a response_code=200
Extracting referring expressions from utterance: 51/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Westwood Wilshire, but not through Gayley & Lindbrook Apartments, Urban Outfitters, or Westwood\'s Village Square, and then go to Gayley & Lindbrook Apartments, but not through Urban Outfitters, or Westwood\'s Village Square, and then go to Urban Outfitters, but not through Westwood\'s Village Square, and finally go to Westwood\'s Village Square, no revisiting is allowed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 361
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=871 request_id=39f876870f5c035495df4125a35bf3d5 response_code=200
Extracting referring expressions from utterance: 52/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Peet\'s Coffee & Tea, until UTLA Beauty, is visited and do not go to UTLA Beauty, until Starbucks, is visited and do not go to Starbucks, until The Gayley Building, is visited along the path never return to previous location you have been to\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1060 request_id=b8d7900e3b4e94de46832994aa7b00ed response_code=200
Extracting referring expressions from utterance: 53/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Gayley Center, until UCLA Extension - Westwood Village Center, is visited and do not go to UCLA Extension - Westwood Village Center, until Native Foods, is visited and do not go to Native Foods, until UTLA Beauty, is visited along the path never return to previous location you have been to\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=923 request_id=c7309f28035a81909cf84cd50be25ac2 response_code=200
Extracting referring expressions from utterance: 54/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to UTLA Beauty, only after going to Westwood Sporting Goods, before that make your way to Westwood Sporting Goods, only after going to Parking 36, before that make your way to Parking 36, only after going to UCLA Extension - Lindbrook Center, do not go back to the previous location you have visited while heading to the next\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1023 request_id=ffd6e8cc3459c99f50a23e05cea42fa8 response_code=200
Extracting referring expressions from utterance: 55/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Stone Canyon Creek (underground), only after going to Westwood Wilshire, before that make your way to Westwood Wilshire, only after going to Mio Babbo\'s, before that make your way to Mio Babbo\'s, only after going to Yogurtland, do not go back to the previous location you have visited while heading to the next\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=877 request_id=deb4051914eedf62b13ad14701adcf1f response_code=200
Extracting referring expressions from utterance: 56/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to TCT Foods, but do not visit Native Foods, Nature\'s Way Caf\\u00e9, or Parking 32, and then go to Native Foods, but do not visit Nature\'s Way Caf\\u00e9, or Parking 32, or revisit TCT Foods, and then go to Nature\'s Way Caf\\u00e9, but do not visit Parking 32, or revisit TCT Foods, or Native Foods, and then go to Parking 32, but do not revisit TCT Foods, Native Foods, or Nature\'s Way Caf\\u00e9\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=795 request_id=5f94fab09da7449fd8217e496dbc0f5c response_code=200
Extracting referring expressions from utterance: 57/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Starbucks, but do not visit The Gayley Building, bibigo, or Denny\'s, and then go to The Gayley Building, but do not visit bibigo, or Denny\'s, or revisit Starbucks, and then go to bibigo, but do not visit Denny\'s, or revisit Starbucks, or The Gayley Building, and then go to Denny\'s, but do not revisit Starbucks, The Gayley Building, or bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=616 request_id=59d55a196e79633f57f218fdc793c9ec response_code=200
Extracting referring expressions from utterance: 58/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Plaza la Reina, London Cleaners, TCT Foods, and U-Mini, in this order without skipping any one of them do not revisit any one of them once after you have been there\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=815 request_id=b944fbe94d42a5e96070e63f95db6dcd response_code=200
Extracting referring expressions from utterance: 59/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit U-Mini, London Cleaners, bibigo, and Ike\'s Place, in this order without skipping any one of them do not revisit any one of them once after you have been there\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=636 request_id=54ec5904156fc0ef8b7361eed939f341 response_code=200
Extracting referring expressions from utterance: 60/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to TCT Foods, only once but keep away from Kinross Building South, Poke Bar, and U-Mini, and then go to Kinross Building South, only once but keep away from TCT Foods, Poke Bar, and U-Mini, and then go to Poke Bar, only once but keep way from TCT Foods, Kinross Building South, and U-Mini, and finally go to U-Mini, once but keep away from TCT Foods, Kinross Building South, and Poke Bar\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=544 request_id=35762fe889baef21a1da16eb223863e6 response_code=200
Extracting referring expressions from utterance: 61/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to UTLA Beauty, only once but keep away from Westwood\'s Village Square, TCT Foods, and Iso Fusion Caf\\u00e9, and then go to Westwood\'s Village Square, only once but keep away from UTLA Beauty, TCT Foods, and Iso Fusion Caf\\u00e9, and then go to TCT Foods, only once but keep way from UTLA Beauty, Westwood\'s Village Square, and Iso Fusion Caf\\u00e9, and finally go to Iso Fusion Caf\\u00e9, once but keep away from UTLA Beauty, Westwood\'s Village Square, and TCT Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=6a82bed233700a3263a2be10aa209745 response_code=200
Extracting referring expressions from utterance: 62/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Parking 32, one time but not through The Gayley Building, Noah\'s Bagels, or Subway, and then visit The Gayley Building, once but not through Parking 32, Noah\'s Bagels, or Subway, and then visit Noah\'s Bagels, once but not through Parking 32, The Gayley Building, or Subway, and then visit Subway, once but not through Parking 32, The Gayley Building, or Noah\'s Bagels\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=664 request_id=ea81f57b5519c05c26a7891167dbf018 response_code=200
Extracting referring expressions from utterance: 63/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Stone Canyon Creek (underground), one time but not through Ike\'s Place, Westwood\'s Village Square, or Poke Bar, and then visit Ike\'s Place, once but not through Stone Canyon Creek (underground), Westwood\'s Village Square, or Poke Bar, and then visit Westwood\'s Village Square, once but not through Stone Canyon Creek (underground), Ike\'s Place, or Poke Bar, and then visit Poke Bar, once but not through Stone Canyon Creek (underground), Ike\'s Place, or Westwood\'s Village Square\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=935 request_id=9845da96986edfd3900e6546fbeed1e2 response_code=200
Extracting referring expressions from utterance: 64/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from London Cleaners, Poke Bar, and Kinross Building South, until you make Denny\'s, single visit to Denny\'s, and then make your way to London Cleaners, while staying away from Denny\'s, Poke Bar, and Kinross Building South, and then make your way to Poke Bar, while staying away from Denny\'s, London Cleaners, or Kinross Building South, and finally make your way to Kinross Building South, while staying away from Denny\'s, London Cleaners, and Poke Bar\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1099 request_id=35c2778f5f626e6cb0da13c4e2a10133 response_code=200
Extracting referring expressions from utterance: 65/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Ike\'s Place, bibigo, and UCLA Extension - Westwood Village Center, until you make Westwood Wilshire, single visit to Westwood Wilshire, and then make your way to Ike\'s Place, while staying away from Westwood Wilshire, bibigo, and UCLA Extension - Westwood Village Center, and then make your way to bibigo, while staying away from Westwood Wilshire, Ike\'s Place, or UCLA Extension - Westwood Village Center, and finally make your way to UCLA Extension - Westwood Village Center, while staying away from Westwood Wilshire, Ike\'s Place, and bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=959 request_id=925a97e1cc09109dfbdca641f4d330a2 response_code=200
Extracting referring expressions from utterance: 66/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: head to Poke Bar, Mio Babbo\'s, Noah\'s Bagels, and Westwood Wilshire, in this order without skipping or revisiting any one of them\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=918 request_id=7ec5500a075dd37a01285a8943c9b8d3 response_code=200
Extracting referring expressions from utterance: 67/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: head to Stone Canyon Creek (underground), Mongol BBQ, Novel Cafe Westwood, and Kinross Building South, in this order without skipping or revisiting any one of them\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 357
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1190 request_id=eda8cb1b760700d8debaacb96fb2785a response_code=200
Extracting referring expressions from utterance: 68/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit each of Parking 36, Gayley & Lindbrook Apartments, Victoria\'s Secret, and The Gayley Building, exactly once in this order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=698 request_id=a5b2133809dc4083a19b9b59624fe7ec response_code=200
Extracting referring expressions from utterance: 69/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit each of Westwood Wilshire, Denny\'s, Noah\'s Bagels, and Parking 36, exactly once in this order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1246 request_id=7bffca694e55ebc45160e20108abb6c0 response_code=200
Extracting referring expressions from utterance: 70/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Peet\'s Coffee & Tea, but before visiting Peet\'s Coffee & Tea, you must visit Red Pelican Music, only after that visit The Gayley Building, after visiting The Gayley Building, visit Westwood Wilshire, visit each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=692 request_id=325cb01e4888209945cb71f0be1761e0 response_code=200
Extracting referring expressions from utterance: 71/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Occidental Petroleum Heliport, but before visiting Occidental Petroleum Heliport, you must visit Nature\'s Way Caf\\u00e9, only after that visit Peet\'s Coffee & Tea, after visiting Peet\'s Coffee & Tea, visit Kinross Building South, visit each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=799 request_id=86b2bea7420d5f4684141cebfa94a5c6 response_code=200
Extracting referring expressions from utterance: 72/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Gayley Center, only once while avoiding Village Center Newsstand, then visit Village Center Newsstand, once while avoiding TCT Foods, only after visiting TCT Foods, once visit The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=825 request_id=102562337f1e7a722010349f3e440808 response_code=200
Extracting referring expressions from utterance: 73/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Denny\'s, only once while avoiding London Cleaners, then visit London Cleaners, once while avoiding Peet\'s Coffee & Tea, only after visiting Peet\'s Coffee & Tea, once visit Noah\'s Bagels\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=725 request_id=d00a774eea967c29a17f995f0d0f7684 response_code=200
Extracting referring expressions from utterance: 74/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Parking 36, Kinross Building South, The Gayley Building, Mio Babbo\'s, once do not visit Kinross Building South, without visiting Parking 36, and do not visit Kinross Building South, without visiting The Gayley Building, do not visit Mio Babbo\'s, without visiting The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=801 request_id=a67ea0e6b7ed3064b00c864205c22186 response_code=200
Extracting referring expressions from utterance: 75/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Subway, Nature\'s Way Caf\\u00e9, Red Pelican Music, Urban Outfitters, once do not visit Nature\'s Way Caf\\u00e9, without visiting Subway, and do not visit Nature\'s Way Caf\\u00e9, without visiting Red Pelican Music, do not visit Urban Outfitters, without visiting Red Pelican Music\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=788 request_id=1e7c02e690fe9ae54a26b65bd9fa29b7 response_code=200
Extracting referring expressions from utterance: 76/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Poke Bar, then Novel Cafe Westwood, then Starbucks, then Plaza la Reina, follow this strict order and visit each location only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=838 request_id=e9e608829cca645d2335edbcfb89242e response_code=200
Extracting referring expressions from utterance: 77/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit UTLA Beauty, then Peet\'s Coffee & Tea, then Victoria\'s Secret, then London Cleaners, follow this strict order and visit each location only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=665 request_id=2e944a2307a6260feb68657f98794249 response_code=200
Extracting referring expressions from utterance: 78/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please go to Iso Fusion Caf\\u00e9, then Village Center Newsstand, then London Cleaners, then Plaza la Reina, in that specific order without revisiting previously visited location\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=633 request_id=17c8f1a3d32d204032129eeeac18f1a8 response_code=200
Extracting referring expressions from utterance: 79/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please go to Plaza la Reina, then Subway, then Westwood\'s Village Square, then Gayley Center, in that specific order without revisiting previously visited location\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1007 request_id=6ceb023a66de4dcdd82e7caa2c61df32 response_code=200
Extracting referring expressions from utterance: 80/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to UTLA Beauty, once without visiting Iso Fusion Caf\\u00e9, then go to Iso Fusion Caf\\u00e9, once without visiting Westwood Sporting Goods, then go to Westwood Sporting Goods, once without visiting Victoria\'s Secret, finally go to Victoria\'s Secret\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1114 request_id=4ef7e7b8d16a4e3693c226a8af5e620a response_code=200
Extracting referring expressions from utterance: 81/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Subway, once without visiting Janss Dome, then go to Janss Dome, once without visiting Mongol BBQ, then go to Mongol BBQ, once without visiting UCLA Extension - Westwood Village Center, finally go to UCLA Extension - Westwood Village Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=988 request_id=ccda99e1cf601d13b0faa8dd394c0c8d response_code=200
Extracting referring expressions from utterance: 82/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Gayley & Lindbrook Apartments, once then go to Westwood Wilshire, once while avoiding Mio Babbo\'s, then go to Mio Babbo\'s, once while avoiding U-Mini, finally go to U-Mini\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=931 request_id=b32b36e045205ff249e0c13fb8d268d1 response_code=200
Extracting referring expressions from utterance: 83/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Westwood Sporting Goods, once then go to Gayley & Lindbrook Apartments, once while avoiding Janss Dome, then go to Janss Dome, once while avoiding Peet\'s Coffee & Tea, finally go to Peet\'s Coffee & Tea\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=916 request_id=570488cd0137c69673c6024bff6a564f response_code=200
Extracting referring expressions from utterance: 84/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Westwood Wilshire, without visiting Poke Bar, then go to Poke Bar, without visiting Janss Dome, then go to Janss Dome, without visiting Yogurtland, finally go to Yogurtland, while only visiting each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=531 request_id=5d7820595d55619ff03106cafc777d87 response_code=200
Extracting referring expressions from utterance: 85/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Mio Babbo\'s, without visiting Stone Canyon Creek (underground), then go to Stone Canyon Creek (underground), without visiting Peet\'s Coffee & Tea, then go to Peet\'s Coffee & Tea, without visiting UCLA Extension - Lindbrook Center, finally go to UCLA Extension - Lindbrook Center, while only visiting each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 369
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1147 request_id=9c4cedb567dfbec4b36bba420ff1fcad response_code=200
Extracting referring expressions from utterance: 86/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Westwood\'s Village Square, then Ike\'s Place, then Poke Bar, and then Occidental Petroleum Heliport, in that strict order without returning to previously visited locations\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=846 request_id=c4ab38e1b7cb8f02c895e0b0ae40a5fc response_code=200
Extracting referring expressions from utterance: 87/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Plaza la Reina, then Westwood\'s Village Square, then Noah\'s Bagels, and then 800 Degrees, in that strict order without returning to previously visited locations\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1247 request_id=fb7821edebf75aed0c77e6ad68bbc3a7 response_code=200
Extracting referring expressions from utterance: 88/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never stop visiting Subway, Westwood\'s Village Square, Mongol BBQ, and Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=401 request_id=ecacbb559e05e666265fef7038eb32c2 response_code=200
Extracting referring expressions from utterance: 89/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never stop visiting Noah\'s Bagels, Novel Cafe Westwood, Yogurtland, and Iso Fusion Caf\\u00e9\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=629 request_id=ddb928f255f5831ef909dc571c188b4d response_code=200
Extracting referring expressions from utterance: 90/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: frequent Parking 32, Veggie Grill, Urban Outfitters, and UTLA Beauty, infinitely in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=655 request_id=2fbb39f7dd637cbb4179c3c69dbb19b1 response_code=200
Extracting referring expressions from utterance: 91/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: frequent Westwood Wilshire, Starbucks, 800 Degrees, and Westwood Sporting Goods, infinitely in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1111 request_id=76c92a06997a60585d4d05657db16347 response_code=200
Extracting referring expressions from utterance: 92/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please keep visiting Occidental Petroleum Heliport, UTLA Beauty, Kinross Building South, and Starbucks, without stopping\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=565 request_id=16d0763a521d3ab4d79b119cafeec79f response_code=200
Extracting referring expressions from utterance: 93/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please keep visiting bibigo, Plaza la Reina, Village Center Newsstand, and Gayley & Lindbrook Apartments, without stopping\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=900 request_id=d3955fead90534bca00e4dfdc9af9894 response_code=200
Extracting referring expressions from utterance: 94/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure TCT Foods, Denny\'s, Westwood Sporting Goods, and Mongol BBQ, are visited infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=855 request_id=c847d916dd2cf8fa0aa9a7f1e2cdfdaa response_code=200
Extracting referring expressions from utterance: 95/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Westwood Wilshire, UCLA Extension - Lindbrook Center, Noah\'s Bagels, and Plaza la Reina, are visited infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=93b99b5dbdc4d9e248282cc019b790c8 response_code=200
Extracting referring expressions from utterance: 96/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Novel Cafe Westwood, Gayley & Lindbrook Apartments, Ike\'s Place, and Veggie Grill, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=900 request_id=3a5f0ac4bc93c80e593c99af89f4d22f response_code=200
Extracting referring expressions from utterance: 97/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Subway, Ike\'s Place, bibigo, and London Cleaners, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=b25e63acd79a2df0faade08ca471f8d6 response_code=200
Extracting referring expressions from utterance: 98/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit locations Westwood\'s Village Square, TCT Foods, Denny\'s, and UCLA Extension - Lindbrook Center, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1237 request_id=6fb836509c53dcaf21de90d2815a544a response_code=200
Extracting referring expressions from utterance: 99/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit locations Starbucks, Poke Bar, Kinross Building South, and Parking 32, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=700 request_id=e005d1f458b92dc14382f8430f091c0e response_code=200
Extracting referring expressions from utterance: 100/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Westwood\'s Village Square, Kinross Building South, Starbucks, and Yogurtland\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1970 request_id=69397273d67fb508c0399e2e6ec06564 response_code=200
Extracting referring expressions from utterance: 101/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Plaza la Reina, Occidental Petroleum Heliport, UCLA Extension - Westwood Village Center, and Westwood Wilshire\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 374
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=742 request_id=b5f94025c42d351c42ee22fe167992aa response_code=200
Extracting referring expressions from utterance: 102/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Nature\'s Way Caf\\u00e9, Occidental Petroleum Heliport, bibigo, and UCLA Extension - Lindbrook Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=751 request_id=4e6302a4fb8ffe075904a6d16a25f254 response_code=200
Extracting referring expressions from utterance: 103/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Red Pelican Music, Nature\'s Way Caf\\u00e9, Westwood Sporting Goods, and Plaza la Reina\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=904 request_id=a3317f56c024ac24e1af18062b51cd92 response_code=200
Extracting referring expressions from utterance: 104/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Parking 36, TCT Foods, Gayley & Lindbrook Apartments, and Mio Babbo\'s, over and over again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=32e6bc5ea30e1b6d17dde30ef29414de response_code=200
Extracting referring expressions from utterance: 105/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to TCT Foods, Subway, Gayley & Lindbrook Apartments, and Noah\'s Bagels, over and over again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=06ceac53b55a42ad6a6dd7e90c9150cb response_code=200
Extracting referring expressions from utterance: 106/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue to stop at Nature\'s Way Caf\\u00e9, Subway, Village Center Newsstand, and Occidental Petroleum Heliport\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1059 request_id=78c061b01974885a0814ea9dfe225247 response_code=200
Extracting referring expressions from utterance: 107/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue to stop at Gayley Center, Occidental Petroleum Heliport, 800 Degrees, and Ike\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=740 request_id=68b160e1e4ab3365d552b1c25c34ea8e response_code=200
Extracting referring expressions from utterance: 108/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continuously visit Starbucks, Denny\'s, Village Center Newsstand, and UTLA Beauty\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=597 request_id=74b9650a1c8f9815e85b84acccf252e8 response_code=200
Extracting referring expressions from utterance: 109/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continuously visit Red Pelican Music, Gayley & Lindbrook Apartments, UCLA Extension - Westwood Village Center, and Poke Bar\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 368
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=743 request_id=2e8c9e6e040cab281137735af33f8eb8 response_code=200
Extracting referring expressions from utterance: 110/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to 800 Degrees, Occidental Petroleum Heliport, Veggie Grill, and UTLA Beauty, Occidental Petroleum Heliport, finite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=781 request_id=39b7c9ce4409ae9384bf27a6e4399df6 response_code=200
Extracting referring expressions from utterance: 111/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Parking 36, Veggie Grill, Peet\'s Coffee & Tea, and Denny\'s, Veggie Grill, finite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=aae0e511da46b4b16074dfbf5840cc21 response_code=200
Extracting referring expressions from utterance: 112/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: perpetually travel to Iso Fusion Caf\\u00e9, Subway, and Victoria\'s Secret\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=409 request_id=10899524533bf6c4647d63cb3371c6bf response_code=200
Extracting referring expressions from utterance: 113/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: perpetually travel to UTLA Beauty, Nature\'s Way Caf\\u00e9, and Red Pelican Music\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=431 request_id=dc629d2dca612f1ebeabb859930ac70d response_code=200
Extracting referring expressions from utterance: 114/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: explore Kinross Building South, Urban Outfitters, and Parking 36, endlessy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=522 request_id=981f60fc34668716afb4532b39b122ab response_code=200
Extracting referring expressions from utterance: 115/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: explore Urban Outfitters, Westwood\'s Village Square, and Ike\'s Place, endlessy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=600 request_id=d8e0ee25581224f41198f57874fb220a response_code=200
Extracting referring expressions from utterance: 116/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are prohibited from not infinitely going to Kinross Building South, UTLA Beauty, Iso Fusion Caf\\u00e9, and Red Pelican Music\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=762 request_id=401812b1333b533d5951a5aa2759248d response_code=200
Extracting referring expressions from utterance: 117/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are prohibited from not infinitely going to Mio Babbo\'s, Stone Canyon Creek (underground), Ike\'s Place, and Parking 32\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=856 request_id=fbc1b581efe0810f6d7c32083ff1cc53 response_code=200
Extracting referring expressions from utterance: 118/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Starbucks, UCLA Extension - Westwood Village Center, Westwood Wilshire, and Native Foods, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 352
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=732 request_id=1052798f76e609770b9085cb1db12e6d response_code=200
Extracting referring expressions from utterance: 119/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting UTLA Beauty, London Cleaners, Gayley & Lindbrook Apartments, and Native Foods, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1022 request_id=6e11fb3b39fcc754d1e73d3dbf7f8a10 response_code=200
Extracting referring expressions from utterance: 120/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Westwood\'s Village Square, Stone Canyon Creek (underground), UTLA Beauty, and Victoria\'s Secret, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=843 request_id=34f305bd3a08c2707538a3c4cf8c767b response_code=200
Extracting referring expressions from utterance: 121/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to The Gayley Building, U-Mini, London Cleaners, and Parking 32, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=955 request_id=7d6444a78b7b7ecda91db342369369ae response_code=200
Extracting referring expressions from utterance: 122/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Ike\'s Place, Kinross Building South, Plaza la Reina, and U-Mini, in any order infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=886 request_id=f365405039449185d421b438c1daecfd response_code=200
Extracting referring expressions from utterance: 123/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Mongol BBQ, bibigo, Veggie Grill, and Kinross Building South, in any order infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=904 request_id=39b574fbff1b17dca393108d3eb77c5a response_code=200
Extracting referring expressions from utterance: 124/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Noah\'s Bagels, bibigo, Novel Cafe Westwood, and Gayley & Lindbrook Apartments, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1053 request_id=a3fc77c7c4451193737f6c26c423d13d response_code=200
Extracting referring expressions from utterance: 125/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Mio Babbo\'s, Denny\'s, London Cleaners, and bibigo, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=595 request_id=78d3d7e1f0e923b8a3e6f9bb0db9c913 response_code=200
Extracting referring expressions from utterance: 126/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop going to Native Foods, Plaza la Reina, Mio Babbo\'s, and Parking 32, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=949 request_id=a906871511f742b6c2edc8ab12aef8a1 response_code=200
Extracting referring expressions from utterance: 127/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop going to Native Foods, Starbucks, Ike\'s Place, and Parking 36, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1008 request_id=938dead4785afeb5a917a079bdcb4585 response_code=200
Extracting referring expressions from utterance: 128/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Yogurtland, Iso Fusion Caf\\u00e9, 800 Degrees, and Westwood Wilshire, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=810 request_id=f5affe0cf25aa82c3855cf27fda83a62 response_code=200
Extracting referring expressions from utterance: 129/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Westwood Sporting Goods, Parking 36, bibigo, and Gayley Center, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=730 request_id=61788e77fe9844283c99c4a2f8ad1fdb response_code=200
Extracting referring expressions from utterance: 130/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Nature\'s Way Caf\\u00e9, Poke Bar, Urban Outfitters, and Westwood Wilshire, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=692 request_id=842e92f040287fca50bf491c513a61ef response_code=200
Extracting referring expressions from utterance: 131/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Parking 36, bibigo, Peet\'s Coffee & Tea, and Native Foods, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=845 request_id=d8c1c9eefe4ff25c5b9ee9f6a4c19d2f response_code=200
Extracting referring expressions from utterance: 132/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue visiting UTLA Beauty, Gayley Center, UCLA Extension - Westwood Village Center, and Mio Babbo\'s, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1001 request_id=1b53acf9e588c0d1a918049da46d66ce response_code=200
Extracting referring expressions from utterance: 133/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue visiting Stone Canyon Creek (underground), Westwood Wilshire, Village Center Newsstand, and Denny\'s, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1013 request_id=80bbba6101168d6ed8b024d1a8b4a943 response_code=200
Extracting referring expressions from utterance: 134/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Poke Bar, Ike\'s Place, Parking 36, and Gayley Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=614 request_id=3609c7ee84139ad0f4310b3d8e4bb246 response_code=200
Extracting referring expressions from utterance: 135/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Nature\'s Way Caf\\u00e9, The Gayley Building, Westwood Wilshire, and Stone Canyon Creek (underground)\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=755 request_id=ef2c791f96b3b0827ad83359e48c574e response_code=200
Extracting referring expressions from utterance: 136/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to UTLA Beauty, Ike\'s Place, or Poke Bar\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=410 request_id=89cda6bac7310e0b2a7af1ba9ea9d628 response_code=200
Extracting referring expressions from utterance: 137/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Mio Babbo\'s, Kinross Building South, or The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=673 request_id=c8f506e467a58827b22768b488abce3c response_code=200
Extracting referring expressions from utterance: 138/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never visit U-Mini, Ike\'s Place, or UCLA Extension - Westwood Village Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=662 request_id=83a203865190e840d13ad85e5edf4c3d response_code=200
Extracting referring expressions from utterance: 139/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never visit London Cleaners, Janss Dome, or The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=3ced04b9f00bc86175da07343f0a0b48 response_code=200
Extracting referring expressions from utterance: 140/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to TCT Foods, Poke Bar, and Gayley Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=717 request_id=bd4582a92ed82f623eb1bf541ed55b8d response_code=200
Extracting referring expressions from utterance: 141/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to bibigo, Stone Canyon Creek (underground), and Peet\'s Coffee & Tea\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1427 request_id=e43536aae04ff1f60113082b083fc864 response_code=200
Extracting referring expressions from utterance: 142/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Starbucks, 800 Degrees, and bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=659 request_id=fcf43837740646bd801f00fe954ffe39 response_code=200
Extracting referring expressions from utterance: 143/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Westwood Sporting Goods, Gayley & Lindbrook Apartments, and Victoria\'s Secret\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=902 request_id=a22e9343e7f595414465b9e33efb6ed3 response_code=200
Extracting referring expressions from utterance: 144/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid UTLA Beauty, Urban Outfitters, and Noah\'s Bagels, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=675 request_id=556184a772e62b2e5363fbd36836d805 response_code=200
Extracting referring expressions from utterance: 145/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid UCLA Extension - Lindbrook Center, UCLA Extension - Westwood Village Center, and Mio Babbo\'s, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1416 request_id=4a3d0c1e7271b1c08e9ab82e0f6c29ad response_code=200
Extracting referring expressions from utterance: 146/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit Native Foods, U-Mini, or Urban Outfitters, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=640 request_id=9f08e1c1a7c35f86b1fafb0651f57ceb response_code=200
Extracting referring expressions from utterance: 147/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit Poke Bar, Urban Outfitters, or Kinross Building South, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=aa8f663568101b472750084e7c1300a4 response_code=200
Extracting referring expressions from utterance: 148/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Peet\'s Coffee & Tea, Westwood Sporting Goods, or Westwood Wilshire\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=930 request_id=fa4d0f66167a00df22d3e7d2722728c8 response_code=200
Extracting referring expressions from utterance: 149/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Westwood Wilshire, Iso Fusion Caf\\u00e9, or Occidental Petroleum Heliport\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=06d566feaab039e854d72257c405f732 response_code=200
Extracting referring expressions from utterance: 150/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Starbucks, Ike\'s Place, and Janss Dome\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=583 request_id=2351d31e07e0c9c7d9a97b299bcb9ff5 response_code=200
Extracting referring expressions from utterance: 151/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Veggie Grill, Westwood Sporting Goods, and Poke Bar\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=774 request_id=8e067d7a570ca88e6c522f454bf5091d response_code=200
Extracting referring expressions from utterance: 152/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit either one among Urban Outfitters, Westwood Sporting Goods, and bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=487 request_id=e1ec557853086dcc8fc491bb398948f5 response_code=200
Extracting referring expressions from utterance: 153/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit either one among Occidental Petroleum Heliport, Plaza la Reina, and Gayley & Lindbrook Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=713 request_id=d20e641e6c677652f0a8fe96b7f65d91 response_code=200
Extracting referring expressions from utterance: 154/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach the locations Peet\'s Coffee & Tea, Noah\'s Bagels, and TCT Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=695 request_id=17891629bf84b1c06ff9c9e70876731e response_code=200
Extracting referring expressions from utterance: 155/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach the locations UTLA Beauty, Noah\'s Bagels, and Westwood Sporting Goods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=598 request_id=3391e66dc54abe87179a3e6ebb806da0 response_code=200
Extracting referring expressions from utterance: 156/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach U-Mini, ensure that you never reach TCT Foods, and ensure that you never reach Mongol BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=579 request_id=ae1b056a6e132308927ed18996614427 response_code=200
Extracting referring expressions from utterance: 157/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach Parking 36, ensure that you never reach Kinross Building South, and ensure that you never reach Veggie Grill\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=469 request_id=c730a6e708aa7bafebb5b0b8812218cf response_code=200
Extracting referring expressions from utterance: 158/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Gayley Center, Mongol BBQ, and Poke Bar, should never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=537 request_id=f016695014966238ac64d3dccd977334 response_code=200
Extracting referring expressions from utterance: 159/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Mongol BBQ, London Cleaners, and Parking 36, should never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=b13c3faeb778384b524e5caadb43938b response_code=200
Extracting referring expressions from utterance: 160/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Iso Fusion Caf\\u00e9, Westwood Sporting Goods, or 800 Degrees\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=27229f58de4d9bce8284130d0cd9a565 response_code=200
Extracting referring expressions from utterance: 161/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Nature\'s Way Caf\\u00e9, Starbucks, or U-Mini\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=561 request_id=63ae9b63854509bd428cd9e70dc4d202 response_code=200
Extracting referring expressions from utterance: 162/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Native Foods, Victoria\'s Secret, and Village Center Newsstand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=622 request_id=6322f1f1df1c103a7115deb64074ce5a response_code=200
Extracting referring expressions from utterance: 163/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Kinross Building South, UCLA Extension - Westwood Village Center, and U-Mini\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=830 request_id=b61759d75e42bfa3f775f3bfae31d88f response_code=200
Extracting referring expressions from utterance: 164/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Village Center Newsstand, Mio Babbo\'s, and Nature\'s Way Caf\\u00e9, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=699 request_id=031b685d172284ea5de54e515ff72a5e response_code=200
Extracting referring expressions from utterance: 165/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Iso Fusion Caf\\u00e9, Occidental Petroleum Heliport, and Nature\'s Way Caf\\u00e9, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=532 request_id=57491ea36f78b3b59442d819935c7225 response_code=200
Extracting referring expressions from utterance: 166/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Noah\'s Bagels, Occidental Petroleum Heliport, and bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1044 request_id=2e7b628deb843fbd6cd3847dd402f6db response_code=200
Extracting referring expressions from utterance: 167/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Village Center Newsstand, Native Foods, and Mongol BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=463 request_id=37a19215720d51ca04d7ad06b42c51e1 response_code=200
Extracting referring expressions from utterance: 168/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Iso Fusion Caf\\u00e9, Victoria\'s Secret, and Mio Babbo\'s, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=943 request_id=761fa1af197115fe625e066d11c2d202 response_code=200
Extracting referring expressions from utterance: 169/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Nature\'s Way Caf\\u00e9, Peet\'s Coffee & Tea, and U-Mini, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=be66cbceb7a5567e217f5b81d08c1469 response_code=200
Extracting referring expressions from utterance: 170/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Poke Bar, Gayley Center, or Native Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=515 request_id=7f633b7dcc51494d469ba96042d3f339 response_code=200
Extracting referring expressions from utterance: 171/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Peet\'s Coffee & Tea, bibigo, or U-Mini\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=910 request_id=5a17ed2033ef3d3ac63489165fc6bc41 response_code=200
Extracting referring expressions from utterance: 172/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid The Gayley Building, Yogurtland, and Nature\'s Way Caf\\u00e9, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=434 request_id=e94634a995e4427460002bc112a5b72e response_code=200
Extracting referring expressions from utterance: 173/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid London Cleaners, Gayley Center, and Westwood Sporting Goods, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=502 request_id=a0da2f1474470985fc3e870c4a0a5c51 response_code=200
Extracting referring expressions from utterance: 174/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to UCLA Extension - Westwood Village Center, Mio Babbo\'s, or Westwood Wilshire\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=755 request_id=f1e70a1a4e335be74e54b6585a068ef8 response_code=200
Extracting referring expressions from utterance: 175/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Red Pelican Music, Plaza la Reina, or Village Center Newsstand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=655 request_id=4708dd2d14a8071a881ccc1f37343cb9 response_code=200
Extracting referring expressions from utterance: 176/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Parking 36, Gayley Center, or Iso Fusion Caf\\u00e9, can never become true at any instant\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=540 request_id=dd0cec1176f57e816fa83de3537ac707 response_code=200
Extracting referring expressions from utterance: 177/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Village Center Newsstand, Gayley & Lindbrook Apartments, or Parking 32, can never become true at any instant\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=672 request_id=aaa007233e0f72e08796349288c4e892 response_code=200
Extracting referring expressions from utterance: 178/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that London Cleaners, UTLA Beauty, and Janss Dome, never hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=506 request_id=54ff6cbfe13d4939ba4e9aed518e0001 response_code=200
Extracting referring expressions from utterance: 179/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that Denny\'s, Gayley & Lindbrook Apartments, and Stone Canyon Creek (underground), never hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=990 request_id=27b5fb043d7faf9c6454d0021f7b9d9f response_code=200
Extracting referring expressions from utterance: 180/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit The Gayley Building, U-Mini, Victoria\'s Secret, or Stone Canyon Creek (underground)\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=938 request_id=c9795851090b2fcf130dfa910822bad0 response_code=200
Extracting referring expressions from utterance: 181/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit UTLA Beauty, Westwood Sporting Goods, Parking 32, or 800 Degrees\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=683 request_id=e86895e434df9c1741684e3ea621166b response_code=200
Extracting referring expressions from utterance: 182/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Veggie Grill, Stone Canyon Creek (underground), Victoria\'s Secret, or Native Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=561 request_id=028ca6a67c14e0d5efbd3ee84e37b23a response_code=200
Extracting referring expressions from utterance: 183/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Gayley Center, Red Pelican Music, Stone Canyon Creek (underground), or Native Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=ea666880466487ee5bd391598eda48ab response_code=200
Extracting referring expressions from utterance: 184/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to UTLA Beauty, UCLA Extension - Lindbrook Center, The Gayley Building, or Nature\'s Way Caf\\u00e9, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1014 request_id=92a46c365b2734a4c44373710160d01a response_code=200
Extracting referring expressions from utterance: 185/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Parking 32, Yogurtland, Janss Dome, or UCLA Extension - Westwood Village Center, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=983 request_id=8332fc216226eeb2c2b2f68f920625bd response_code=200
Extracting referring expressions from utterance: 186/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Victoria\'s Secret, Stone Canyon Creek (underground), Ike\'s Place, or Gayley & Lindbrook Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1164 request_id=89a67e6093885052d009704cec934a7b response_code=200
Extracting referring expressions from utterance: 187/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit U-Mini, Nature\'s Way Caf\\u00e9, Iso Fusion Caf\\u00e9, or Poke Bar\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=835 request_id=49932f19656ccfa3a869d9d30dbb96ee response_code=200
Extracting referring expressions from utterance: 188/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Noah\'s Bagels, 800 Degrees, Stone Canyon Creek (underground), or Mongol BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1004 request_id=2ade31490ed1a9b68e15f2d7e93c6851 response_code=200
Extracting referring expressions from utterance: 189/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to 800 Degrees, Gayley Center, Westwood Wilshire, or Gayley & Lindbrook Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=679 request_id=aac58d5a112b3b6442ae59e1019d6414 response_code=200
Extracting referring expressions from utterance: 190/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Janss Dome, Yogurtland, Native Foods, and Plaza la Reina\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1332 request_id=cef5dac2ef9d6963e773475ac74f1a38 response_code=200
Extracting referring expressions from utterance: 191/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Westwood Sporting Goods, Mio Babbo\'s, Red Pelican Music, and Westwood Wilshire\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=841 request_id=661408921fc3175e3d23a18759bd9915 response_code=200
Extracting referring expressions from utterance: 192/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Westwood Sporting Goods, Starbucks, Westwood\'s Village Square, and Parking 36, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=691 request_id=d29b90bd2afb071fd15e661c67a0b61a response_code=200
Extracting referring expressions from utterance: 193/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid London Cleaners, Native Foods, Village Center Newsstand, and Westwood Wilshire, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=629 request_id=bfa8ec0ef91264b07b158713c55f42a1 response_code=200
Extracting referring expressions from utterance: 194/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit any locations among The Gayley Building, Gayley & Lindbrook Apartments, Ike\'s Place, Plaza la Reina\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=973 request_id=703fc8bbaf3e8e7ac3401e20549c0867 response_code=200
Extracting referring expressions from utterance: 195/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit any locations among Urban Outfitters, Iso Fusion Caf\\u00e9, Gayley Center, Parking 36\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=961 request_id=bf8a9649c582f08ba9175a0511eca06a response_code=200
Extracting referring expressions from utterance: 196/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure to not reach any of Mio Babbo\'s, London Cleaners, Red Pelican Music, and bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=587 request_id=c9d9a4005e6e7bf304805c35ef5a1574 response_code=200
Extracting referring expressions from utterance: 197/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure to not reach any of Plaza la Reina, Westwood Sporting Goods, Stone Canyon Creek (underground), and Kinross Building South\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 365
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1235 request_id=488abc0acff59fb9407f0faf2d5be7b3 response_code=200
Extracting referring expressions from utterance: 198/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to bibigo, Nature\'s Way Caf\\u00e9, Gayley & Lindbrook Apartments, and Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=993 request_id=afe6c0b483574c5fc00b0ac3dd7c4471 response_code=200
Extracting referring expressions from utterance: 199/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Janss Dome, Kinross Building South, Urban Outfitters, and Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=755b14ed55a25f74f68eb05df39149bf response_code=200
Extracting referring expressions from utterance: 200/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Plaza la Reina, Gayley & Lindbrook Apartments, Parking 32, and Native Foods, must never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1009 request_id=1e37f330070733539e0e65b72412eac1 response_code=200
Extracting referring expressions from utterance: 201/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Mio Babbo\'s, Gayley Center, U-Mini, and Parking 32, must never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=755 request_id=b5977a83a2c53f53592221ca8492e7b9 response_code=200
Extracting referring expressions from utterance: 202/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Denny\'s, never go to Occidental Petroleum Heliport, never go to Novel Cafe Westwood, and never go to Mongol BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=588 request_id=cf271a4b2cc679511425968827bc4471 response_code=200
Extracting referring expressions from utterance: 203/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Kinross Building South, never go to Occidental Petroleum Heliport, never go to Mongol BBQ, and never go to Subway\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=909 request_id=0ad75bc5b80f949d55a23e22e553022c response_code=200
Extracting referring expressions from utterance: 204/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to UCLA Extension - Lindbrook Center, Poke Bar, Parking 36, or bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1119 request_id=3052c76af5dade9058c295bd7f8b81f0 response_code=200
Extracting referring expressions from utterance: 205/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Plaza la Reina, Yogurtland, London Cleaners, or Westwood Wilshire\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=984 request_id=3a244d5f6a4764e62fca2bb54b975d5f response_code=200
Extracting referring expressions from utterance: 206/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to UTLA Beauty, Native Foods, TCT Foods, or Novel Cafe Westwood\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=745 request_id=18ccc9206fb66c37165a2101bfe56f4b response_code=200
Extracting referring expressions from utterance: 207/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Nature\'s Way Caf\\u00e9, Starbucks, Peet\'s Coffee & Tea, or Parking 32\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1014 request_id=55389731ee75eabac6b1b827101d079a response_code=200
Extracting referring expressions from utterance: 208/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but TCT Foods, Novel Cafe Westwood, Peet\'s Coffee & Tea, and Gayley & Lindbrook Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=687 request_id=9b08238ca31629b17157da1050ad1cf2 response_code=200
Extracting referring expressions from utterance: 209/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Village Center Newsstand, UCLA Extension - Lindbrook Center, Plaza la Reina, and Westwood\'s Village Square\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 370
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=815 request_id=32b5c921e4b4d13d0bef1b45eb13ee97 response_code=200
Extracting referring expressions from utterance: 210/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Ike\'s Place, Veggie Grill, 800 Degrees, and TCT Foods, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=422 request_id=6dccd8f059df7d39f504b0aa6a044843 response_code=200
Extracting referring expressions from utterance: 211/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Noah\'s Bagels, London Cleaners, Yogurtland, and Kinross Building South, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=3621e28357bcfff963d19ec7791b3b0e response_code=200
Extracting referring expressions from utterance: 212/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Mio Babbo\'s, Red Pelican Music, UTLA Beauty, and London Cleaners\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=876 request_id=76cbd4687122888f7426cd31e715a336 response_code=200
Extracting referring expressions from utterance: 213/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Peet\'s Coffee & Tea, Occidental Petroleum Heliport, Kinross Building South, and Iso Fusion Caf\\u00e9\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=926 request_id=40456d059d25569dd93f219a8cf98b4d response_code=200
Extracting referring expressions from utterance: 214/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid 800 Degrees, Denny\'s, Peet\'s Coffee & Tea, and Subway, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=849 request_id=c004b30af4d96877f6d73a087cb8fb6c response_code=200
Extracting referring expressions from utterance: 215/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Iso Fusion Caf\\u00e9, U-Mini, Gayley Center, and Denny\'s, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=684 request_id=ea333e5a727a2568a55a543561173fa2 response_code=200
Extracting referring expressions from utterance: 216/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Noah\'s Bagels, London Cleaners, U-Mini, or Parking 32\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=506 request_id=24ae45662e1836047aa0fe207517ab66 response_code=200
Extracting referring expressions from utterance: 217/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to bibigo, Westwood Wilshire, Novel Cafe Westwood, or Subway\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=549 request_id=f370b2e0154a96e722d4e824cad287ca response_code=200
Extracting referring expressions from utterance: 218/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Mongol BBQ, Denny\'s, Parking 32, and Kinross Building South, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=506 request_id=ee1a5e55dd49a663d0361925e5a91d6c response_code=200
Extracting referring expressions from utterance: 219/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid TCT Foods, Subway, Westwood Sporting Goods, and U-Mini, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=619 request_id=50cf811d508eb6ebf031b3af461ff5a2 response_code=200
Extracting referring expressions from utterance: 220/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Novel Cafe Westwood, Urban Outfitters, Red Pelican Music, or Village Center Newsstand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=602 request_id=5331a7eb19641ad7e3e23fd045756ee9 response_code=200
Extracting referring expressions from utterance: 221/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to UCLA Extension - Lindbrook Center, Westwood Sporting Goods, Nature\'s Way Caf\\u00e9, or Westwood Wilshire\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=850 request_id=c8d787c3108fe798f80501d5d5e85d1c response_code=200
Extracting referring expressions from utterance: 222/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: 800 Degrees, Kinross Building South, Parking 36, and Starbucks, must never be allowed to be true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=9d927a02e1ae2d9da51740dfdae38550 response_code=200
Extracting referring expressions from utterance: 223/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Westwood Sporting Goods, Subway, Westwood\'s Village Square, and Plaza la Reina, must never be allowed to be true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1077 request_id=4bae7bc5b97c87952ac8ac9b38f5b2a3 response_code=200
Extracting referring expressions from utterance: 224/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go through any of Kinross Building South, UTLA Beauty, Janss Dome, or Subway\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=504 request_id=56c0ac24c068e12d67d6f1c457211874 response_code=200
Extracting referring expressions from utterance: 225/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go through any of UCLA Extension - Westwood Village Center, bibigo, Gayley & Lindbrook Apartments, or The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 368
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=818 request_id=d57f22f0330c6621bf39648b374ea48a response_code=200
Extracting referring expressions from utterance: 226/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit London Cleaners, Occidental Petroleum Heliport, Noah\'s Bagels, Janss Dome, or 800 Degrees\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1070 request_id=ceb5827daff78c40af5c3e8badae5bd9 response_code=200
Extracting referring expressions from utterance: 227/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit bibigo, Plaza la Reina, Noah\'s Bagels, Janss Dome, or UTLA Beauty\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=740 request_id=427824ac6ba93f9a2f4bbd0e50b886ac response_code=200
Extracting referring expressions from utterance: 228/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Iso Fusion Caf\\u00e9, Poke Bar, bibigo, Yogurtland, or Peet\'s Coffee & Tea\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=987 request_id=6d225bc6009d416eace96a960717eb78 response_code=200
Extracting referring expressions from utterance: 229/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to The Gayley Building, London Cleaners, 800 Degrees, Westwood Wilshire, or Parking 36\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=694 request_id=f9e3a5c3f3d20e1247c949ad2ca2382e response_code=200
Extracting referring expressions from utterance: 230/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Village Center Newsstand, Stone Canyon Creek (underground), Occidental Petroleum Heliport, Victoria\'s Secret, or Mongol BBQ, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 389
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1211 request_id=e0e84672efaddc2f2d1360e62b54d70b response_code=200
Extracting referring expressions from utterance: 231/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Veggie Grill, U-Mini, Gayley Center, Iso Fusion Caf\\u00e9, or Starbucks, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=737 request_id=40f19041ff443626e4484660a10cb7b7 response_code=200
Extracting referring expressions from utterance: 232/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Westwood\'s Village Square, Mio Babbo\'s, Victoria\'s Secret, UTLA Beauty, or The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=889 request_id=6c50f3481dbcb535ed5d45f30a94e17e response_code=200
Extracting referring expressions from utterance: 233/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Kinross Building South, U-Mini, Noah\'s Bagels, Plaza la Reina, or bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=908 request_id=145964f3b62a51c54c7b1970d18e6923 response_code=200
Extracting referring expressions from utterance: 234/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Red Pelican Music, UCLA Extension - Westwood Village Center, Victoria\'s Secret, Nature\'s Way Caf\\u00e9, and Denny\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=843 request_id=705551ea34ce14f762b78e9addb80711 response_code=200
Extracting referring expressions from utterance: 235/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Stone Canyon Creek (underground), bibigo, Nature\'s Way Caf\\u00e9, Parking 36, and The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1239 request_id=7c00aed9b43fd2b899d670788b340442 response_code=200
Extracting referring expressions from utterance: 236/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Urban Outfitters, Poke Bar, Mongol BBQ, London Cleaners, and Janss Dome\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=861 request_id=b5b3a9a7286425128ab1e464103fa63c response_code=200
Extracting referring expressions from utterance: 237/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from 800 Degrees, Janss Dome, Denny\'s, Mio Babbo\'s, and Urban Outfitters\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1060 request_id=2ff6c65ea4024544aad02609e116983e response_code=200
Extracting referring expressions from utterance: 238/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid UCLA Extension - Westwood Village Center, Mio Babbo\'s, Village Center Newsstand, Nature\'s Way Caf\\u00e9, and Iso Fusion Caf\\u00e9, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1003 request_id=849c157b98ec882dc90280b552df2631 response_code=200
Extracting referring expressions from utterance: 239/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid TCT Foods, Iso Fusion Caf\\u00e9, Janss Dome, Kinross Building South, and Poke Bar, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1148 request_id=110cb6a75c8815b52ab629acfb7f99d0 response_code=200
Extracting referring expressions from utterance: 240/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Gayley & Lindbrook Apartments, never go to Westwood\'s Village Square, never go to Denny\'s, never reach Urban Outfitters, and never reach Nature\'s Way Caf\\u00e9\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1599 request_id=f18569dad6c4b98eb2f14086830ea2ea response_code=200
Extracting referring expressions from utterance: 241/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Victoria\'s Secret, never go to Westwood Wilshire, never go to Parking 36, never reach Ike\'s Place, and never reach Parking 32\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=804 request_id=4e6239b99d964c41a2ec27977ed578ac response_code=200
Extracting referring expressions from utterance: 242/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never reach the following locations U-Mini, Denny\'s, Yogurtland, Stone Canyon Creek (underground), and Plaza la Reina\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=800 request_id=d070cd2f3cf1c88903c4f6dc093b2aa3 response_code=200
Extracting referring expressions from utterance: 243/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never reach the following locations Stone Canyon Creek (underground), Denny\'s, Ike\'s Place, Gayley Center, and Urban Outfitters\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1039 request_id=f62b6fb002a138c91d129cbd4eb0eec7 response_code=200
Extracting referring expressions from utterance: 244/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that Ike\'s Place, Westwood\'s Village Square, Janss Dome, Urban Outfitters, and Subway, are never visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=779 request_id=95845644e7a4723fd9dcf8311404a1cc response_code=200
Extracting referring expressions from utterance: 245/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that TCT Foods, Kinross Building South, Native Foods, Starbucks, and U-Mini, are never visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=c1a09b162bca580d37bf35f161b396bb response_code=200
Extracting referring expressions from utterance: 246/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Parking 36, Victoria\'s Secret, Veggie Grill, Westwood Sporting Goods, and Village Center Newsstand, should never be reached\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=756 request_id=c3fa31e8b37e6656311fa26d2bb71357 response_code=200
Extracting referring expressions from utterance: 247/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Parking 32, UCLA Extension - Westwood Village Center, Occidental Petroleum Heliport, Westwood\'s Village Square, and Noah\'s Bagels, should never be reached\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 394
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=991 request_id=a2eee8f634d3b0c9c1725336fceb09df response_code=200
Extracting referring expressions from utterance: 248/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to London Cleaners, Noah\'s Bagels, Westwood Sporting Goods, Mio Babbo\'s, or bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=956 request_id=be2344adca727831f9eba9149eaf3379 response_code=200
Extracting referring expressions from utterance: 249/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Victoria\'s Secret, The Gayley Building, Gayley & Lindbrook Apartments, Westwood\'s Village Square, or Native Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 379
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1160 request_id=efb695a4c53eb5e771d3c4de2bf7443a response_code=200
Extracting referring expressions from utterance: 250/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Veggie Grill, Occidental Petroleum Heliport, Ike\'s Place, Nature\'s Way Caf\\u00e9, or Parking 32\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1151 request_id=6134925d6d3f342a9152b155f10880e1 response_code=200
Extracting referring expressions from utterance: 251/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Gayley Center, Peet\'s Coffee & Tea, Parking 36, Veggie Grill, or Stone Canyon Creek (underground)\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=922 request_id=1b067b62034b9fe850dd9b84c24b00ea response_code=200
Extracting referring expressions from utterance: 252/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Denny\'s, Westwood\'s Village Square, Yogurtland, Iso Fusion Caf\\u00e9, and Gayley Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=872 request_id=cb766d92ebd52b604d6acdfbc4f77bf0 response_code=200
Extracting referring expressions from utterance: 253/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Victoria\'s Secret, Occidental Petroleum Heliport, Veggie Grill, Starbucks, and The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=98633b5827c5d7613d3b0d559e5b2e27 response_code=200
Extracting referring expressions from utterance: 254/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Mongol BBQ, Parking 36, Ike\'s Place, Starbucks, and Iso Fusion Caf\\u00e9, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1008 request_id=b9ada5b4a98cf1f03b76e1cdbcfe40e5 response_code=200
Extracting referring expressions from utterance: 255/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Nature\'s Way Caf\\u00e9, Yogurtland, Veggie Grill, Red Pelican Music, and Poke Bar, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1002 request_id=6418f71ba1410df537cd531740c0daa9 response_code=200
Extracting referring expressions from utterance: 256/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Native Foods, Subway, Parking 36, Janss Dome, and UCLA Extension - Westwood Village Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1430 request_id=f6ecdb15cb2ad9fda4ee5760fe6b6aeb response_code=200
Extracting referring expressions from utterance: 257/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from U-Mini, Nature\'s Way Caf\\u00e9, Westwood\'s Village Square, UCLA Extension - Westwood Village Center, and Janss Dome\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1272 request_id=2068918e792d63d4024483b1c4555152 response_code=200
Extracting referring expressions from utterance: 258/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Westwood Wilshire, Subway, The Gayley Building, Gayley & Lindbrook Apartments, and 800 Degrees, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1052 request_id=5715c11b9afde5407a4fc32bbbc92c18 response_code=200
Extracting referring expressions from utterance: 259/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Mongol BBQ, Plaza la Reina, Native Foods, Yogurtland, and Starbucks, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1297 request_id=2702655f841bf5d56315c80721a23f56 response_code=200
Extracting referring expressions from utterance: 260/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Plaza la Reina, Urban Outfitters, Starbucks, UTLA Beauty, or Stone Canyon Creek (underground)\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1081 request_id=ef94ae3829d1565f5a08d473e9618fee response_code=200
Extracting referring expressions from utterance: 261/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Parking 36, bibigo, London Cleaners, Kinross Building South, or Occidental Petroleum Heliport\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=887 request_id=3740fe04ab436e5f3df95ebde41fb9d9 response_code=200
Extracting referring expressions from utterance: 262/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Westwood Sporting Goods, bibigo, Westwood Wilshire, Ike\'s Place, and The Gayley Building, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=676 request_id=2a481a7343b07958f00c1de5695a84a8 response_code=200
Extracting referring expressions from utterance: 263/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid UTLA Beauty, Ike\'s Place, Westwood Sporting Goods, Urban Outfitters, and Mongol BBQ, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=664 request_id=916804b3a03bcd8989a98bc456329d9d response_code=200
Extracting referring expressions from utterance: 264/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Occidental Petroleum Heliport, Veggie Grill, Westwood Sporting Goods, Red Pelican Music, or Plaza la Reina\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 372
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=960 request_id=12dabdf4bd16bb1149593a243144e057 response_code=200
Extracting referring expressions from utterance: 265/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Peet\'s Coffee & Tea, UCLA Extension - Westwood Village Center, Iso Fusion Caf\\u00e9, The Gayley Building, or Urban Outfitters\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1300 request_id=6cb1f3115b52b6d2f53067ee74144f01 response_code=200
Extracting referring expressions from utterance: 266/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that none among Village Center Newsstand, Urban Outfitters, Noah\'s Bagels, UTLA Beauty, and Victoria\'s Secret, are ever visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 358
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=942 request_id=407e501012cbe75fa222bbe33e18b4f9 response_code=200
Extracting referring expressions from utterance: 267/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that none among Village Center Newsstand, Veggie Grill, Nature\'s Way Caf\\u00e9, Stone Canyon Creek (underground), and Parking 36, are ever visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=910 request_id=23b10f7f28c9d35bd37a221bc5c3cdbb response_code=200
Extracting referring expressions from utterance: 268/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Urban Outfitters, Victoria\'s Secret, Native Foods, Noah\'s Bagels, and Plaza la Reina, must never be allowed to hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=835 request_id=0968575393da305a0db70c72947a9f7e response_code=200
Extracting referring expressions from utterance: 269/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: London Cleaners, Janss Dome, Veggie Grill, TCT Foods, and Starbucks, must never be allowed to hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=951 request_id=e70e24584416763a01c821a989076a2f response_code=200
Extracting referring expressions from utterance: 270/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Peet\'s Coffee & Tea, until you see Native Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=544 request_id=ae1be3fde6cce9fcde0e49db1a11c076 response_code=200
Extracting referring expressions from utterance: 271/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Subway, until you see Kinross Building South\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=275 request_id=e8d54be683f9336e9a121705f8da1859 response_code=200
Extracting referring expressions from utterance: 272/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid visiting Novel Cafe Westwood, till you observe The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=41fd8fe4e8fb8863fd8beb7c9bd1aa2c response_code=200
Extracting referring expressions from utterance: 273/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid visiting Gayley Center, till you observe Parking 36\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=238 request_id=3abba9cfb4f83f782b0742f23e0255e6 response_code=200
Extracting referring expressions from utterance: 274/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to UCLA Extension - Lindbrook Center, until Mio Babbo\'s, has occured\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=620 request_id=2e2fd34545b2aeda75a5f01b539c4dc7 response_code=200
Extracting referring expressions from utterance: 275/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Janss Dome, until UCLA Extension - Lindbrook Center, has occured\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=553 request_id=30dc4ba99fe409f0f5e882b08937c365 response_code=200
Extracting referring expressions from utterance: 276/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you observe bibigo, only then are you allowed to go to Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=279 request_id=a583184a2d01f663a05e5f210a8d8fd5 response_code=200
Extracting referring expressions from utterance: 277/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you observe Parking 36, only then are you allowed to go to The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=266 request_id=9e20b66180918f2c69de521f4bc637ba response_code=200
Extracting referring expressions from utterance: 278/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Novel Cafe Westwood, only after seeing UCLA Extension - Lindbrook Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=453 request_id=33726f06e07ab892a05cba52ad492615 response_code=200
Extracting referring expressions from utterance: 279/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Gayley & Lindbrook Apartments, only after seeing Westwood Sporting Goods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=587 request_id=409248cc915ee49e9f02ccd95e3852d0 response_code=200
Extracting referring expressions from utterance: 280/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Parking 32, until you go to The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=472 request_id=0b6c1090d7f7eef8f58b07eef41a939e response_code=200
Extracting referring expressions from utterance: 281/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Janss Dome, until you go to Occidental Petroleum Heliport\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=657 request_id=e0ca5dcb8294ccce440b148cdd070778 response_code=200
Extracting referring expressions from utterance: 282/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid TCT Foods, until you reach Native Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=102590bff69e3595f1fad585d23e83a0 response_code=200
Extracting referring expressions from utterance: 283/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Red Pelican Music, until you reach Poke Bar\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=456 request_id=45ca3de19df83ee619346179548b7417 response_code=200
Extracting referring expressions from utterance: 284/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Iso Fusion Caf\\u00e9, until you move to Occidental Petroleum Heliport\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=591 request_id=a3d6555f6f9b017dc2e36feaf8bdd34b response_code=200
Extracting referring expressions from utterance: 285/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Native Foods, until you move to Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=216 request_id=09e58b53046baf8e092d3c9bdb3a58fe response_code=200
Extracting referring expressions from utterance: 286/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not move to Yogurtland, until you arrive at 800 Degrees\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=869 request_id=d3dbf1bb8f2892d3720e9504eb666c55 response_code=200
Extracting referring expressions from utterance: 287/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not move to Westwood\'s Village Square, until you arrive at UTLA Beauty\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=665 request_id=af88592012fe50b2401d921c918cb4c5 response_code=200
Extracting referring expressions from utterance: 288/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Village Center Newsstand, until you have gone to Janss Dome\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=888 request_id=e79eca37d9fa78ec98872615584f32bf response_code=200
Extracting referring expressions from utterance: 289/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Kinross Building South, until you have gone to Parking 36\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=f95437fc1ec2757ca4ecaf2a248a8146 response_code=200
Extracting referring expressions from utterance: 290/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Novel Cafe Westwood, at all costs until you reach TCT Foods, first\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=434 request_id=08b3fd9efb7464f200c670dc094bc804 response_code=200
Extracting referring expressions from utterance: 291/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Westwood Wilshire, at all costs until you reach Gayley Center, first\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=d9c08a09a657a7c45628b1acc3ed1879 response_code=200
Extracting referring expressions from utterance: 292/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: until you have gone to Westwood\'s Village Square, you can not go to 800 Degrees\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=682 request_id=3622c0a3c0451e71384ba4e023ce5bd0 response_code=200
Extracting referring expressions from utterance: 293/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: until you have gone to bibigo, you can not go to Poke Bar\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=8f9fd8331f9c914c9d641377db6f15c4 response_code=200
Extracting referring expressions from utterance: 294/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Gayley & Lindbrook Apartments, until you go to Janss Dome\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=651 request_id=a7232eb2c8c6bd447e4f512c5576519f response_code=200
Extracting referring expressions from utterance: 295/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Denny\'s, until you go to Ike\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=448 request_id=884881ecaf4ca4c282bcfa812587b7aa response_code=200
Extracting referring expressions from utterance: 296/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Stone Canyon Creek (underground), until you see Village Center Newsstand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=607 request_id=8dfc5cc6333c719a9447ed0177a60f2c response_code=200
Extracting referring expressions from utterance: 297/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Mio Babbo\'s, until you see bibigo\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=884 request_id=3c6665c19aa83848d42e34b671785b61 response_code=200
Extracting referring expressions from utterance: 298/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to U-Mini, before Ike\'s Place, happens\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=794 request_id=fed637b80a071580d7788d9060fb543f response_code=200
Extracting referring expressions from utterance: 299/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Kinross Building South, before Iso Fusion Caf\\u00e9, happens\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=456 request_id=5b828be3a561b1deb2492d06dd08d32a response_code=200
Extracting referring expressions from utterance: 300/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can only go to Plaza la Reina, after Starbucks, is seen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=358 request_id=dcd4eba944eb11ed52a3b5dbb525f952 response_code=200
Extracting referring expressions from utterance: 301/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can only go to Peet\'s Coffee & Tea, after Stone Canyon Creek (underground), is seen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=781 request_id=4a724b4291ab3bdbb559fca2065db2bf response_code=200
Extracting referring expressions from utterance: 302/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: UCLA Extension - Lindbrook Center, must be observed before visiting Westwood\'s Village Square\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=458 request_id=fed310e28080e160561a5cbe863ba2ed response_code=200
Extracting referring expressions from utterance: 303/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Urban Outfitters, must be observed before visiting Victoria\'s Secret\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=9290c12be18f4998f5599335d4ddebc1 response_code=200
Extracting referring expressions from utterance: 304/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Yogurtland, but only after you see Starbucks\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1365 request_id=7e998f41725f825f58dae25326741c2d response_code=200
Extracting referring expressions from utterance: 305/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Stone Canyon Creek (underground), but only after you see Kinross Building South\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=445ec8a959060aff1a250273185c98bc response_code=200
Extracting referring expressions from utterance: 306/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Subway, has to be observed prior to any visit to Janss Dome\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=229 request_id=4d9c5c7bce8ffee7b6e6f285429880d0 response_code=200
Extracting referring expressions from utterance: 307/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Peet\'s Coffee & Tea, has to be observed prior to any visit to Stone Canyon Creek (underground)\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=8fc5f97347d741705e889f67b4a6ed4f response_code=200
Extracting referring expressions from utterance: 308/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you see Starbucks, before going to TCT Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=269 request_id=d1b2e70bda40bc8421294eed15ba3a4d response_code=200
Extracting referring expressions from utterance: 309/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you see Victoria\'s Secret, before going to Westwood\'s Village Square\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=586 request_id=1e8748fd7b496cc122a56afcc72ea69f response_code=200
Extracting referring expressions from utterance: 310/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not make any visit to Starbucks, when Subway, remains unseen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=215 request_id=a6218d6fb39526e9b821bec4545239a5 response_code=200
Extracting referring expressions from utterance: 311/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not make any visit to Nature\'s Way Caf\\u00e9, when bibigo, remains unseen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=457 request_id=0f3c85e75bd798f6d3d9d465934a5a9d response_code=200
Extracting referring expressions from utterance: 312/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Westwood Wilshire, till you observe Novel Cafe Westwood\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=315 request_id=2cb6461ad389ef6cb36683b39510a6a9 response_code=200
Extracting referring expressions from utterance: 313/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit 800 Degrees, till you observe Village Center Newsstand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=573 request_id=dd0b961d1c5ba796ab651b535d762eba response_code=200
Extracting referring expressions from utterance: 314/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing Parking 36, unlocks Noah\'s Bagels\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=383 request_id=e76658812afa2f172e149541a04d7042 response_code=200
Extracting referring expressions from utterance: 315/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing Veggie Grill, unlocks TCT Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=795 request_id=9878e87255e590a56537c9f8f414938c response_code=200
Extracting referring expressions from utterance: 316/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Mio Babbo\'s, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=8c6cc5061738ee6956771bd381ffe74b response_code=200
Extracting referring expressions from utterance: 317/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Westwood\'s Village Square, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=cd69b2b5ced0a14bbbd43d299e8e3666 response_code=200
Extracting referring expressions from utterance: 318/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Denny\'s, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=220 request_id=ecd6e82564a58b21cc8ea25be560f956 response_code=200
Extracting referring expressions from utterance: 319/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Kinross Building South, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=217 request_id=7364ea129f37e3c3c3ce91912c02b34b response_code=200
Extracting referring expressions from utterance: 320/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to U-Mini, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=227 request_id=3107060306b1ce124dd4e58b4f5ece37 response_code=200
Extracting referring expressions from utterance: 321/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Westwood\'s Village Square, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=271 request_id=1ae946544e88594642adbd3fbe150106 response_code=200
Extracting referring expressions from utterance: 322/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Kinross Building South, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=634 request_id=d60af1b9965ee03b04b2e8ececdd1579 response_code=200
Extracting referring expressions from utterance: 323/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Peet\'s Coffee & Tea, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=258 request_id=9693f702f70ffcdc1cc2967146942791 response_code=200
Extracting referring expressions from utterance: 324/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Iso Fusion Caf\\u00e9, at least five times or more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=202 request_id=30f8245e368488ef79ba588f8e875f7f response_code=200
Extracting referring expressions from utterance: 325/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Veggie Grill, at least five times or more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=217 request_id=f06cc244ef0cdd9a58ea0bb517adb89a response_code=200
Extracting referring expressions from utterance: 326/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit Nature\'s Way Caf\\u00e9, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=290 request_id=86408b57f4fe57f27187dc02e9e8cd31 response_code=200
Extracting referring expressions from utterance: 327/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit 800 Degrees, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=279 request_id=96994664303cdfa6ee7426ac121b31da response_code=200
Extracting referring expressions from utterance: 328/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Urban Outfitters, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=82f04d2580030db54087f285ad9f6d0b response_code=200
Extracting referring expressions from utterance: 329/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Subway, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=403 request_id=b42ae6e26a967a397be5ec40c8b94350 response_code=200
Extracting referring expressions from utterance: 330/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Plaza la Reina, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=232 request_id=714fce3603187338188e12135f79b4bd response_code=200
Extracting referring expressions from utterance: 331/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Westwood\'s Village Square, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=278 request_id=950d02db17ec988e49123aeaba3d03f2 response_code=200
Extracting referring expressions from utterance: 332/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: your task is to go to Stone Canyon Creek (underground), five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=667 request_id=6d09dd3a47e68a15327c44200fd540b6 response_code=200
Extracting referring expressions from utterance: 333/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: your task is to go to Westwood Wilshire, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=152 request_id=71b25f78e2ae9661edafd5a43b64326e response_code=200
Extracting referring expressions from utterance: 334/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit UTLA Beauty, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=178 request_id=4bb7f1b4f965bcc2551ba7def61096fc response_code=200
Extracting referring expressions from utterance: 335/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit London Cleaners, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=193 request_id=b41934256b506badcb0e234674d55d11 response_code=200
Extracting referring expressions from utterance: 336/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you visit Village Center Newsstand, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=258 request_id=fc9423a1622f3e9084f5e3b60a09f43e response_code=200
Extracting referring expressions from utterance: 337/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you visit Red Pelican Music, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=eef527a82233617d993b9ddaee38c4a4 response_code=200
Extracting referring expressions from utterance: 338/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to reach Starbucks, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=84fc4e97205d8f8f9638bd5d950320c0 response_code=200
Extracting referring expressions from utterance: 339/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to reach Noah\'s Bagels, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=550 request_id=2a159b6825735146b4ccfcef9d9162ee response_code=200
Extracting referring expressions from utterance: 340/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit UTLA Beauty, equal or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=382 request_id=b1e371b9c78f628a70d3d3938205dbe0 response_code=200
Extracting referring expressions from utterance: 341/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Iso Fusion Caf\\u00e9, equal or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=253 request_id=671f5d9d6714bb81b9b6024b07f0a6da response_code=200
Extracting referring expressions from utterance: 342/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to Noah\'s Bagels, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=286 request_id=a0e67d3c2834e2ddaf31bef2a3051953 response_code=200
Extracting referring expressions from utterance: 343/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to Iso Fusion Caf\\u00e9, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=254 request_id=0df42de8bed89ad0ea37ac11790aad62 response_code=200
Extracting referring expressions from utterance: 344/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Kinross Building South, has to be visited at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=207 request_id=2536cd00436c9f523520bc27efd4c76f response_code=200
Extracting referring expressions from utterance: 345/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: London Cleaners, has to be visited at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=172 request_id=4fc12a632c82388887b5623426e5d099 response_code=200
Extracting referring expressions from utterance: 346/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit and then leave Novel Cafe Westwood, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=985f398b1949354db4f9c7bfbfc759cd response_code=200
Extracting referring expressions from utterance: 347/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit and then leave Denny\'s, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=155 request_id=cae046cedc61bbfd70a0fc0d37a4d2f4 response_code=200
Extracting referring expressions from utterance: 348/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Gayley & Lindbrook Apartments, then leave Gayley & Lindbrook Apartments, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=498 request_id=13c5cc040488d8e90a2adaef9c10ab2e response_code=200
Extracting referring expressions from utterance: 349/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to UTLA Beauty, then leave UTLA Beauty, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=340 request_id=085f0978489efa21972eeadf5fcdb9e0 response_code=200
Extracting referring expressions from utterance: 350/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must pass through Victoria\'s Secret, on at least five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=366 request_id=6b8bffe8c5e84e7e22e14a4e138dbbbe response_code=200
Extracting referring expressions from utterance: 351/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must pass through Village Center Newsstand, on at least five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=185 request_id=5cfe01e0435d074533ef71e71d71b594 response_code=200
Extracting referring expressions from utterance: 352/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the minimum number of times you must visit Ike\'s Place, is five\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=206 request_id=8c654bf3152100800b2eda98b5f67066 response_code=200
Extracting referring expressions from utterance: 353/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the minimum number of times you must visit Denny\'s, is five\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=3899729f586cb08e670e24b7405a2fd9 response_code=200
Extracting referring expressions from utterance: 354/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach Yogurtland, then leave Yogurtland, and repeat this at least four more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=419 request_id=5f779988167f4d60981438b97ff1bb8c response_code=200
Extracting referring expressions from utterance: 355/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach Ike\'s Place, then leave Ike\'s Place, and repeat this at least four more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=134 request_id=9ca9d16666d22d9aa9e2de857944b1fe response_code=200
Extracting referring expressions from utterance: 356/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not complete the task without visiting Iso Fusion Caf\\u00e9, on five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=213 request_id=779b50d110f7d24e958a7ec1c32a83b9 response_code=200
Extracting referring expressions from utterance: 357/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not complete the task without visiting Ike\'s Place, on five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=278 request_id=306b7289b6e5277a5a2cd2edba6345e9 response_code=200
Extracting referring expressions from utterance: 358/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Parking 32, any fewer than five separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=468 request_id=9579681ac9cdca01140bc57bf06464b2 response_code=200
Extracting referring expressions from utterance: 359/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit UTLA Beauty, any fewer than five separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=215 request_id=91eb471ab1d8ef049f488e97d69d058f response_code=200
Extracting referring expressions from utterance: 360/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you have at least five separate times where you reach UCLA Extension - Westwood Village Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=274 request_id=bc22ac4ad223a1d7469c4d6735b642f3 response_code=200
Extracting referring expressions from utterance: 361/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you have at least five separate times where you reach Ike\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=204 request_id=d778eebd356b4ab6cffeefc1bdad5fd0 response_code=200
Extracting referring expressions from utterance: 362/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Red Pelican Music, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=216 request_id=207730bfa8eced00ca768bca77d24cfe response_code=200
Extracting referring expressions from utterance: 363/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Starbucks, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=234 request_id=ad52a801aa35c989310c7863aab03823 response_code=200
Extracting referring expressions from utterance: 364/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Urban Outfitters, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=290 request_id=737fa8df0080277da80bcaeb413a71e5 response_code=200
Extracting referring expressions from utterance: 365/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to bibigo, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=325 request_id=14c5e1b82e8b4371928691d6ff6b3506 response_code=200
Extracting referring expressions from utterance: 366/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Nature\'s Way Caf\\u00e9, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=b9b0b79bb481310eadc75836e736b479 response_code=200
Extracting referring expressions from utterance: 367/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Poke Bar, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=167 request_id=67e2574032147c81da5a05e9f9a29923 response_code=200
Extracting referring expressions from utterance: 368/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit London Cleaners, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=477724e1dff7f01718569ee0beac2baf response_code=200
Extracting referring expressions from utterance: 369/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Westwood\'s Village Square, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=284 request_id=6c67b39a244bd9d09fc3da6e019a02e8 response_code=200
Extracting referring expressions from utterance: 370/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must reach Mio Babbo\'s, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=236 request_id=d8d647e0fe52649b1b6d5c6897e56775 response_code=200
Extracting referring expressions from utterance: 371/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must reach Starbucks, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=430 request_id=1dd7a0722b713f372fa0cea37d71b832 response_code=200
Extracting referring expressions from utterance: 372/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: navigate to The Gayley Building, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=c50070851b9c134f302902dadc848e61 response_code=200
Extracting referring expressions from utterance: 373/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: navigate to bibigo, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=197 request_id=1d1c57240ff8e642306aa02fa036b1d5 response_code=200
Extracting referring expressions from utterance: 374/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Yogurtland, exactly three times no more no less\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=261 request_id=7c4f40bbc40eb46b56812e85d909c5f3 response_code=200
Extracting referring expressions from utterance: 375/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Village Center Newsstand, exactly three times no more no less\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=183 request_id=2144f60cb4553bda518e746bb89dd18f response_code=200
Extracting referring expressions from utterance: 376/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to UCLA Extension - Westwood Village Center, and you can not go there more or less than three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=182a6b496bd3eb15adfce205491e3ed4 response_code=200
Extracting referring expressions from utterance: 377/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to London Cleaners, and you can not go there more or less than three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=7427d0d70aa5f5e9ba1eec6678dcfc02 response_code=200
Extracting referring expressions from utterance: 378/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Kinross Building South, more or less than three times is prohibited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=64a5f0596562f3648cff1b677d4e9bd3 response_code=200
Extracting referring expressions from utterance: 379/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Gayley Center, more or less than three times is prohibited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=209 request_id=e86e618d972fd30cdb7f426ab5090bd6 response_code=200
Extracting referring expressions from utterance: 380/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Noah\'s Bagels, three times and do not visit it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=571 request_id=70c3e2d32c89923ce213a274eff7b999 response_code=200
Extracting referring expressions from utterance: 381/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to The Gayley Building, three times and do not visit it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=445 request_id=4febc5a2285a5a6faa88a546ac549245 response_code=200
Extracting referring expressions from utterance: 382/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Red Pelican Music, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=421 request_id=3e50c54686b623449a09407f14b6b024 response_code=200
Extracting referring expressions from utterance: 383/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit 800 Degrees, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=3dc3e825a7203a0e0f938abe66cd3998 response_code=200
Extracting referring expressions from utterance: 384/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Westwood\'s Village Square, three times and never revisit it again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=376d71217cd581e743c6301e59df3a1d response_code=200
Extracting referring expressions from utterance: 385/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit UCLA Extension - Westwood Village Center, three times and never revisit it again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=461 request_id=bf1809cc6f546c93e7299ae5d3c51e10 response_code=200
Extracting referring expressions from utterance: 386/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must go to Nature\'s Way Caf\\u00e9, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=284 request_id=c6b6a5e1fd909648082093b556f5f4cf response_code=200
Extracting referring expressions from utterance: 387/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must go to UTLA Beauty, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=284 request_id=af67109da849690389f47db8d0b5298e response_code=200
Extracting referring expressions from utterance: 388/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Starbucks, three times and then stop visiting it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=277 request_id=65267be7d891add66021c5702e05b3be response_code=200
Extracting referring expressions from utterance: 389/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit The Gayley Building, three times and then stop visiting it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=516 request_id=7d4d9777da8c939cb4b5c90fa2bc41ca response_code=200
Extracting referring expressions from utterance: 390/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are required to visit Victoria\'s Secret, on exactly three separate instances\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=297863f64072f383615d80c17f1e460d response_code=200
Extracting referring expressions from utterance: 391/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are required to visit UCLA Extension - Lindbrook Center, on exactly three separate instances\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=f032f22a05b0ded79a0f26c119b68bcf response_code=200
Extracting referring expressions from utterance: 392/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the required number of separate visits to Native Foods, is exactly three\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=810 request_id=8fae09e75bf0fb2e1631e3bde3d8d601 response_code=200
Extracting referring expressions from utterance: 393/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the required number of separate visits to Plaza la Reina, is exactly three\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=9d066dee4dc7c6cd19da93363bca64fe response_code=200
Extracting referring expressions from utterance: 394/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Westwood Sporting Goods, exactly three separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=240 request_id=1eacfc25bd335f0c059317d8b2f37696 response_code=200
Extracting referring expressions from utterance: 395/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Mio Babbo\'s, exactly three separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=2db38b6f07219d2d0a32a16dd3960c88 response_code=200
Extracting referring expressions from utterance: 396/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: pass through Mio Babbo\'s, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=273 request_id=a07eac6e1688838cc1c2d47f3f85fb94 response_code=200
Extracting referring expressions from utterance: 397/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: pass through Kinross Building South, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=c6121857bbcd7a71a0e39baf0567a0e9 response_code=200
Extracting referring expressions from utterance: 398/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to UTLA Beauty, then leave UTLA Beauty, and then repeat this exactly two more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=267 request_id=d4843a875f3c6281dbe3d05fa488005b response_code=200
Extracting referring expressions from utterance: 399/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Noah\'s Bagels, then leave Noah\'s Bagels, and then repeat this exactly two more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=5266b6fd57171d818d03371c7a7027c9 response_code=200
Extracting referring expressions from utterance: 400/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure that you have exactly three separate visits to Peet\'s Coffee & Tea\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=350 request_id=5d133aff6eb7c24f8461cd0704554ef2 response_code=200
Extracting referring expressions from utterance: 401/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure that you have exactly three separate visits to Native Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=f48ebface16f1f6df9c8fb6d4628b9a1 response_code=200
Extracting referring expressions from utterance: 402/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not exceed or fall short on three separate visits to UCLA Extension - Lindbrook Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=460 request_id=3186a23c409c47eecd610f3ffa22a753 response_code=200
Extracting referring expressions from utterance: 403/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not exceed or fall short on three separate visits to Westwood Sporting Goods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=332 request_id=943ce01903e560fd891e7f8046b17ba8 response_code=200
Extracting referring expressions from utterance: 404/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Poke Bar, once you have visited Denny\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=500 request_id=f6071a328367be59c65ad7707f704c5a response_code=200
Extracting referring expressions from utterance: 405/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Peet\'s Coffee & Tea, once you have visited Native Foods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=442 request_id=f7f7447059f6574645d8598df02a6e65 response_code=200
Extracting referring expressions from utterance: 406/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Veggie Grill, once you go to U-Mini\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=3ed62454bddb86ce114581f238faf873 response_code=200
Extracting referring expressions from utterance: 407/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to bibigo, once you go to Victoria\'s Secret\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=418 request_id=e29f8e82650613055b7977ae4a91bc35 response_code=200
Extracting referring expressions from utterance: 408/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you visit Peet\'s Coffee & Tea, you can not visit Stone Canyon Creek (underground), afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=464eb3ffe19722fbe4d08f33c8db8233 response_code=200
Extracting referring expressions from utterance: 409/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you visit Gayley Center, you can not visit London Cleaners, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=634 request_id=b8fa8d1ae6afdca635025168578b14ea response_code=200
Extracting referring expressions from utterance: 410/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once bibigo, is visited you can not go to Occidental Petroleum Heliport, any more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=739 request_id=7c9204ccd474655b788645c863f69c1c response_code=200
Extracting referring expressions from utterance: 411/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once Gayley & Lindbrook Apartments, is visited you can not go to Gayley Center, any more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=822 request_id=211beb78f5d9cb534b19e351b3f6b16d response_code=200
Extracting referring expressions from utterance: 412/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Iso Fusion Caf\\u00e9, before bibigo, is visited but you can never visit Iso Fusion Caf\\u00e9, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=465 request_id=f67ad44c927a7f03f1958d2faefa7d95 response_code=200
Extracting referring expressions from utterance: 413/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Yogurtland, before Nature\'s Way Caf\\u00e9, is visited but you can never visit Yogurtland, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=441 request_id=4224344836a03c14cb1c3eb08b4fa828 response_code=200
Extracting referring expressions from utterance: 414/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you go to Westwood Sporting Goods, you have to avoid The Gayley Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=575 request_id=163a2a7a4e1303136e63b0e125e0ee61 response_code=200
Extracting referring expressions from utterance: 415/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you go to The Gayley Building, you have to avoid Red Pelican Music\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=0c27659accd60ae8efa2030279b45d4c response_code=200
Extracting referring expressions from utterance: 416/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Occidental Petroleum Heliport, only after you go to Occidental Petroleum Heliport\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=547 request_id=d713d9e89b40dad63cc9b3fca1301c89 response_code=200
Extracting referring expressions from utterance: 417/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Denny\'s, only after you go to Denny\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=471 request_id=8992a074277a6718a685a4d01c7b5788 response_code=200
Extracting referring expressions from utterance: 418/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you have gone to bibigo, you must stay away from Parking 32\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=580 request_id=c7613a90a20fe8d8717392e8d332b4aa response_code=200
Extracting referring expressions from utterance: 419/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you have gone to Kinross Building South, you must stay away from 800 Degrees\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=508 request_id=6c140070c66ab744b265e334e1db8d47 response_code=200
Extracting referring expressions from utterance: 420/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must stay away from London Cleaners, once you have gone to Gayley Center\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=498 request_id=e59929856221222da489d7ef3d98969f response_code=200
Extracting referring expressions from utterance: 421/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must stay away from Stone Canyon Creek (underground), once you have gone to Nature\'s Way Caf\\u00e9\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=599 request_id=70615a0eccf1e7f03d0c5a723d23fb89 response_code=200
Extracting referring expressions from utterance: 422/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not move to London Cleaners, after you reach Westwood Wilshire\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=529 request_id=ae4f5b57dc903032ec9fe4a9deb47804 response_code=200
Extracting referring expressions from utterance: 423/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not move to The Gayley Building, after you reach London Cleaners\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=648 request_id=a004fd6094a0c45723479db294142dac response_code=200
Extracting referring expressions from utterance: 424/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you reach Westwood Sporting Goods, you can not move to Stone Canyon Creek (underground)\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=510 request_id=73a83fcf3371d1997a1be09ee6811759 response_code=200
Extracting referring expressions from utterance: 425/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you reach London Cleaners, you can not move to Ike\'s Place\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=485 request_id=aabe1543c2c773a1fab79feb8503fd82 response_code=200
Extracting referring expressions from utterance: 426/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you go to Plaza la Reina, you have to avoid Westwood\'s Village Square, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=580 request_id=dea57cd8e8842411c81c0946438f2a63 response_code=200
Extracting referring expressions from utterance: 427/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you go to Iso Fusion Caf\\u00e9, you have to avoid TCT Foods, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=674 request_id=fa8829783c4443a882af47f9430b006b response_code=200
Extracting referring expressions from utterance: 428/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Westwood Wilshire, once you go to Mongol BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=526 request_id=669b4faaf86673ce0fed57223256aa58 response_code=200
Extracting referring expressions from utterance: 429/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid The Gayley Building, once you go to Denny\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=e5311d145d49530f99309fbdbb3081a5 response_code=200
Extracting referring expressions from utterance: 430/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit bibigo, after London Cleaners, is visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=cdb7361a10a95a5cf8e81f52772e379b response_code=200
Extracting referring expressions from utterance: 431/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Stone Canyon Creek (underground), after Westwood Wilshire, is visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=660 request_id=57c567074e454bdd89e2cbb72a8baad8 response_code=200
Extracting referring expressions from utterance: 432/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go to Iso Fusion Caf\\u00e9, but you must not go to TCT Foods, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=684 request_id=16507f4314ce46fff98cd2369dac2926 response_code=200
Extracting referring expressions from utterance: 433/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go to Parking 36, but you must not go to Iso Fusion Caf\\u00e9, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 None
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=672e8e50b1d756c2839400d6ecdea7e4 response_code=200
Extracting referring expressions from utterance: 434/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: any visit to Yogurtland, is not allowed after you visit Peet\'s Coffee & Tea\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=cdc2863aaec9f835a6f7c7e642169788 response_code=200
Extracting referring expressions from utterance: 435/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: any visit to Noah\'s Bagels, is not allowed after you visit Westwood\'s Village Square\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=533 request_id=9864786e36e83f773fa6d0ba368f0c29 response_code=200
Extracting referring expressions from utterance: 436/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once Westwood\'s Village Square, is reached after that you can never visit London Cleaners\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=526 request_id=96ef2b6030a54f7611244cc2304b8451 response_code=200
Extracting referring expressions from utterance: 437/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once Mio Babbo\'s, is reached after that you can never visit Village Center Newsstand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=520 request_id=57533fd0e803a69fa0af8c538e92c73a response_code=200
Extracting referring expressions from utterance: 438/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Occidental Petroleum Heliport, can never be visited once Westwood Sporting Goods, occurs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=b27e2ad4d7e8521f0ed164f193b7d76a response_code=200
Extracting referring expressions from utterance: 439/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Westwood\'s Village Square, can never be visited once Parking 36, occurs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=ef7ee0cd2ba0798c4f1a1f5b1392a4dd response_code=200
Extracting referring expressions from utterance: 440/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you go to Poke Bar, you can never go to London Cleaners, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=4a1197fde4aff8f49d63b1278d632da0 response_code=200
Extracting referring expressions from utterance: 441/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you go to Urban Outfitters, you can never go to Westwood Sporting Goods, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=540 request_id=e1c3f5ce6cdbc367c26ac022feef0515 response_code=200
Extracting referring expressions from utterance: 442/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if Parking 32, happens that prevents Subway, from happening afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=349 request_id=9ba046fe07860bf12bac2fc693cc3904 response_code=200
Extracting referring expressions from utterance: 443/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if Yogurtland, happens that prevents TCT Foods, from happening afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=9d51c69c47665a655e52c98372d05102 response_code=200
Extracting referring expressions from utterance: 444/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you visit Parking 36, you are not allowed to reach Westwood Wilshire, afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=bf5b1eb12c4baf7baddd1493698bcca3 response_code=200
Extracting referring expressions from utterance: 445/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you visit Starbucks, you are not allowed to reach Urban Outfitters, afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=719 request_id=c7812f20c50d3e27ab850de388cf4a59 response_code=200
Extracting referring expressions from utterance: 446/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: whenever you observe UCLA Extension - Westwood Village Center, this locks TCT Foods, from becoming true from the next instance\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=539 request_id=a90fe85eec21b71c685ea4e8d0f63dd1 response_code=200
Extracting referring expressions from utterance: 447/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: whenever you observe UCLA Extension - Westwood Village Center, this locks UCLA Extension - Lindbrook Center, from becoming true from the next instance\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=700 request_id=859f0cdd21c755285c4567ba09c2e14b response_code=200
Extracting referring expressions from utterance: 448/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing UCLA Extension - Westwood Village Center, locks Native Foods, from being true for all time instances starting from the next one\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=2ba4082d66e0249e19627569b03a20f9 response_code=200
Extracting referring expressions from utterance: 449/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing Parking 36, locks UCLA Extension - Westwood Village Center, from being true for all time instances starting from the next one\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=4a7808241685375a76f80bfa53ece342 response_code=200
Extracting referring expressions from utterance: 450/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you get to Native Foods, you must avoid Plaza la Reina\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=560 request_id=99e32fc37a0996077647082b1f2b38af response_code=200
Extracting referring expressions from utterance: 451/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you get to Veggie Grill, you must avoid U-Mini\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=3a46a2d3f01386e8e17a7a9214b4bb3f response_code=200
grounding landmark: Stone Canyon Creek (underground)
use cached embedding: Stone Canyon Creek (underground)
grounding landmark: Westwood's Village Square
use cached embedding: Westwood's Village Square
grounding landmark: bibigo
use cached embedding: bibigo
grounding landmark: Ike's Place
use cached embedding: Ike's Place
grounding landmark: The Gayley Building
use cached embedding: The Gayley Building
grounding landmark: London Cleaners
use cached embedding: London Cleaners
grounding landmark: Red Pelican Music
use cached embedding: Red Pelican Music
grounding landmark: Parking 32
use cached embedding: Parking 32
grounding landmark: Mio Babbo's
use cached embedding: Mio Babbo's
grounding landmark: Native Foods
use cached embedding: Native Foods
grounding landmark: Mongol BBQ
use cached embedding: Mongol BBQ
grounding landmark: Poke Bar
use cached embedding: Poke Bar
grounding landmark: Noah's Bagels
use cached embedding: Noah's Bagels
grounding landmark: TCT Foods
use cached embedding: TCT Foods
grounding landmark: Westwood Wilshire
use cached embedding: Westwood Wilshire
grounding landmark: Yogurtland
use cached embedding: Yogurtland
grounding landmark: Kinross Building South
use cached embedding: Kinross Building South
grounding landmark: 800 Degrees
use cached embedding: 800 Degrees
grounding landmark: UCLA Extension - Lindbrook Center
use cached embedding: UCLA Extension - Lindbrook Center
grounding landmark: Novel Cafe Westwood
use cached embedding: Novel Cafe Westwood
grounding landmark: Gayley Center
use cached embedding: Gayley Center
grounding landmark: Peet's Coffee & Tea
use cached embedding: Peet's Coffee & Tea
grounding landmark: Veggie Grill
use cached embedding: Veggie Grill
grounding landmark: Subway
use cached embedding: Subway
grounding landmark: Starbucks
use cached embedding: Starbucks
grounding landmark: Urban Outfitters
use cached embedding: Urban Outfitters
grounding landmark: U-Mini
use cached embedding: U-Mini
grounding landmark: Iso Fusion Café
use cached embedding: Iso Fusion Café
grounding landmark: Parking 36
use cached embedding: Parking 36
grounding landmark: UTLA Beauty
use cached embedding: UTLA Beauty
grounding landmark: Denny's
use cached embedding: Denny's
grounding landmark: Westwood Sporting Goods
use cached embedding: Westwood Sporting Goods
grounding landmark: Village Center Newsstand
use cached embedding: Village Center Newsstand
grounding landmark: Nature's Way Café
use cached embedding: Nature's Way Café
grounding landmark: Janss Dome
use cached embedding: Janss Dome
grounding landmark: Plaza la Reina
use cached embedding: Plaza la Reina
grounding landmark: Occidental Petroleum Heliport
use cached embedding: Occidental Petroleum Heliport
grounding landmark: UCLA Extension - Westwood Village Center
use cached embedding: UCLA Extension - Westwood Village Center
grounding landmark: Gayley & Lindbrook Apartments
use cached embedding: Gayley & Lindbrook Apartments
grounding landmark: Victoria's Secret
use cached embedding: Victoria's Secret
Symbolic Translation: 0/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b h d a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=d113a2b0ffc3008e1db63b4d7530c32e response_code=200
Symbolic Translation: 1/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a b c h and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=488 request_id=a4bdbbffca1e49536e38ff83393777d0 response_code=200
Symbolic Translation: 2/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: sometime visit h c d b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=93eb886943da11d264961c389394c55a response_code=200
Symbolic Translation: 3/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: sometime visit h c a d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=0606c81f3805d1b97854ffc645c12b32 response_code=200
Symbolic Translation: 4/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: eventually go visit d b a c and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=d0ca2feac571e78edd93891018a3da18 response_code=200
Symbolic Translation: 5/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: eventually go visit c b a h and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=b0310a83cbfebd584fa948dff9a47db3 response_code=200
Symbolic Translation: 6/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a h b d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=15522a2ebe0eb9fc90e7eaf2b83a4581 response_code=200
Symbolic Translation: 7/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d c a h and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=485 request_id=21b8fad939e86af114d4701417bd029a response_code=200
Symbolic Translation: 8/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c go to d go to b go to a go to h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=a78acbb6bc66d5b35e415207c59c9fb0 response_code=200
Symbolic Translation: 9/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c go to h go to d go to a go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=67c99c80b5fc77c3c2580b8048b7385f response_code=200
Symbolic Translation: 10/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c d a b h in any order required\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=8546097209e1f139ad7c9b4fc5cb01ab response_code=200
Symbolic Translation: 11/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d c h b a in any order required\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=b003004feca08c490c687a1bac56512b response_code=200
Symbolic Translation: 12/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit all locations h b a c d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=511 request_id=2f10ce6338b7cf85a71061b09ca94ac4 response_code=200
Symbolic Translation: 13/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit all locations a b c a d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=45b2471c6b40c073a7df62c4033ff28a response_code=200
Symbolic Translation: 14/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach the following five locations h b c a d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=a124a8e58eccd863ff83c99c64dcbe91 response_code=200
Symbolic Translation: 15/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach the following five locations h a c d b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=483 request_id=d6eabd37b262937870a89ad72339bcdb response_code=200
Symbolic Translation: 16/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: find the following h a b c d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=550 request_id=ef7478a02037631a8ac6dd921879e465 response_code=200
Symbolic Translation: 17/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: find the following d a c b h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=c0b4bf4f1e3cafb7bd2f594f7783e98c response_code=200
Symbolic Translation: 18/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to h a b d and c in arbitrary order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=551 request_id=525e99d27e41ee64504b44466bd899d2 response_code=200
Symbolic Translation: 19/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d b c a and h in arbitrary order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=4645c8291a77452c2b0892ac078c34ae response_code=200
Symbolic Translation: 20/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure h c d a and b are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=81687f9a962fdbb2731b5268161a3368 response_code=200
Symbolic Translation: 21/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure b c d a and h are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=8c557f6c180ff2eeaed6dc9b03a2e903 response_code=200
Symbolic Translation: 22/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop until a h b c and d are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=bafb533d99b3f80465ea676de3bbb49a response_code=200
Symbolic Translation: 23/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop until a h b d and c are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=3ff5cbeb5de6b1856d930fd47020164a response_code=200
Symbolic Translation: 24/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to c d h a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=ff9d0f7749575e22d13b9b87584fe25e response_code=200
Symbolic Translation: 25/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to b c a h and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=6e8057ac45d78ba64d67af95f7543c33 response_code=200
Symbolic Translation: 26/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b a h c and d in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=76a26ce6fda0746b0546c55cd7922856 response_code=200
Symbolic Translation: 27/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a d c h and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=b57ee938cd6c42c4b50f8125d21ca910 response_code=200
Symbolic Translation: 28/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d c h b and a in no particular order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=a9b4aec068ec66f543f4fadf396db3d3 response_code=200
Symbolic Translation: 29/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c h d b and a in no particular order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=e269056d3c7762d0efc873b135a727cf response_code=200
Symbolic Translation: 30/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d c b h and a at least once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=ff6fdb11501b49b94b0dc88aa3b6394d response_code=200
Symbolic Translation: 31/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to h c b a and d at least once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=f27f60a8b10c95eb76044b9fb1e68070 response_code=200
Symbolic Translation: 32/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a d c h and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=fbf6d13ac83f5416744ce2a684ae4649 response_code=200
Symbolic Translation: 33/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a d h c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=0286fab0880da92d8afaf56541d39675 response_code=200
Symbolic Translation: 34/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b h a c and d in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=a467c20a6fda1dde542f7c1bedcf377b response_code=200
Symbolic Translation: 35/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c a b h and d in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=b7a9cf98160f09366e571acf16395649 response_code=200
Symbolic Translation: 36/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b c d a and h in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=e9ce427926b738cd90cb37ad586e6338 response_code=200
Symbolic Translation: 37/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a d b h and c in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=d5ae31fc3c5f873183d14f3333259dcf response_code=200
Symbolic Translation: 38/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach h a c b and d in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=729891fd48e5171ec643ac82b532e4d6 response_code=200
Symbolic Translation: 39/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach c d b h and a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=4d715e8e3b472e9ba376b630a952e7fa response_code=200
Symbolic Translation: 40/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you go to h c b d a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=e906386ef8f558ff88f39bd45b375878 response_code=200
Symbolic Translation: 41/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you go to d b a c h in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=36dd510c85da73dc07ad793ecdc715b8 response_code=200
Symbolic Translation: 42/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit b d a c h but it can be done in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=a59932fead5033315bfe5d88d19d709e response_code=200
Symbolic Translation: 43/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit a d h b c but it can be done in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=367fbea1984e5c85694ccd1eb17012ef response_code=200
Symbolic Translation: 44/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: in no particular order visit h d a c b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=f28a54bf512f4a6bba0a4c0e2143be8b response_code=200
Symbolic Translation: 45/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: in no particular order visit c h d a b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=491 request_id=c9ab75104407aee558a6815b559f08f6 response_code=200
Symbolic Translation: 46/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit d until you visit b visit b only once do not visit b until you visit a visit a only once do no visit a until you visit c visit c only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1637 request_id=d97797f74ee6501de2eb6edb283f5210 response_code=200
Symbolic Translation: 47/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a until you visit d visit d only once do not visit d until you visit c visit c only once do no visit c until you visit b visit b only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1632 request_id=d1bb8f1864fe1adf4624a2dbcb5381c0 response_code=200
Symbolic Translation: 48/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d then a then b and then c you can only visit each landmark once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1632 request_id=256b06ea9227e84822607d27ea8b931e response_code=200
Symbolic Translation: 49/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c then a then b and then d you can only visit each landmark once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1624 request_id=08d0378a5353eaf17fdf6cd678a2662f response_code=200
Symbolic Translation: 50/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c but not through c a or b and then go to c but not through a or b and then go to a but not through b and finally go to b no revisiting is allowed\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1632 request_id=d1b06049597303a2b0c51923d6184e34 response_code=200
Symbolic Translation: 51/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a but not through b c or a and then go to b but not through c or a and then go to c but not through a and finally go to a no revisiting is allowed\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1644 request_id=ca10bbe60742c08096f996fcaf9bafce response_code=200
Symbolic Translation: 52/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until a is visited and do not go to a until c is visited and do not go to c until d is visited along the path never return to previous location you have been to\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1638 request_id=a15eae2dc2b06df4bb99eb4de03a43c0 response_code=200
Symbolic Translation: 53/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to c until b is visited and do not go to b until a is visited and do not go to a until d is visited along the path never return to previous location you have been to\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1640 request_id=f945a30353d8367c1a078d656c484598 response_code=200
Symbolic Translation: 54/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to d only after going to c before that make your way to c only after going to b before that make your way to b only after going to a do not go back to the previous location you have visited while heading to the next\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1653 request_id=10a90d8db3fb89003787c22bf3e3b596 response_code=200
Symbolic Translation: 55/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a only after going to c before that make your way to c only after going to b before that make your way to b only after going to d do not go back to the previous location you have visited while heading to the next\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1637 request_id=db0e542222af10ad395a08d376d77235 response_code=200
Symbolic Translation: 56/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d but do not visit c a or b and then go to c but do not visit a or b or revisit d and then go to a but do not visit b or revisit d or c and then go to b but do not revisit d c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1640 request_id=fe531956ce9e355fdcf11b273b3528c8 response_code=200
Symbolic Translation: 57/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a but do not visit d c or b and then go to d but do not visit c or b or revisit a and then go to c but do not visit b or revisit a or d and then go to b but do not revisit a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1650 request_id=9195fc679eb7ffca699e3692c9403d0f response_code=200
Symbolic Translation: 58/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b c a and d in this order without skipping any one of them do not revisit any one of them once after you have been there\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1626 request_id=06770694f9303a9e3075829f30f71083 response_code=200
Symbolic Translation: 59/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a b c and d in this order without skipping any one of them do not revisit any one of them once after you have been there\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1627 request_id=8c6826475a8ad0e4a41dc7eceeefa42d response_code=200
Symbolic Translation: 60/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b only once but keep away from a c and d and then go to a only once but keep away from b c and d and then go to c only once but keep way from b a and d and finally go to d once but keep away from b a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1641 request_id=f1de03c45295d7ade909e556ba02f98a response_code=200
Symbolic Translation: 61/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d only once but keep away from b a and c and then go to b only once but keep away from d a and c and then go to a only once but keep way from d b and c and finally go to c once but keep away from d b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1637 request_id=86af6366f7044485fbf73950cb7fa201 response_code=200
Symbolic Translation: 62/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b one time but not through d c or a and then visit d once but not through b c or a and then visit c once but not through b d or a and then visit a once but not through b d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1636 request_id=e5188218b1b433f555e3e76e7d89dccd response_code=200
Symbolic Translation: 63/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a one time but not through d b or c and then visit d once but not through a b or c and then visit b once but not through a d or c and then visit c once but not through a d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2437 request_id=bc03e6c8bef6242c2bbe1a215c77df07 response_code=200
Symbolic Translation: 64/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from c d and a until you make b single visit to b and then make your way to c while staying away from b d and a and then make your way to d while staying away from b c or a and finally make your way to a while staying away from b c and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=720 request_id=50e6755307b8ae11c86f24243413d7c2 response_code=200
Symbolic Translation: 65/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from d c and a until you make b single visit to b and then make your way to d while staying away from b c and a and then make your way to c while staying away from b d or a and finally make your way to a while staying away from b d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=82514b80a6b9b7e32f05cbe995e87913 response_code=200
Symbolic Translation: 66/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: head to c a d and b in this order without skipping or revisiting any one of them\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1628 request_id=6dd1a1c4955d53f7b6444795649a9cd3 response_code=200
Symbolic Translation: 67/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: head to b d c and a in this order without skipping or revisiting any one of them\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1648 request_id=c7600d5e0812874c220ed857ef3f22b9 response_code=200
Symbolic Translation: 68/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit each of b c a and d exactly once in this order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1622 request_id=1b6ec56bd2a872cc2690b3e77cbf8e6e response_code=200
Symbolic Translation: 69/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit each of b c d and a exactly once in this order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1623 request_id=6fad52471c791e04d63912000d3b2c67 response_code=200
Symbolic Translation: 70/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a but before visiting a you must visit c only after that visit d after visiting d visit b visit each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1630 request_id=d1767eecfa4decba741d0faced49a1bb response_code=200
Symbolic Translation: 71/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b but before visiting b you must visit d only after that visit c after visiting c visit a visit each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1625 request_id=2e0232375f94ce85df6a8c90700eb545 response_code=200
Symbolic Translation: 72/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b only once while avoiding d then visit d once while avoiding a only after visiting a once visit c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 389
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1173 request_id=c28d8c60b561e76c60105733d22913ce response_code=200
Symbolic Translation: 73/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b only once while avoiding c then visit c once while avoiding a only after visiting a once visit d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 389
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1178 request_id=27315ed982ea206c1a5dfbe6da869166 response_code=200
Symbolic Translation: 74/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b a d c once do not visit a without visiting b and do not visit a without visiting d do not visit c without visiting d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1641 request_id=a8fe4440bfc6ae70bf1842cc942ab55b response_code=200
Symbolic Translation: 75/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b a d c once do not visit a without visiting b and do not visit a without visiting d do not visit c without visiting d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1617 request_id=baa73b9a31c9bed2ae809deff1334006 response_code=200
Symbolic Translation: 76/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c then b then a then d follow this strict order and visit each location only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1625 request_id=e58d2f4a7771ec710c066ce7bb8f571d response_code=200
Symbolic Translation: 77/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d then a then b then c follow this strict order and visit each location only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1623 request_id=ce88b578fff6639e4a4987763a316764 response_code=200
Symbolic Translation: 78/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please go to c then d then b then a in that specific order without revisiting previously visited location\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1626 request_id=8177c940848f2a0dbfe652f6e0904bf4 response_code=200
Symbolic Translation: 79/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please go to b then a then c then d in that specific order without revisiting previously visited location\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1695 request_id=3dae7ac674c8325ca94265c4c358dd1e response_code=200
Symbolic Translation: 80/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to d once without visiting a then go to a once without visiting c then go to c once without visiting b finally go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1645 request_id=54c627e8f2cf20c0c67cd2eaf19b74a0 response_code=200
Symbolic Translation: 81/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to d once without visiting a then go to a once without visiting c then go to c once without visiting b finally go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1618 request_id=cf27d23602f3021f4450d1382e802242 response_code=200
Symbolic Translation: 82/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to c once then go to b once while avoiding a then go to a once while avoiding d finally go to d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1625 request_id=3223de15b2786b794fad2c41e93112cb response_code=200
Symbolic Translation: 83/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to d once then go to c once while avoiding a then go to a once while avoiding b finally go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1625 request_id=85fd3d98ee6e7de96735f3fe393d0f88 response_code=200
Symbolic Translation: 84/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b without visiting d then go to d without visiting a then go to a without visiting c finally go to c while only visiting each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1628 request_id=30c4f2816dc00f3be1c0cb60f380c6ea response_code=200
Symbolic Translation: 85/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d without visiting b then go to b without visiting c then go to c without visiting a finally go to a while only visiting each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1766 request_id=91cc88c3964fab3548e3bab46540ec58 response_code=200
Symbolic Translation: 86/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b then d then c and then a in that strict order without returning to previously visited locations\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1623 request_id=23219cf4151b42e974f1605701e50666 response_code=200
Symbolic Translation: 87/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a then b then d and then c in that strict order without returning to previously visited locations\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1622 request_id=868c0c4c81da3f901a0a049a9e8e6ddf response_code=200
Symbolic Translation: 88/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never stop visiting d c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=6c825fe6b245b2074396d1c02ff24d2f response_code=200
Symbolic Translation: 89/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never stop visiting d a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=e177e67a11bfd8ff399d99170c61889d response_code=200
Symbolic Translation: 90/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: frequent a b c and d infinitely in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=775 request_id=cfb1c26efbf7c866097e9e9157994bb7 response_code=200
Symbolic Translation: 91/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: frequent b a c and d infinitely in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=a9944f22d05316c96dcc6120c253d49e response_code=200
Symbolic Translation: 92/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please keep visiting b d a and c without stopping\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=6bb345c435976a19ad3aa7eee11d8541 response_code=200
Symbolic Translation: 93/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please keep visiting c a d and b without stopping\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=12d91eabb5842252c3fc1e24b61d5334 response_code=200
Symbolic Translation: 94/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure a c d and b are visited infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=727 request_id=168f76ff73a25b4d54da97ccb391735b response_code=200
Symbolic Translation: 95/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure c a d and b are visited infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=924b9244025aa1afad1364e969199017 response_code=200
Symbolic Translation: 96/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a c d and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=a1d64ad7540c98e3ccffa3b574b631db response_code=200
Symbolic Translation: 97/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a d c and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=71be6ffa5be1f695215894b784f8546f response_code=200
Symbolic Translation: 98/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit locations c b d and a an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=738 request_id=cde59f035a1bda4b98f8820c716ef093 response_code=200
Symbolic Translation: 99/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit locations c d a and b an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=be5bde44d2309c67acef782082c365e1 response_code=200
Symbolic Translation: 100/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting c a b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=d83112f8a5617ea337d04ca8cc4d695e response_code=200
Symbolic Translation: 101/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b d a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=0dbc2de3788b0a958a57752ffe3d170d response_code=200
Symbolic Translation: 102/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to c b d and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=3becff1d2864f02db34dd4e3cc0273b2 response_code=200
Symbolic Translation: 103/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to c a d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=c9976335778574a18c078d14832d457f response_code=200
Symbolic Translation: 104/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b a d and c over and over again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=23929381def8d1787803a867bc51cc3a response_code=200
Symbolic Translation: 105/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a b c and d over and over again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=69d95e1ccdd79fe4117f22d37d999436 response_code=200
Symbolic Translation: 106/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue to stop at a c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=713 request_id=571e0a6453e26e96a557739db309ebc9 response_code=200
Symbolic Translation: 107/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue to stop at b a c and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=a301602e78f8fc5b2438c006c2b675b1 response_code=200
Symbolic Translation: 108/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continuously visit a c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=5af3a007eca24b474c120e1ae56d12ea response_code=200
Symbolic Translation: 109/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continuously visit d c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=766e8a3a8874ea6809482ef3f4bdce1a response_code=200
Symbolic Translation: 110/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to c a b and d a finite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 449
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1853 request_id=23e5455abb7f1bca3cfee857a3014793 response_code=200
Symbolic Translation: 111/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a c b and d c finite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 449
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1865 request_id=ac3fc6564d19cab12b7d321430a02fd2 response_code=200
Symbolic Translation: 112/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: perpetually travel to c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=71666f9b6626051e61682355607c31ff response_code=200
Symbolic Translation: 113/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: perpetually travel to c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=fdec754356a150a058f4673bba90e9e3 response_code=200
Symbolic Translation: 114/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: explore a c and b endlessy\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=2f221502634f667cb4b02038db6b5aca response_code=200
Symbolic Translation: 115/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: explore b a and c endlessy\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=653dc13cdaf6497d4df4806cf992ad09 response_code=200
Symbolic Translation: 116/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are prohibited from not infinitely going to a d b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=9d341cc1d4d5d62f3e084c88088c7dea response_code=200
Symbolic Translation: 117/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are prohibited from not infinitely going to b a d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=abe67c0f86ba85259bdf29f90bb7cecb response_code=200
Symbolic Translation: 118/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting d a c and b in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=32d37cc6d8670db9840567117e08edbb response_code=200
Symbolic Translation: 119/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting d c b and a in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=abb0e9a899f754b1fda6363c7b585440 response_code=200
Symbolic Translation: 120/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to b a d and c in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=b1ff4d74566e90d1d33b7a27ab5ba493 response_code=200
Symbolic Translation: 121/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to d c b and a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=0603d571a7c70b4358e3d2dd200cb3d2 response_code=200
Symbolic Translation: 122/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting d a b and c in any order infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=2169612da71757bf1512ca789c28b294 response_code=200
Symbolic Translation: 123/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b d c and a in any order infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=0417cecc40dba326cf4534637783f868 response_code=200
Symbolic Translation: 124/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting d c a and b in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=4fe6ad3fa765ffdc66496d3bda611959 response_code=200
Symbolic Translation: 125/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting a b c and d in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=f867a25f9e77bb146319382275e529db response_code=200
Symbolic Translation: 126/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop going to a c d and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=9d09ab8eacb7cd7636a70a74193eee47 response_code=200
Symbolic Translation: 127/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop going to b c d and a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=3dc7920c79df91bef42b66641c144ae5 response_code=200
Symbolic Translation: 128/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to a d c and b an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=1b086ad4d4f2a667eda6e426d93a3848 response_code=200
Symbolic Translation: 129/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to d a c and b an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=7d202ae1fd0b980ef50233ebe171d845 response_code=200
Symbolic Translation: 130/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a c d and b an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=4f4a13c0a9ef946dc68c6070059d1229 response_code=200
Symbolic Translation: 131/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b d c and a an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=d829ac009b55ce32b5f6bab27803ac4c response_code=200
Symbolic Translation: 132/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue visiting d b a and c an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=7c4f3a0855fbe978ba07cd7fe342601f response_code=200
Symbolic Translation: 133/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue visiting a b d and c an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=6d3716f7e8619fb8385d438bd34e769f response_code=200
Symbolic Translation: 134/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting c d a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=717 request_id=6949de6df4a26a0ca5e0fc00f9e54b57 response_code=200
Symbolic Translation: 135/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting a d c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=7e84b6998c8a0effeb4abaf681497857 response_code=200
Symbolic Translation: 136/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=b12d4b953abce52c82442d98838ed4ba response_code=200
Symbolic Translation: 137/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=3e460d1c1e812b085306fe06a02fc2e6 response_code=200
Symbolic Translation: 138/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never visit b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=f56ed59867c4f20acefe94835b07dbb1 response_code=200
Symbolic Translation: 139/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never visit b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=6da87827719004a15dfaf5e37c196c07 response_code=200
Symbolic Translation: 140/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=32768698fbc357fb9036b340e9010adb response_code=200
Symbolic Translation: 141/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=04476589451c20f91045c1973c4eb7da response_code=200
Symbolic Translation: 142/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=c24e777fa43adbedb29786c0f413a13e response_code=200
Symbolic Translation: 143/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from c b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=cea252552d2aff43f0e0987e95761f46 response_code=200
Symbolic Translation: 144/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid a b and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=07e91541811785f37dd43c59fa2a91a8 response_code=200
Symbolic Translation: 145/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid a b and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=a350dca14e2e937808de718fe9d28464 response_code=200
Symbolic Translation: 146/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a c or b at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=6d3449ea0368648a23539f5d01f6c04d response_code=200
Symbolic Translation: 147/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit b c or a at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=ae7c9d555eefc03e960adcb7bc0bb6cd response_code=200
Symbolic Translation: 148/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit a c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=75f4a74557d713484e27a349a1960923 response_code=200
Symbolic Translation: 149/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=9db0df889ea465832e368b58f2062af4 response_code=200
Symbolic Translation: 150/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=b9e659fd309a5f30923d117f5dbef1e2 response_code=200
Symbolic Translation: 151/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=161e1dbcfc559e0ce8aa42c39f4099b5 response_code=200
Symbolic Translation: 152/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit either one among b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=6fc81fb10bc9e26453b20d88da5b2512 response_code=200
Symbolic Translation: 153/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit either one among a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=5c445114af2499d0db7e76d197a74fff response_code=200
Symbolic Translation: 154/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach the locations b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=bb2027d4d1f51cc8deb417720acdebf3 response_code=200
Symbolic Translation: 155/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach the locations a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=613648b8dde0a5efb394ce230967252d response_code=200
Symbolic Translation: 156/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach c ensure that you never reach a and ensure that you never reach b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=5fb66742f0e0ea0d64c3e945c5d1b6e3 response_code=200
Symbolic Translation: 157/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach b ensure that you never reach a and ensure that you never reach c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=11105e3c62dedfe2b83fa54cdda132fd response_code=200
Symbolic Translation: 158/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a b and c should never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=e97b2e61eff71663672e80d8a66ab4a4 response_code=200
Symbolic Translation: 159/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b c and a should never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=3784485b43ae053cb586d82f90fa0eb4 response_code=200
Symbolic Translation: 160/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=7ac218201f14de98638db56a50bcd4d7 response_code=200
Symbolic Translation: 161/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=32baa4ade41795d3406848536351a830 response_code=200
Symbolic Translation: 162/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=111f6087367a7a806cf144f71cba15c0 response_code=200
Symbolic Translation: 163/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=e9ea3d47c8685908ec69daf4ef284d52 response_code=200
Symbolic Translation: 164/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c b and a can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=3e0d9477049d060a1268a317658fb12a response_code=200
Symbolic Translation: 165/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c b and a can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=555 request_id=a115514c0e533b32ad066b7a7a92d954 response_code=200
Symbolic Translation: 166/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=26bec06b3d11ffdaf38914f6876f8e3c response_code=200
Symbolic Translation: 167/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=3a05a93e5ff11d2d1ae9e20818958e6a response_code=200
Symbolic Translation: 168/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid c b and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=80a7e07aa0f2f68f1faed10696f8f3e0 response_code=200
Symbolic Translation: 169/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a b and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=ce188dcab2440a285569954c232805cb response_code=200
Symbolic Translation: 170/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to c b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=da4eea94512a6331daf54d624fb13c12 response_code=200
Symbolic Translation: 171/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=a0d1df797f1f68878b4edd3e96caa36e response_code=200
Symbolic Translation: 172/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid c b and a forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=e6a800662c011214c34702b71c84b1a0 response_code=200
Symbolic Translation: 173/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b a and c forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=f2d2cb895f395a5b0c06031a12e3cef5 response_code=200
Symbolic Translation: 174/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=485 request_id=8eb0e6a9d29867dfdcbe7266976a487d response_code=200
Symbolic Translation: 175/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=776a99596f6ccb4c1c03cd0174ae7b7f response_code=200
Symbolic Translation: 176/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a b or c can never become true at any instant\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=16145505ae66790258ac015e7238e976 response_code=200
Symbolic Translation: 177/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c b or a can never become true at any instant\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=4807259cb2ed87b0553d8750c4225f90 response_code=200
Symbolic Translation: 178/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that b c and a never hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=86bff3f4ee380f6c56c5f41ca34340bf response_code=200
Symbolic Translation: 179/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that b c and a never hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=17fe4a3fc22311a3743484127ddf17ca response_code=200
Symbolic Translation: 180/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit d c b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=fe74afcd6e3ba33fa784484d0d491f33 response_code=200
Symbolic Translation: 181/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit d c a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=f9e8b21688bff73f904790783cbc3a01 response_code=200
Symbolic Translation: 182/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to c a d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=ac084fed0babf761174871441b5ad018 response_code=200
Symbolic Translation: 183/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to c d b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=4d6f977dd33ebdc9ab8c7e95cfa7d57b response_code=200
Symbolic Translation: 184/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b a d or c at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=55d84883dad3701640e026994febe5a8 response_code=200
Symbolic Translation: 185/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to c d a or b at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=fe338e5362329f68ef239208929d74ae response_code=200
Symbolic Translation: 186/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit b a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=9373d224c8550b2bf012d42634a52970 response_code=200
Symbolic Translation: 187/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit d a c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=818ae3ee46e3f4fc68436e5e059fd548 response_code=200
Symbolic Translation: 188/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to d c a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=03386e4beabd927779edefcd3e994861 response_code=200
Symbolic Translation: 189/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to a b c or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=90b54f075ea9575681fa6ecddd96b50f response_code=200
Symbolic Translation: 190/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from d c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=60f5f939df85215e7f7aee078e13a82c response_code=200
Symbolic Translation: 191/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from d a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=20da7b2ac11dc4716efb164785ed408c response_code=200
Symbolic Translation: 192/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid d b c and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=b75c7f95fac0f6ad98e33d6fa0321dc6 response_code=200
Symbolic Translation: 193/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid c a d and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=6f979780062484d5bb428793c47e53d3 response_code=200
Symbolic Translation: 194/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit any locations among d c a b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=290f61b3544dd6e0248ca8a06f6abaa8 response_code=200
Symbolic Translation: 195/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit any locations among d a b c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=727 request_id=0147ef19c856781e6a7840b9938e89a8 response_code=200
Symbolic Translation: 196/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure to not reach any of b c d and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=87981d5b3ee3dea448de0fe1ca1c00ef response_code=200
Symbolic Translation: 197/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure to not reach any of c d b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=ca0378d314be677cdb1441acc252ae06 response_code=200
Symbolic Translation: 198/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to d a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=727 request_id=819c2636660f40894ec90ddb2e93f3bc response_code=200
Symbolic Translation: 199/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to c a d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=73b84d4de8d8618f496dc870819786c7 response_code=200
Symbolic Translation: 200/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c d b and a must never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=d0b99015f7f83c69788da275e147e985 response_code=200
Symbolic Translation: 201/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c b d and a must never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=011370a94f0ed9a3a78df8de20d625d2 response_code=200
Symbolic Translation: 202/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to d never go to a never go to b and never go to c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=02483905651490c242fa39ff37c22276 response_code=200
Symbolic Translation: 203/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a never go to b never go to c and never go to d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=7df17a64999d295a75b38932d10649bc response_code=200
Symbolic Translation: 204/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a d b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=828609a0ca03bc59900cf01123792454 response_code=200
Symbolic Translation: 205/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=d0d0a59b515e6fe4d45c6a498bce34a7 response_code=200
Symbolic Translation: 206/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to d a c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=b5a0746c8d932e352210243e8f89aa91 response_code=200
Symbolic Translation: 207/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a d c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=cb0ed7c44718a4ed848451c5851fffd6 response_code=200
Symbolic Translation: 208/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but a c b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=0913f46c42d325213b920f0c69607954 response_code=200
Symbolic Translation: 209/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but d a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=0980480de1cb078a652e3f00c883d8ae response_code=200
Symbolic Translation: 210/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: d b c and a can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=aa4106aecdee38e48444b53e64a0e88a response_code=200
Symbolic Translation: 211/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: d c b and a can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=ae0e8b68d65caf09d3e6c5fb40b689dd response_code=200
Symbolic Translation: 212/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from a c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=a1dbb30a9d568c08c1acb94e625e9fda response_code=200
Symbolic Translation: 213/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from c b a and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=8e7cd80326594cfb58467c35a3981ef7 response_code=200
Symbolic Translation: 214/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid d c b and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=52c850d8bf439c5fde3c9e3eeeaa6c2f response_code=200
Symbolic Translation: 215/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid c d a and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=9f080239b3bbef686fff3a469b9867f4 response_code=200
Symbolic Translation: 216/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to d b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=30112f30073a4ecaa1a2e507ecb10b97 response_code=200
Symbolic Translation: 217/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to d b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=b6f1b3608cb065c9e25ea35beff3b0ea response_code=200
Symbolic Translation: 218/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid c d b and a forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=c87460df562fdd80fd7a15ec8894183e response_code=200
Symbolic Translation: 219/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a b c and d forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=724 request_id=e46de9b84edd1bf688283e4da117f618 response_code=200
Symbolic Translation: 220/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a b c or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=47b4c22fe7359a4d51693387ee4a7767 response_code=200
Symbolic Translation: 221/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a d c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=bd1eb43d596dd2701295663da852c1e9 response_code=200
Symbolic Translation: 222/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: d a b and c must never be allowed to be true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=eb3a4d132b5cd7ac9b730688bfe54585 response_code=200
Symbolic Translation: 223/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: d c b and a must never be allowed to be true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=21302f8bcdc19c454245b59d3d7230c0 response_code=200
Symbolic Translation: 224/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go through any of a d b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=a9381ad8a60bba53e87353fa32ad6d35 response_code=200
Symbolic Translation: 225/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go through any of a c b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=77683f8af7e0189da44c8b7f025cbea0 response_code=200
Symbolic Translation: 226/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit c b d a or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=cb7cac5cc156e4eab40452cd7271b34c response_code=200
Symbolic Translation: 227/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit c b d a or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=d39d13623bb230f2acc4e53badc2dc40 response_code=200
Symbolic Translation: 228/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to h c a d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=6eb04d30144042c1e84da31147fe61f2 response_code=200
Symbolic Translation: 229/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to a c h b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=c8c26fb7d896dca28791b1ca07b52b8a response_code=200
Symbolic Translation: 230/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to h a b d or c at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=6f99372ca2b89740fffb387de4fed4fe response_code=200
Symbolic Translation: 231/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b h a d or c at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=719 request_id=b5eaccf6f3ba4ca83aacc8c3e38323c6 response_code=200
Symbolic Translation: 232/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit b d h c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=726 request_id=6349df2597915fe7d8af4f615a5bef33 response_code=200
Symbolic Translation: 233/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit h d c a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=ab304c069b5b81eee005a4a8784c7216 response_code=200
Symbolic Translation: 234/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to d b c a and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=be7d91c2b4be9bac9c8d3cc36472ca97 response_code=200
Symbolic Translation: 235/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to b c a h and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=152afba48c4b89d0648b642a47b7905a response_code=200
Symbolic Translation: 236/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from h d b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=cea39be31943cf07070f6e7768927f17 response_code=200
Symbolic Translation: 237/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from b a h d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=16042c6d5ba6261c8ff4684beef8e8ed response_code=200
Symbolic Translation: 238/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid b d h a and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=accdbe06cbe8778d8481255fcad1f810 response_code=200
Symbolic Translation: 239/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid c d a h and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=0933002ad9edc3e4309e7e04210826cb response_code=200
Symbolic Translation: 240/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to c never go to b never go to h never reach d and never reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=ce0684ae82c612fbd914c753926bff35 response_code=200
Symbolic Translation: 241/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to h never go to b never go to c never reach a and never reach d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=d08c2302b4cf07d78f6311e152f8f4f3 response_code=200
Symbolic Translation: 242/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never reach the following locations d h c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=049562689c4578e9b18abf701cd5824b response_code=200
Symbolic Translation: 243/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never reach the following locations a h b c and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=92cd06d2a295b74dfd5d17e928883d43 response_code=200
Symbolic Translation: 244/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that b c a h and d are never visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=876ccb2b19f8a31ea0362f4a7162fec0 response_code=200
Symbolic Translation: 245/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that b h a c and d are never visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=802 request_id=45addd4e68d82e7f2591b01ea2ce5f2a response_code=200
Symbolic Translation: 246/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b c a d and h should never be reached\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=132f504f9ab9dd1387b512935987d7b9 response_code=200
Symbolic Translation: 247/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: h b a c and d should never be reached\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=c33221e7d830e8ba67c5de2c05c2be81 response_code=200
Symbolic Translation: 248/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b c h d or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=718 request_id=93faa8fbc2333a5ed1e70595631e957c response_code=200
Symbolic Translation: 249/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to h b d c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=bc614766dc5ed4f85eb959c61800436b response_code=200
Symbolic Translation: 250/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to d b c a or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=dc01ed8e1d054101b2a83d0a705e5c7d response_code=200
Symbolic Translation: 251/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to d b h c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=0bf6920f1a05af36f62e2732cdb3c5e7 response_code=200
Symbolic Translation: 252/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but h b c d and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=620ed69d3241c409fe88450491f79be4 response_code=200
Symbolic Translation: 253/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but h a c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=17d0c11a7a5c61fe0f9840774ec01cad response_code=200
Symbolic Translation: 254/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b h a c and d can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=780 request_id=f66692389a0c9b4eb8592bf7c69e470d response_code=200
Symbolic Translation: 255/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a h b d and c can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=a1e41250ada53daedfd4f12ea8eac292 response_code=200
Symbolic Translation: 256/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from b d h a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=01825a48bf4c821712c29066c891f4ce response_code=200
Symbolic Translation: 257/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from h a d c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=9570800872edd5257b9ed39a293d2b8d response_code=200
Symbolic Translation: 258/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid b c a d and h at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=2ed43fed81f3b681d062bf23200273e0 response_code=200
Symbolic Translation: 259/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid c b a h and d at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=c5e78081cab85d6f317ac10a88da4ae3 response_code=200
Symbolic Translation: 260/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b d c h or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=f709777bbc12449089e0f9615197df93 response_code=200
Symbolic Translation: 261/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to h b c d or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=d17ddf72021b6e74c080718fe08f1fc5 response_code=200
Symbolic Translation: 262/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid h a d b and c forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=d76a208e4b1205862fc173ccedd667d2 response_code=200
Symbolic Translation: 263/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid d a h c and b forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=732 request_id=50f0a49faad1572f534c47c47b1d6a2a response_code=200
Symbolic Translation: 264/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a c h d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=773 request_id=211bdd4ebedfb539f8550eaa0db679c4 response_code=200
Symbolic Translation: 265/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to c b d a or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=89a354319aa7a929487c7336235b60a4 response_code=200
Symbolic Translation: 266/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that none among h b a c and d are ever visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=0a4101b92d6ed2d0faf837a97dc2167e response_code=200
Symbolic Translation: 267/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that none among h c a b and d are ever visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=f78afd754ed98ca3f0fb8152fd630b3d response_code=200
Symbolic Translation: 268/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: d h a c and b must never be allowed to hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=717 request_id=dd1b4a4b4990080eb3b6ff8750b901b2 response_code=200
Symbolic Translation: 269/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c a b d and h must never be allowed to hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=61b0e20dfbaeb574187e915aeea858d6 response_code=200
Symbolic Translation: 270/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=261 request_id=3c6867aa4935941a1de69bf0c4a31652 response_code=200
Symbolic Translation: 271/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=253 request_id=6a0cf590ed0dad5f0c10d56f1264a72c response_code=200
Symbolic Translation: 272/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid visiting a till you observe b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=23f9b282e66d9300eb44fbf0d49615f9 response_code=200
Symbolic Translation: 273/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid visiting b till you observe a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=256 request_id=9dfdcc7b079fce6df482aa07ffa09f5d response_code=200
Symbolic Translation: 274/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until b has occured\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=da1cdb0f95b27d5f0916a94131670f17 response_code=200
Symbolic Translation: 275/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until a has occured\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=fb7f47118453fc98406f767e5ff55d3c response_code=200
Symbolic Translation: 276/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you observe b only then are you allowed to go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=6d5685cadab749ed3e2cac703e497dd5 response_code=200
Symbolic Translation: 277/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you observe a only then are you allowed to go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=a0e6dd53a7d3dbf49f25809d34a80615 response_code=200
Symbolic Translation: 278/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b only after seeing a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=724e32ef7b301fcc9076ba7f87ad6be2 response_code=200
Symbolic Translation: 279/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit a only after seeing b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=86c1c5043a528daff240ee64da80ba1a response_code=200
Symbolic Translation: 280/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=7acb390321bd0dadd92ba628d5b84000 response_code=200
Symbolic Translation: 281/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=12d83a8c27c423d97d55b8b4fbb92ee6 response_code=200
Symbolic Translation: 282/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a until you reach b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=919183593bec657ee8e35c80cdc13a0e response_code=200
Symbolic Translation: 283/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b until you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=379a580d9f53ff0febdea9dda855f405 response_code=200
Symbolic Translation: 284/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from b until you move to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=24a6abc0f6ea011ceefd9f204dbeed23 response_code=200
Symbolic Translation: 285/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from b until you move to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=e57cbe6376a437a718e8057311430edc response_code=200
Symbolic Translation: 286/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not move to a until you arrive at b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=15ea690fa8dfb303a8a3b636d64277cc response_code=200
Symbolic Translation: 287/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not move to a until you arrive at b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=c70836e3a2e29d968b96dfd5dd7bed23 response_code=200
Symbolic Translation: 288/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you have gone to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=4747ce2cde30390bc48e8e29af023fa6 response_code=200
Symbolic Translation: 289/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until you have gone to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=2d6534b135d63ad216ee8ce5adff6ac5 response_code=200
Symbolic Translation: 290/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b at all costs until you reach a first\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=936470347e3e194a61ac7ea45c6157f5 response_code=200
Symbolic Translation: 291/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b at all costs until you reach a first\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=3e263f0ea8bfcd6bd8c3beee230b0119 response_code=200
Symbolic Translation: 292/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: until you have gone to a you can not go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=cc139fdfdc7257a5d4ae81b53dbb89ad response_code=200
Symbolic Translation: 293/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: until you have gone to a you can not go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=243 request_id=b29b45a666cc39b3b0499bd8caa66683 response_code=200
Symbolic Translation: 294/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b until you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=1962932c51e1f2d200acce11ccf37af5 response_code=200
Symbolic Translation: 295/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to a until you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=483 request_id=7cab3ec12843827968f37ff1c95fe25d response_code=200
Symbolic Translation: 296/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a until you see b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=2f191d5763d7b3f8066233d5a07f2f76 response_code=200
Symbolic Translation: 297/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a until you see b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=f076e73c3becaa6b59198dc5e23f2efd response_code=200
Symbolic Translation: 298/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to a before b happens\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=b5f1b0da5464c260298a0eda24a3d32b response_code=200
Symbolic Translation: 299/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to a before b happens\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=89d13367d78f729866d0206b976d417b response_code=200
Symbolic Translation: 300/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can only go to b after a is seen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=07b0885916c586938f86e50f8860621c response_code=200
Symbolic Translation: 301/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can only go to b after a is seen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=00fbdddf564f54d30adf9498fbb3d19e response_code=200
Symbolic Translation: 302/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a must be observed before visiting b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=a147fb51c810764d9082c1289c17c20a response_code=200
Symbolic Translation: 303/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b must be observed before visiting a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=0ceb1860d7aa1ae96d23f81a6a1e2c78 response_code=200
Symbolic Translation: 304/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b but only after you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=3e8c34ad9dbd871f75ec0a547ba4707e response_code=200
Symbolic Translation: 305/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b but only after you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=feb7b63f8ed6ea00601f9b8eff054c20 response_code=200
Symbolic Translation: 306/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b has to be observed prior to any visit to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=419b9fce48106eaddfdd6828f33cb42b response_code=200
Symbolic Translation: 307/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b has to be observed prior to any visit to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=3eba456db5070b7c3406979d82d226d3 response_code=200
Symbolic Translation: 308/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you see b before going to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=55963e4e145e6e2fefb24235411adb38 response_code=200
Symbolic Translation: 309/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you see b before going to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=a49e7ea3a09ec5dba1ca67c9642b2567 response_code=200
Symbolic Translation: 310/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not make any visit to a when b remains unseen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=251 request_id=e39145669f9775010b2ed0d4a0ffecde response_code=200
Symbolic Translation: 311/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not make any visit to a when b remains unseen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=249 request_id=c3964fb82a9c28553bc304339abec1ee response_code=200
Symbolic Translation: 312/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit b till you observe a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=5712b2fd8d96bbc5569db625a38b7675 response_code=200
Symbolic Translation: 313/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a till you observe b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=f7cf0a407b3b917f9afb564b1beece6b response_code=200
Symbolic Translation: 314/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing a unlocks b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=245 request_id=6760c59fda776c355bd00eaee8f5f5c6 response_code=200
Symbolic Translation: 315/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing b unlocks a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=247 request_id=b671f6b1475417757ce80c73c44b5fec response_code=200
Symbolic Translation: 316/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1410 request_id=431f2917f53a29383390cc641f0473c1 response_code=200
Symbolic Translation: 317/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1389 request_id=177a5421d5b59690f691c2aa6f20b666 response_code=200
Symbolic Translation: 318/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1394 request_id=734530452f03589ac47b2eb4ca25c8be response_code=200
Symbolic Translation: 319/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1391 request_id=6276eacf6bad925b49048cb78641b91b response_code=200
Symbolic Translation: 320/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=0463992c86f814e6593be521546e5fcb response_code=200
Symbolic Translation: 321/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=8a18aa72d5d4717ec2c9244e85c679ec response_code=200
Symbolic Translation: 322/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1434 request_id=e19bd4ff3ff48234eff73e83a73d2ac9 response_code=200
Symbolic Translation: 323/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1399 request_id=e8304a4ba1903ca0aa7262c791d3320d response_code=200
Symbolic Translation: 324/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times or more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1396 request_id=36c612e8fff4a6e37fa48392133a27d0 response_code=200
Symbolic Translation: 325/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times or more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1391 request_id=02f28a587098967a8ae17952febf3bcc response_code=200
Symbolic Translation: 326/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1391 request_id=22d6ceacbcafb1153e33cd6dace179ed response_code=200
Symbolic Translation: 327/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=3d21230d9102dac3c404b31e5c2c279b response_code=200
Symbolic Translation: 328/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=62f993d8a492c48f685e82361b9f5138 response_code=200
Symbolic Translation: 329/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1390 request_id=7c20f4a9ad73040aee66bbc833d80eac response_code=200
Symbolic Translation: 330/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1395 request_id=8acb0a59c44c5d0b458043892722cdeb response_code=200
Symbolic Translation: 331/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1417 request_id=f1d5ed8acb1b7f92b8022e17550731cf response_code=200
Symbolic Translation: 332/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: your task is to go to a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=a412f7064ea17ac893a4d8157b9552f0 response_code=200
Symbolic Translation: 333/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: your task is to go to a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1413 request_id=8525d17b1945c0b49f964263d7a07ce2 response_code=200
Symbolic Translation: 334/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1495 request_id=aed3bce7875efd86c0dd8d31e774a2a1 response_code=200
Symbolic Translation: 335/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1488 request_id=cb343870ae1ad31f62ccfc3d97e25ff6 response_code=200
Symbolic Translation: 336/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you visit a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1477 request_id=b1bc8cd5b9dd5fd11bcb69bf3f21639e response_code=200
Symbolic Translation: 337/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you visit a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1481 request_id=9c0d79ec0c77e7eeca447211518d6d61 response_code=200
Symbolic Translation: 338/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to reach a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1485 request_id=c1de5848f674f04e7a4f7d91343efcd9 response_code=200
Symbolic Translation: 339/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to reach a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1439 request_id=891f582a1bd11db3895cc38b1bf4ea65 response_code=200
Symbolic Translation: 340/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a equal or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1459 request_id=5158abf90aaf3171b252dda8cb3cecbf response_code=200
Symbolic Translation: 341/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a equal or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1392 request_id=d510e72593362f064e00d8727300a00a response_code=200
Symbolic Translation: 342/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1431 request_id=d14b6ed9709a99753aa5f74651b71739 response_code=200
Symbolic Translation: 343/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1501 request_id=1e05407f8b6ced332291ff80b2d9cd79 response_code=200
Symbolic Translation: 344/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a has to be visited at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1490 request_id=f19d5ec95a377dcc00eb2a938d330fa1 response_code=200
Symbolic Translation: 345/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a has to be visited at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1501 request_id=20b19e38c306d528938dfa8ef0d6fece response_code=200
Symbolic Translation: 346/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit and then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1478 request_id=b2641fd6847214c3d3249a5042563008 response_code=200
Symbolic Translation: 347/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit and then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1499 request_id=cbbe028743155af9207df26646621ae2 response_code=200
Symbolic Translation: 348/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1477 request_id=6bb1da49de7241aac76fbbdeedae51d5 response_code=200
Symbolic Translation: 349/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1501 request_id=25f798bca64d512866b99cea077ac386 response_code=200
Symbolic Translation: 350/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must pass through a on at least five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1484 request_id=85a2a434b5fa05d4f4beb3f01fbe7c82 response_code=200
Symbolic Translation: 351/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must pass through a on at least five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1476 request_id=3821cd6c04c84d0db336355c6ad9ac76 response_code=200
Symbolic Translation: 352/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the minimum number of times you must visit a is five\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1482 request_id=a64f7e3fd4bee4c145126fb081d1a438 response_code=200
Symbolic Translation: 353/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the minimum number of times you must visit a is five\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1477 request_id=378ddf046032fab0a0d8efd189163432 response_code=200
Symbolic Translation: 354/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach a then leave a and repeat this at least four more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1256 request_id=53111648556f5a931a98146686e45e1a response_code=200
Symbolic Translation: 355/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach a then leave a and repeat this at least four more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1258 request_id=a387001abb21cb51c440ab781d9e0850 response_code=200
Symbolic Translation: 356/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not complete the task without visiting a on five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1472 request_id=fce149f6f1edd8be544a6fef23169892 response_code=200
Symbolic Translation: 357/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not complete the task without visiting a on five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1489 request_id=8cde42d6100afeafa9bb21f3ad5c3b9b response_code=200
Symbolic Translation: 358/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a any fewer than five separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1482 request_id=361a1cf63ca272751647bb5451757ed8 response_code=200
Symbolic Translation: 359/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a any fewer than five separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1494 request_id=809f495d370eabcffa9c5c9b49ed91e6 response_code=200
Symbolic Translation: 360/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you have at least five separate times where you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1515 request_id=004c92cd11029c3c650a6ea0b91e01a6 response_code=200
Symbolic Translation: 361/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you have at least five separate times where you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1497 request_id=2a61ab163008197c8dbc47bfe1d129d0 response_code=200
Symbolic Translation: 362/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1493 request_id=b4666f41732c98720200c1502e759197 response_code=200
Symbolic Translation: 363/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1508 request_id=9735cfc34b296643cfd080bb4333eb12 response_code=200
Symbolic Translation: 364/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1485 request_id=433eab8dba0e04c90d5af61e47c327ad response_code=200
Symbolic Translation: 365/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1507 request_id=dffe3b6fbdd2417352c0561588dbe21f response_code=200
Symbolic Translation: 366/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1492 request_id=bae8336146f1424551bdbe56e1275248 response_code=200
Symbolic Translation: 367/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1507 request_id=a7995c8ac982fcc8bcc28da56d02e56f response_code=200
Symbolic Translation: 368/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1493 request_id=206680f3a05e5f4043b52450cb0ece27 response_code=200
Symbolic Translation: 369/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1494 request_id=71282646a1eb243870206fa8bcfedbca response_code=200
Symbolic Translation: 370/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must reach a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1504 request_id=cd6045d499c808bf71c70f30b35324be response_code=200
Symbolic Translation: 371/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must reach a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1499 request_id=1c8dd63d57c53a20f924974a40ce6135 response_code=200
Symbolic Translation: 372/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: navigate to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1476 request_id=df6a60539258d98adb755635160ef800 response_code=200
Symbolic Translation: 373/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: navigate to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1467 request_id=53164de8e6f0c155e2e305e086211b71 response_code=200
Symbolic Translation: 374/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times no more no less\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1484 request_id=962aa656a81fd5963f459b5673b08d0a response_code=200
Symbolic Translation: 375/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times no more no less\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1535 request_id=e8df4f20ff04b28566b3f1f14567f169 response_code=200
Symbolic Translation: 376/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a and you can not go there more or less than three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1500 request_id=65faccfba5df3be59f43874a277b9fb1 response_code=200
Symbolic Translation: 377/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a and you can not go there more or less than three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1452 request_id=a1169a70205751fb41e843cd4ada3e63 response_code=200
Symbolic Translation: 378/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a more or less than three times is prohibited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1438 request_id=11d688f9388ab4be4b84fac733a50432 response_code=200
Symbolic Translation: 379/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a more or less than three times is prohibited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1479 request_id=222cad8b959513d6f2b1e0cda1067281 response_code=200
Symbolic Translation: 380/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a three times and do not visit it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1472 request_id=8c0bb2b58718cac5f56ae899a0ec2e82 response_code=200
Symbolic Translation: 381/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a three times and do not visit it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1494 request_id=90f7990e631a0fac6c8c2c365281175a response_code=200
Symbolic Translation: 382/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1482 request_id=960664830063f3ee22ce308a83f10a2e response_code=200
Symbolic Translation: 383/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1494 request_id=a389d4e02c5ae496ff0dbd1cf548500d response_code=200
Symbolic Translation: 384/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and never revisit it again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1495 request_id=073bda2009636506a322fe2a42ece411 response_code=200
Symbolic Translation: 385/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and never revisit it again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1496 request_id=51a0dc376a0627a218c442a63efcfc39 response_code=200
Symbolic Translation: 386/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1502 request_id=4dc0d91ead9bfd144d6ea362db5a79e7 response_code=200
Symbolic Translation: 387/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1490 request_id=adc21adf50e0670a622e6794f2d4dac8 response_code=200
Symbolic Translation: 388/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and then stop visiting it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1467 request_id=9fb38c76b7a9ce72a84f52f5b846165d response_code=200
Symbolic Translation: 389/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and then stop visiting it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1492 request_id=6b2641919b5b45b70845e50f9f44d378 response_code=200
Symbolic Translation: 390/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are required to visit a on exactly three separate instances\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1251 request_id=5b99e79dc1a112b86d4937ae7581910e response_code=200
Symbolic Translation: 391/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are required to visit a on exactly three separate instances\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1249 request_id=eb88ab3adb8867fab5a28e747255c34e response_code=200
Symbolic Translation: 392/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the required number of separate visits to a is exactly three\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1495 request_id=5e9393ebafaf5953b4cd233b4e81f35f response_code=200
Symbolic Translation: 393/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the required number of separate visits to a is exactly three\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1477 request_id=149b28a3d9b5dd6a6676b0e40b288ce4 response_code=200
Symbolic Translation: 394/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1474 request_id=6f0f545bfb083d23cdfb6255d43db0f6 response_code=200
Symbolic Translation: 395/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1494 request_id=abcadbf0f8c69c4b5026823cabd2db50 response_code=200
Symbolic Translation: 396/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: pass through a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1480 request_id=b29309eaaed278cad39d07ab3284b637 response_code=200
Symbolic Translation: 397/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: pass through a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1477 request_id=3dae7f9051b1ca3f46bdbac48bcc273a response_code=200
Symbolic Translation: 398/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a and then repeat this exactly two more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 431
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1718 request_id=5ff841d5d2fab2a9dcae3585d0f7c8e7 response_code=200
Symbolic Translation: 399/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a and then repeat this exactly two more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 431
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1737 request_id=c59b0431e3c41474c5152dd92d84369c response_code=200
Symbolic Translation: 400/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure that you have exactly three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1500 request_id=e00d0b44a3ea64d53617fc63434888a2 response_code=200
Symbolic Translation: 401/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure that you have exactly three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1489 request_id=bbff776e21e987c84e32d568ef2d622f response_code=200
Symbolic Translation: 402/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not exceed or fall short on three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 367
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=793 request_id=a748aca6953238cfbd6c9c2ef34bc50b response_code=200
Symbolic Translation: 403/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not exceed or fall short on three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 367
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=8787d03ef93108116db5334466dadf3e response_code=200
Symbolic Translation: 404/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b once you have visited a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=296 request_id=d94e55fca97a7dce7cf3a1c16ff9dc7e response_code=200
Symbolic Translation: 405/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b once you have visited a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=0fd4952d6924a20bff4f7a4759c9def1 response_code=200
Symbolic Translation: 406/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a once you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=257 request_id=69279160b3fffd2c65c14800443b6d06 response_code=200
Symbolic Translation: 407/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b once you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=303 request_id=151e343b4f5401e7d36ac1de8e4ad772 response_code=200
Symbolic Translation: 408/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you visit b you can not visit a afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=7d604d2399dd036aacb4d64c0b633718 response_code=200
Symbolic Translation: 409/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you visit a you can not visit b afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=303 request_id=1383cee43d179c3100d4c03dd513b142 response_code=200
Symbolic Translation: 410/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once b is visited you can not go to a any more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=268 request_id=809b8862b8caa5b92cee9443b1d5ce99 response_code=200
Symbolic Translation: 411/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once b is visited you can not go to a any more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=2eefeccad498047152bb9b0f2a7cfee5 response_code=200
Symbolic Translation: 412/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b before a is visited but you can never visit b afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=303 request_id=4d0b5ad7502ac73e0144312fc7937f04 response_code=200
Symbolic Translation: 413/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b before a is visited but you can never visit b afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=294 request_id=296b5a1160c9d9b94bde1641416e6017 response_code=200
Symbolic Translation: 414/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you go to a you have to avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=300 request_id=1e693e6b8cc9ee4f54724cdfb470674a response_code=200
Symbolic Translation: 415/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you go to b you have to avoid a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=291 request_id=44094568675cb8692ca7b021de813828 response_code=200
Symbolic Translation: 416/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a only after you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=294 request_id=0920dfcaeeceacc07e0b434f78e2e4fb response_code=200
Symbolic Translation: 417/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a only after you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=6bab9c2d6416bed83ef5b4aea6bd8352 response_code=200
Symbolic Translation: 418/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you have gone to b you must stay away from a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=76cb54e6d882937f614f05b54578f3e1 response_code=200
Symbolic Translation: 419/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you have gone to a you must stay away from b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=082fe4a585097fe7ee21066404a4e4ca response_code=200
Symbolic Translation: 420/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must stay away from b once you have gone to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=4467a0d1c2bbb50b476faa471ef35a95 response_code=200
Symbolic Translation: 421/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must stay away from b once you have gone to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=7ecbe7f23d69f5415aedd039d5770282 response_code=200
Symbolic Translation: 422/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not move to b after you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=976ad71a7692e94433c1c6a873ec4a71 response_code=200
Symbolic Translation: 423/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not move to b after you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=0aa1d3642fba9caf54770244f55a32ee response_code=200
Symbolic Translation: 424/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you reach b you can not move to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=f4649e08eaa7472927a2e868f119b185 response_code=200
Symbolic Translation: 425/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you reach a you can not move to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=11886442bebce535a1090fc485b706a7 response_code=200
Symbolic Translation: 426/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you go to a you have to avoid b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=281 request_id=b1efb1eb4277cfa00fdba728269b72b0 response_code=200
Symbolic Translation: 427/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you go to b you have to avoid a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=301 request_id=15f2c7be59f114868041aa9bd009867d response_code=200
Symbolic Translation: 428/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid b once you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=288 request_id=db13273045a70e42e6a287a517883139 response_code=200
Symbolic Translation: 429/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid b once you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=291 request_id=4723779748657491a2ccb9fdf707ee4f response_code=200
Symbolic Translation: 430/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit b after a is visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=301 request_id=bb2e0ac173d9c2a437012ea986d6d341 response_code=200
Symbolic Translation: 431/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a after b is visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=a7cc159eb99a454b965c43947d509528 response_code=200
Symbolic Translation: 432/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go to b but you must not go to a after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=283 request_id=7ca8bcbed2562dec64903dc8f2f4ac68 response_code=200
Symbolic Translation: 433/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go to a but you must not go to b after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=311 request_id=607a30770ba60a711e11cda51e0889fa response_code=200
Symbolic Translation: 434/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: any visit to b is not allowed after you visit a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=299 request_id=93d6e27cad27a19475c5c61d17e22dc9 response_code=200
Symbolic Translation: 435/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: any visit to b is not allowed after you visit a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=4d899bc61adbe81e4091c7b69a46b683 response_code=200
Symbolic Translation: 436/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once a is reached after that you can never visit b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=0bc805260e8c5e0db6e649423d1ea9a0 response_code=200
Symbolic Translation: 437/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once a is reached after that you can never visit b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=965dd9fe1b1e8a84ec15208aaf1db276 response_code=200
Symbolic Translation: 438/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a can never be visited once b occurs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=331f21eb364c0ab4dd676dedcaafe80f response_code=200
Symbolic Translation: 439/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b can never be visited once a occurs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=296 request_id=b54b8619f392af2cd2f5a5a532b97978 response_code=200
Symbolic Translation: 440/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you go to b you can never go to a after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=2ea6efca29ec3d2e46f543bde1dcb2a0 response_code=200
Symbolic Translation: 441/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you go to a you can never go to b after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=ee31af578d8af4392a9105df36d1a483 response_code=200
Symbolic Translation: 442/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if a happens that prevents b from happening afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=291 request_id=945a01cb377717c9e7b81619558020b7 response_code=200
Symbolic Translation: 443/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if b happens that prevents a from happening afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=8395f945af42c518eae6664cc76ff68d response_code=200
Symbolic Translation: 444/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you visit a you are not allowed to reach b afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=0e74e620dba7414d50362c8ec83c9a03 response_code=200
Symbolic Translation: 445/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you visit a you are not allowed to reach b afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=299 request_id=3514c4328d8f3ffb0675d4134d140011 response_code=200
Symbolic Translation: 446/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: whenever you observe b this locks a from becoming true from the next instance\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=8ae66fa8304f9802de3f8da34bf3a97d response_code=200
Symbolic Translation: 447/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: whenever you observe b this locks a from becoming true from the next instance\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=296 request_id=1e2eb9a8f75679e88d052233e78d232e response_code=200
Symbolic Translation: 448/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing a locks b from being true for all time instances starting from the next one\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=798ce4fcf16dc37f972add6f161dcbac response_code=200
Symbolic Translation: 449/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing b locks a from being true for all time instances starting from the next one\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=cb1b27eacc74ecc641c8f0451f4a83c9 response_code=200
Symbolic Translation: 450/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you get to a you must avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=de885839b7e23d325991b08960854be7 response_code=200
Symbolic Translation: 451/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you get to a you must avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=5df9eb7b077b3c21e5248e2d8d7f6688 response_code=200
Syntax error OR formula too long:
& F ikes_place & F red_pelican_music & F novel_cafe_westwood & F natures_way_café F ucla_extension_lindbrook_center
& F red_pelican_music & F ikes_place & F novel_cafe_westwood & F natures_way_café F ucla_extension_lindbrook_center
shorten LTLs:
& F a & F b & F c & F d F h
& F b & F a & F c & F d F h

Syntax error OR formula too long:
& F yogurtland & F victorias_secret & F 800_degrees & F starbucks F ikes_place
& F yogurtland & F victorias_secret & F ikes_place & F starbucks F 800_degrees
shorten LTLs:
& F a & F b & F c & F d F h
& F a & F b & F h & F d F c

Syntax error OR formula too long:
& F novel_cafe_westwood & F westwoods_village_square & F natures_way_café & F the_gayley_building F iso_fusion_café
& F novel_cafe_westwood & F westwood_village & F natures_way_café & F the_gayley_building F iso_fusion_café
Syntax error OR formula too long:
& F kinross_building_south & F iso_fusion_café & F parking_36 & F 800_degrees F u_mini
& F parking_36 & F kinross_building_south & F 800_degrees & F u_mini F iso_fusion_café
shorten LTLs:
& F a & F b & F c & F d F h
& F c & F a & F d & F h F b

Syntax error OR formula too long:
& F utla_beauty & F bibigo & F mongol_bbq & F tct_foods F peets_coffee_&_tea
& F mongol_bbq & F utla_beauty & F tct_foods & F peets_coffee_&_tea F bibigo
shorten LTLs:
& F a & F b & F c & F d F h
& F c & F a & F d & F h F b

Syntax error OR formula too long:
& F parking_32 & F u_mini & F ikes_place & F the_gayley_building F natures_way_café
& F the_gayley_building & F parking_32 & F ikes_place & F natures_way_café F u_mini
shorten LTLs:
& F a & F b & F c & F d F h
& F d & F a & F c & F h F b

Syntax error OR formula too long:
& F gayley_&_lindbrook_apartments & F 800_degrees & F victorias_secret & F subway F ucla_extension_lindbrook_center
& F subway & F ucla_extension_lindbrook_center & F gayley_&_lindbrook_apartments & F 800_degrees F victorias_secret
shorten LTLs:
& F a & F b & F c & F d F h
& F d & F h & F a & F b F c

Syntax error OR formula too long:
& F u_mini & F ucla_extension_westwood_village_center & F natures_way_café & F 800_degrees F red_pelican_music
& F 800_degrees & F red_pelican_music & F ucla_extension_westwood_village_center & F u_mini F natures_way_café
shorten LTLs:
& F a & F b & F c & F d F h
& F d & F h & F b & F a F c

Syntax error OR formula too long:
& & U ! bibigo urban_outfitters & U ! peets_coffee_&_tea bibigo & U ! westwood_sporting_goods peets_coffee_&_tea F westwood_sporting_goods & U ! urban_outfitters U urban_outfitters U ! urban_outfitters bibigo & U ! bibigo U bibigo U ! bibigo peets_coffee_&_tea U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea westwood_sporting_goods
& & U ! bibigo urban_outfitters & U ! peets_coffee_&_tea bibigo & U ! westwood_sporting_goods peets_coffee_&_tea F westwood_sporting_goods & U ! urban_outfitters U urban_outfitters U ! urban_outfitters bibigo & U ! bibigo U bibigo U ! bibigo peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea westwood_sporting_goods
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! subway stone_canyon_creek_underground & U ! ikes_place subway & U ! janss_dome ikes_place F janss_dome & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground subway & U ! subway U subway U ! subway ikes_place U ! ikes_place U ikes_place U ! ikes_place janss_dome
& & U ! subway stone_canyon_creek_underground & U ! ikes_place subway & U ! janss_dome ikes_place F janss_dome & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground subway & U ! subway U subway U ! subway ikes_place & U ! ikes_place U ikes_place U ! ikes_place janss_dome
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! subway dennys & U ! occidental_petroleum_heliport subway & U ! veggie_grill occidental_petroleum_heliport F veggie_grill & U ! dennys U dennys U ! dennys subway & U ! subway U subway U ! subway occidental_petroleum_heliport U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport veggie_grill
& & U ! subway dennys & U ! occidental_petroleum_heliport subway & U ! veggie_grill occidental_petroleum_heliport F veggie_grill & U ! dennys U dennys U ! dennys subway & U ! subway U subway U ! subway occidental_petroleum_heliport & U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport veggie_grill
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! janss_dome gayley_&_lindbrook_apartments & U ! plaza_la_reina janss_dome & U ! noahs_bagels plaza_la_reina F noahs_bagels & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments janss_dome & U ! janss_dome U janss_dome U ! janss_dome plaza_la_reina U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina noahs_bagels
& & U ! janss_dome gayley_&_lindbrook_apartments & U ! plaza_la_reina janss_dome & U ! noahs_bagels plaza_la_reina F noahs_bagels & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments janss_dome & U ! janss_dome U janss_dome U ! janss_dome plaza_la_reina & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina noahs_bagels
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! westwood_wilshire westwoods_village_square & U ! mongol_bbq westwood_wilshire & U ! mio_babbos mongol_bbq F mio_babbos & U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square westwood_wilshire & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire mongol_bbq U ! mongol_bbq U mongol_bbq U ! mongol_bbq mio_babbos
& & U ! westwood_village westwood_village & U ! mongol_bbq westwood_village & U ! mio_babbos mongol_bbq F mio_babbos & U ! westwood_village U westwood_village U ! westwood_village westwood_village & U ! mongol_bbq U mongol_bbq U ! mongol_bbq westwood_village & U ! mio_babbos U mio_babbos U ! mio_babbos mongol_bbq
Syntax error OR formula too long:
& & U ! gayley_&_lindbrook_apartments westwood_wilshire & U ! urban_outfitters gayley_&_lindbrook_apartments & U ! westwoods_village_square urban_outfitters F westwoods_village_square & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments urban_outfitters U ! urban_outfitters U urban_outfitters U ! urban_outfitters westwoods_village_square
& & U ! gayley_&_lindbrook_apartments westwood_village & U ! urban_outfitters gayley_&_lindbrook_apartments & U ! westwood_village urban_outfitters F westwood_village & U ! westwood_village U westwood_village U ! westwood_village gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments urban_outfitters & U ! urban_outfitters U urban_outfitters U ! urban_outfitters westwood_village
Syntax error OR formula too long:
& & U ! starbucks the_gayley_building & U ! utla_beauty starbucks & U ! peets_coffee_&_tea utla_beauty F peets_coffee_&_tea & U ! the_gayley_building U the_gayley_building U ! the_gayley_building starbucks & U ! starbucks U starbucks U ! starbucks utla_beauty U ! utla_beauty U utla_beauty U ! utla_beauty peets_coffee_&_tea
& & U ! starbucks the_gayley_building & U ! utla_beauty starbucks & U ! peets_coffee_&_tea utla_beauty F peets_coffee_&_tea & U ! the_gayley_building U the_gayley_building U ! the_gayley_building starbucks & U ! starbucks U starbucks U ! starbucks utla_beauty & U ! utla_beauty U utla_beauty U ! utla_beauty peets_coffee_&_tea
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! native_foods utla_beauty & U ! ucla_extension_westwood_village_center native_foods & U ! gayley_center ucla_extension_westwood_village_center F gayley_center & U ! utla_beauty U utla_beauty U ! utla_beauty native_foods & U ! native_foods U native_foods U ! native_foods ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center U ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center gayley_center
& & U ! native_foods utla_beauty & U ! ucla_extension_westwood_village_center native_foods & U ! gayley_center ucla_extension_westwood_village_center F gayley_center & U ! utla_beauty U utla_beauty U ! utla_beauty native_foods & U ! native_foods U native_foods U ! native_foods ucla_extension_westwood_village_center & U ! ucla_extension_westwood_village_center U ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center gayley_center
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! parking_36 ucla_extension_lindbrook_center & U ! westwood_sporting_goods parking_36 & U ! utla_beauty westwood_sporting_goods F utla_beauty & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center U ! ucla_extension_lindbrook_center parking_36 & U ! parking_36 U parking_36 U ! parking_36 westwood_sporting_goods U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods utla_beauty
& & U ! parking_36 ucla_extension_lindbrook_center & U ! westwood_sporting_goods parking_36 & U ! utla_beauty westwood_sporting_goods F utla_beauty & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center U ! ucla_extension_lindbrook_center parking_36 & U ! parking_36 U parking_36 U ! parking_36 westwood_sporting_goods & U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods utla_beauty
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! mio_babbos yogurtland & U ! westwood_wilshire mio_babbos & U ! stone_canyon_creek_underground westwood_wilshire F stone_canyon_creek_underground & U ! yogurtland U yogurtland U ! yogurtland mio_babbos & U ! mio_babbos U mio_babbos U ! mio_babbos westwood_wilshire U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire stone_canyon_creek_underground
& & U ! mio_babbos yogurtland & U ! westwood_village mio_babbos & U ! stone_canyon_creek_underground westwood_village F stone_canyon_creek_underground & U ! yogurtland U yogurtland U ! yogurtland mio_babbos & U ! mio_babbos U mio_babbos U ! mio_babbos westwood_village & U ! westwood_village U westwood_village U ! westwood_village stone_canyon_creek_underground
Syntax error OR formula too long:
& & U ! native_foods tct_foods & U ! natures_way_café native_foods & U ! parking_32 natures_way_café F parking_32 & U ! tct_foods U tct_foods U ! tct_foods native_foods & U ! native_foods U native_foods U ! native_foods natures_way_café U ! natures_way_café U natures_way_café U ! natures_way_café parking_32
& & U ! native_foods tct_foods & U ! natures_way_café native_foods & U ! parking_32 natures_way_café F parking_32 & U ! tct_foods U tct_foods U ! tct_foods native_foods & U ! native_foods U native_foods U ! native_foods natures_way_café & U ! natures_way_café U natures_way_café U ! natures_way_café parking_32
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! the_gayley_building starbucks & U ! bibigo the_gayley_building & U ! dennys bibigo F dennys & U ! starbucks U starbucks U ! starbucks the_gayley_building & U ! the_gayley_building U the_gayley_building U ! the_gayley_building bibigo U ! bibigo U bibigo U ! bibigo dennys
& & U ! the_gayley_building starbucks & U ! bibigo the_gayley_building & U ! dennys bibigo F dennys & U ! starbucks U starbucks U ! starbucks the_gayley_building & U ! the_gayley_building U the_gayley_building U ! the_gayley_building bibigo & U ! bibigo U bibigo U ! bibigo dennys
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! london_cleaners plaza_la_reina & U ! tct_foods london_cleaners & U ! u_mini tct_foods F u_mini & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners tct_foods U ! tct_foods U tct_foods U ! tct_foods u_mini
& & U ! london_cleaners plaza_la_reina & U ! tct_foods london_cleaners & U ! u_mini tct_foods F u_mini & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners tct_foods & U ! tct_foods U tct_foods U ! tct_foods u_mini
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! london_cleaners u_mini & U ! bibigo london_cleaners & U ! ikes_place bibigo F ikes_place & U ! u_mini U u_mini U ! u_mini london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners bibigo U ! bibigo U bibigo U ! bibigo ikes_place
& & U ! london_cleaners u_mini & U ! bibigo london_cleaners & U ! ikes_place bibigo F ikes_place & U ! u_mini U u_mini U ! u_mini london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners bibigo & U ! bibigo U bibigo U ! bibigo ikes_place
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! kinross_building_south tct_foods & U ! poke_bar kinross_building_south & U ! u_mini poke_bar F u_mini & U ! tct_foods U tct_foods U ! tct_foods kinross_building_south & U ! kinross_building_south U kinross_building_south U ! kinross_building_south poke_bar U ! poke_bar U poke_bar U ! poke_bar u_mini
& & U ! kinross_building_south tct_foods & U ! poke_bar kinross_building_south & U ! u_mini poke_bar F u_mini & U ! tct_foods U tct_foods U ! tct_foods kinross_building_south & U ! kinross_building_south U kinross_building_south U ! kinross_building_south poke_bar & U ! poke_bar U poke_bar U ! poke_bar u_mini
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! westwoods_village_square utla_beauty & U ! tct_foods westwoods_village_square & U ! iso_fusion_café tct_foods F iso_fusion_café & U ! utla_beauty U utla_beauty U ! utla_beauty westwoods_village_square & U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square tct_foods U ! tct_foods U tct_foods U ! tct_foods iso_fusion_café
& & U ! westwood_village utla_beauty & U ! tct_foods westwood_village & U ! iso_fusion_café tct_foods F iso_fusion_café & U ! utla_beauty U utla_beauty U ! utla_beauty westwood_village & U ! westwood_village U westwood_village U ! westwood_village tct_foods & U ! tct_foods U tct_foods U ! tct_foods iso_fusion_café
Syntax error OR formula too long:
& & U ! the_gayley_building parking_32 & U ! noahs_bagels the_gayley_building & U ! subway noahs_bagels F subway & U ! parking_32 U parking_32 U ! parking_32 the_gayley_building & U ! the_gayley_building U the_gayley_building U ! the_gayley_building noahs_bagels U ! noahs_bagels U noahs_bagels U ! noahs_bagels subway
& & U ! the_gayley_building parking_32 & U ! noahs_bagels the_gayley_building & U ! subway noahs_bagels F subway & U ! parking_32 U parking_32 U ! parking_32 the_gayley_building & U ! the_gayley_building U the_gayley_building U ! the_gayley_building noahs_bagels & U ! noahs_bagels U noahs_bagels U ! noahs_bagels subway
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! ikes_place stone_canyon_creek_underground & U ! westwoods_village_square ikes_place & U ! poke_bar westwoods_village_square F poke_bar & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground ikes_place & U ! ikes_place U ikes_place U ! ikes_place westwoods_village_square U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square poke_bar
& & U ! ikes_place stone_canyon_creek_underground & U ! westwood_village ikes_place & U ! poke_bar westwood_village F poke_bar & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground ikes_place & U ! ikes_place U ikes_place U ! ikes_place westwood_village & U ! westwood_village U westwood_village U ! westwood_village poke_bar
Syntax error OR formula too long:
& & U ! mio_babbos poke_bar & U ! noahs_bagels mio_babbos & U ! westwood_wilshire noahs_bagels F westwood_wilshire & U ! poke_bar U poke_bar U ! poke_bar mio_babbos & U ! mio_babbos U mio_babbos U ! mio_babbos noahs_bagels U ! noahs_bagels U noahs_bagels U ! noahs_bagels westwood_wilshire
& & U ! mio_babbos poke_bar & U ! noahs_bagels mio_babbos & U ! westwood_village noahs_bagels F westwood_village & U ! poke_bar U poke_bar U ! poke_bar mio_babbos & U ! mio_babbos U mio_babbos U ! mio_babbos noahs_bagels & U ! noahs_bagels U noahs_bagels U ! noahs_bagels westwood_village
Syntax error OR formula too long:
& & U ! mongol_bbq stone_canyon_creek_underground & U ! novel_cafe_westwood mongol_bbq & U ! kinross_building_south novel_cafe_westwood F kinross_building_south & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground mongol_bbq & U ! mongol_bbq U mongol_bbq U ! mongol_bbq novel_cafe_westwood U ! novel_cafe_westwood U novel_cafe_westwood U ! novel_cafe_westwood kinross_building_south
& & U ! mongol_bbq stone_canyon_creek_underground & U ! novel_cafe_westwood mongol_bbq & U ! kinross_building_south novel_cafe_westwood F kinross_building_south & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground mongol_bbq & U ! mongol_bbq U mongol_bbq U ! mongol_bbq novel_cafe_westwood & U ! novel_cafe_westwood U novel_cafe_westwood U ! novel_cafe_westwood kinross_building_south
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! gayley_&_lindbrook_apartments parking_36 & U ! victorias_secret gayley_&_lindbrook_apartments & U ! the_gayley_building victorias_secret F the_gayley_building & U ! parking_36 U parking_36 U ! parking_36 gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments victorias_secret U ! victorias_secret U victorias_secret U ! victorias_secret the_gayley_building
& & U ! gayley_&_lindbrook_apartments parking_36 & U ! victorias_secret gayley_&_lindbrook_apartments & U ! the_gayley_building victorias_secret F the_gayley_building & U ! parking_36 U parking_36 U ! parking_36 gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments victorias_secret & U ! victorias_secret U victorias_secret U ! victorias_secret the_gayley_building
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! dennys westwood_wilshire & U ! noahs_bagels dennys & U ! parking_36 noahs_bagels F parking_36 & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire dennys & U ! dennys U dennys U ! dennys noahs_bagels U ! noahs_bagels U noahs_bagels U ! noahs_bagels parking_36
& & U ! dennys westwood_village & U ! noahs_bagels dennys & U ! parking_36 noahs_bagels F parking_36 & U ! westwood_village U westwood_village U ! westwood_village dennys & U ! dennys U dennys U ! dennys noahs_bagels & U ! noahs_bagels U noahs_bagels U ! noahs_bagels parking_36
Syntax error OR formula too long:
& & U ! occidental_petroleum_heliport natures_way_café & U ! peets_coffee_&_tea occidental_petroleum_heliport & U ! kinross_building_south peets_coffee_&_tea F kinross_building_south & U ! natures_way_café U natures_way_café U ! natures_way_café occidental_petroleum_heliport & U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport peets_coffee_&_tea U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea kinross_building_south
& & U ! occidental_petroleum_heliport natures_way_café & U ! peets_coffee_&_tea occidental_petroleum_heliport & U ! kinross_building_south peets_coffee_&_tea F kinross_building_south & U ! natures_way_café U natures_way_café U ! natures_way_café occidental_petroleum_heliport & U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea kinross_building_south
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! novel_cafe_westwood poke_bar & U ! starbucks novel_cafe_westwood & U ! plaza_la_reina starbucks F plaza_la_reina & U ! poke_bar U poke_bar U ! poke_bar novel_cafe_westwood & U ! novel_cafe_westwood U novel_cafe_westwood U ! novel_cafe_westwood starbucks U ! starbucks U starbucks U ! starbucks plaza_la_reina
& & U ! novel_cafe_westwood poke_bar & U ! starbucks novel_cafe_westwood & U ! plaza_la_reina starbucks F plaza_la_reina & U ! poke_bar U poke_bar U ! poke_bar novel_cafe_westwood & U ! novel_cafe_westwood U novel_cafe_westwood U ! novel_cafe_westwood starbucks & U ! starbucks U starbucks U ! starbucks plaza_la_reina
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! peets_coffee_&_tea utla_beauty & U ! victorias_secret peets_coffee_&_tea & U ! london_cleaners victorias_secret F london_cleaners & U ! utla_beauty U utla_beauty U ! utla_beauty peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea victorias_secret U ! victorias_secret U victorias_secret U ! victorias_secret london_cleaners
& & U ! peets_coffee_&_tea utla_beauty & U ! victorias_secret peets_coffee_&_tea & U ! london_cleaners victorias_secret F london_cleaners & U ! utla_beauty U utla_beauty U ! utla_beauty peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea victorias_secret & U ! victorias_secret U victorias_secret U ! victorias_secret london_cleaners
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! village_center_newsstand iso_fusion_café & U ! london_cleaners village_center_newsstand & U ! plaza_la_reina london_cleaners F plaza_la_reina & U ! iso_fusion_café U iso_fusion_café U ! iso_fusion_café village_center_newsstand & U ! village_center_newsstand U village_center_newsstand U ! village_center_newsstand london_cleaners U ! london_cleaners U london_cleaners U ! london_cleaners plaza_la_reina
& & U ! village_center_newsstand iso_fusion_café & U ! london_cleaners village_center_newsstand & U ! plaza_la_reina london_cleaners F plaza_la_reina & U ! iso_fusion_café U iso_fusion_café U ! iso_fusion_café village_center_newsstand & U ! village_center_newsstand U village_center_newsstand U ! village_center_newsstand london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners plaza_la_reina
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! subway plaza_la_reina & U ! westwoods_village_square subway & U ! gayley_center westwoods_village_square F gayley_center & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina subway & U ! subway U subway U ! subway westwoods_village_square U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square gayley_center
& & U ! subway plaza_la_reina & U ! westwood_village subway & U ! gayley_center westwood_village F gayley_center & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina subway & U ! subway U subway U ! subway westwood_village & U ! westwood_village U westwood_village U ! westwood_village gayley_center
Syntax error OR formula too long:
& & U ! iso_fusion_café utla_beauty & U ! westwood_sporting_goods iso_fusion_café & U ! victorias_secret westwood_sporting_goods F victorias_secret & U ! utla_beauty U utla_beauty U ! utla_beauty iso_fusion_café & U ! iso_fusion_café U iso_fusion_café U ! iso_fusion_café westwood_sporting_goods U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods victorias_secret
& & U ! iso_fusion_café utla_beauty & U ! westwood_sporting_goods iso_fusion_café & U ! victorias_secret westwood_sporting_goods F victorias_secret & U ! utla_beauty U utla_beauty U ! utla_beauty iso_fusion_café & U ! iso_fusion_café U iso_fusion_café U ! iso_fusion_café westwood_sporting_goods & U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods victorias_secret
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! janss_dome subway & U ! mongol_bbq janss_dome & U ! ucla_extension_westwood_village_center mongol_bbq F ucla_extension_westwood_village_center & U ! subway U subway U ! subway janss_dome & U ! janss_dome U janss_dome U ! janss_dome mongol_bbq U ! mongol_bbq U mongol_bbq U ! mongol_bbq ucla_extension_westwood_village_center
& & U ! janss_dome subway & U ! mongol_bbq janss_dome & U ! ucla_extension_westwood_village_center mongol_bbq F ucla_extension_westwood_village_center & U ! subway U subway U ! subway janss_dome & U ! janss_dome U janss_dome U ! janss_dome mongol_bbq & U ! mongol_bbq U mongol_bbq U ! mongol_bbq ucla_extension_westwood_village_center
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! poke_bar westwood_wilshire & U ! janss_dome poke_bar & U ! yogurtland janss_dome F yogurtland & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire poke_bar & U ! poke_bar U poke_bar U ! poke_bar janss_dome U ! janss_dome U janss_dome U ! janss_dome yogurtland
& & U ! poke_bar westwood_village & U ! janss_dome poke_bar & U ! yogurtland janss_dome F yogurtland & U ! westwood_village U westwood_village U ! westwood_village poke_bar & U ! poke_bar U poke_bar U ! poke_bar janss_dome & U ! janss_dome U janss_dome U ! janss_dome yogurtland
Syntax error OR formula too long:
& & U ! stone_canyon_creek_underground mio_babbos & U ! peets_coffee_&_tea stone_canyon_creek_underground & U ! ucla_extension_lindbrook_center peets_coffee_&_tea F ucla_extension_lindbrook_center & U ! mio_babbos U mio_babbos U ! mio_babbos stone_canyon_creek_underground & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground peets_coffee_&_tea U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea ucla_extension_lindbrook_center
& & U ! stone_canyon_creek_underground mio_babbos & U ! peets_coffee_&_tea stone_canyon_creek_underground & U ! ucla_extension_lindbrook_center peets_coffee_&_tea F ucla_extension_lindbrook_center & U ! mio_babbos U mio_babbos U ! mio_babbos stone_canyon_creek_underground & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea ucla_extension_lindbrook_center
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! ikes_place westwoods_village_square & U ! poke_bar ikes_place & U ! occidental_petroleum_heliport poke_bar F occidental_petroleum_heliport & U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square ikes_place & U ! ikes_place U ikes_place U ! ikes_place poke_bar U ! poke_bar U poke_bar U ! poke_bar occidental_petroleum_heliport
& & U ! ikes_place westwood_village & U ! poke_bar ikes_place & U ! occidental_petroleum_heliport poke_bar F occidental_petroleum_heliport & U ! westwood_village U westwood_village U ! westwood_village ikes_place & U ! ikes_place U ikes_place U ! ikes_place poke_bar & U ! poke_bar U poke_bar U ! poke_bar occidental_petroleum_heliport
Syntax error OR formula too long:
& & U ! westwoods_village_square plaza_la_reina & U ! noahs_bagels westwoods_village_square & U ! 800_degrees noahs_bagels F 800_degrees & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina westwoods_village_square & U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square noahs_bagels U ! noahs_bagels U noahs_bagels U ! noahs_bagels 800_degrees
& & U ! westwood_village plaza_la_reina & U ! noahs_bagels westwood_village & U ! 800_degrees noahs_bagels F 800_degrees & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina westwood_village & U ! westwood_village U westwood_village U ! westwood_village noahs_bagels & U ! noahs_bagels U noahs_bagels U ! noahs_bagels 800_degrees
Syntax error OR formula too long:
& G F westwood_wilshire & G F starbucks & G F 800_degrees G F westwood_sporting_goods
& G F westwood_village & G F starbucks & G F 800_degrees G F westwood_sporting_goods
Syntax error OR formula too long:
& G F natures_way_café & G F occidental_petroleum_heliport & G F bibigo G F ucla_extension_lindbrook_center
& G F ucla_extension_lindbrook_center & G F bibigo & G F occidental_petroleum_heliport G F natures_way_café
shorten LTLs:
& G F a & G F b & G F c G F d
& G F d & G F c & G F b G F a

Syntax error OR formula too long:
& G F red_pelican_music & G F natures_way_café & G F westwood_sporting_goods G F plaza_la_reina
& G F plaza_la_reina & G F westwood_sporting_goods & G F natures_way_café & G F red_pelican_music G F h
shorten LTLs:
& G F a & G F b & G F c G F d
& G F d & G F c & G F b & G F a G F h

Syntax error OR formula too long:
& G F occidental_petroleum_heliport & G F utla_beauty & G F 800_degrees G F veggie_grill
& & U ! occidental_petroleum_heliport 800_degrees & U ! veggie_grill occidental_petroleum_heliport & U ! utla_beauty veggie_grill & U ! h utla_beauty F h & U ! 800_degrees U 800_degrees U ! 800_degrees occidental_petroleum_heliport & U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport veggie_grill & U ! veggie_grill U veggie_grill U ! veggie_grill utla_beauty U ! utla_beauty U utla_beauty U ! utla_beauty h
shorten LTLs:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d & U ! h b F h & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b U ! b U b U ! b h

Syntax error OR formula too long:
& G F veggie_grill & G F dennys & G F parking_36 G F peets_coffee_&_tea
& & U ! veggie_grill parking_36 & U ! peets_coffee_&_tea veggie_grill & U ! dennys peets_coffee_&_tea & U ! h dennys F h & U ! parking_36 U parking_36 U ! parking_36 veggie_grill & U ! veggie_grill U veggie_grill U ! veggie_grill peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea dennys U ! dennys U dennys U ! dennys h
shorten LTLs:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d & U ! h b F h & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b U ! b U b U ! b h

Syntax error OR formula too long:
& G F victorias_secret & G F iso_fusion_café & G F subway G F bibigo
& G F iso_fusion_café & G F victorias_secret G F subway
Syntax error OR formula too long:
& G F red_pelican_music & G F utla_beauty & G F natures_way_café G F parking_32
& G F utla_beauty & G F red_pelican_music G F natures_way_café
Syntax error OR formula too long:
& G F urban_outfitters & G F kinross_building_south & G F parking_36 G F natures_way_café
& G F urban_outfitters & G F kinross_building_south G F parking_36
Syntax error OR formula too long:
& G F iso_fusion_café & G F red_pelican_music & G F utla_beauty G F kinross_building_south
& G F red_pelican_music & G F iso_fusion_café & G F utla_beauty G F kinross_building_south
shorten LTLs:
& G F a & G F b & G F c G F d
& G F b & G F a & G F c G F d

Syntax error OR formula too long:
& G F yogurtland & G F iso_fusion_café & G F 800_degrees G F westwood_wilshire
& G F yogurtland & G F iso_fusion_café & G F 800_degrees G F westwood_village
Syntax error OR formula too long:
& G F natures_way_café & G F poke_bar & G F urban_outfitters G F westwood_wilshire
& G F natures_way_café & G F poke_bar & G F urban_outfitters G F westwood_village
Syntax error OR formula too long:
& G F natures_way_café & G F the_gayley_building & G F westwood_wilshire G F stone_canyon_creek_underground
& G F natures_way_café & G F the_gayley_building & G F westwood_village G F stone_canyon_creek_underground
Syntax error OR formula too long:
& G ! westwood_wilshire & G ! iso_fusion_café G ! occidental_petroleum_heliport
& G ! westwood_village & G ! iso_fusion_café G ! occidental_petroleum_heliport
Syntax error OR formula too long:
& G ! iso_fusion_café & G ! westwood_sporting_goods G ! 800_degrees
& G ! westwood_sporting_goods & G ! 800_degrees G ! iso_fusion_café
shorten LTLs:
& G ! a & G ! b G ! c
& G ! b & G ! c G ! a

Syntax error OR formula too long:
& G ! natures_way_café & G ! starbucks G ! u_mini
& G ! starbucks & G ! u_mini G ! natures_way_café
shorten LTLs:
& G ! a & G ! b G ! c
& G ! b & G ! c G ! a

Syntax error OR formula too long:
& G ! iso_fusion_café & G ! victorias_secret G ! mio_babbos
& G ! victorias_secret & G ! iso_fusion_café G ! mio_babbos
shorten LTLs:
& G ! a & G ! b G ! c
& G ! b & G ! a G ! c

Syntax error OR formula too long:
& G ! natures_way_café & G ! peets_coffee_&_tea G ! u_mini
& G ! peets_coffee_&_tea & G ! natures_way_café G ! u_mini
shorten LTLs:
& G ! a & G ! b G ! c
& G ! b & G ! a G ! c

Syntax error OR formula too long:
& G ! the_gayley_building & G ! yogurtland G ! natures_way_café
& G F the_gayley_building & G F yogurtland G F natures_way_café
shorten LTLs:
& G ! a & G ! b G ! c
& G F a & G F b G F c

Syntax error OR formula too long:
& G ! 800_degrees & G ! gayley_center & G ! westwood_wilshire G ! gayley_&_lindbrook_apartments
& G ! gayley_center & G ! westwood_village & G ! 800_degrees G ! gayley_&_lindbrook_apartments
Syntax error OR formula too long:
& G ! ucla_extension_lindbrook_center & G ! westwood_sporting_goods & G ! natures_way_café G ! westwood_wilshire
& G ! ucla_extension_lindbrook_center & G ! westwood_sporting_goods & G ! natures_way_café G ! westwood_village
Syntax error OR formula too long:
& G ! iso_fusion_café & G ! poke_bar & G ! bibigo & G ! yogurtland G ! peets_coffee_&_tea
& G ! poke_bar & G ! bibigo & G ! yogurtland G ! iso_fusion_café
shorten LTLs:
& G ! a & G ! b & G ! c & G ! d G ! h
& G ! b & G ! c & G ! d G ! a

Syntax error OR formula too long:
& G ! the_gayley_building & G ! london_cleaners & G ! 800_degrees & G ! westwood_wilshire G ! parking_36
& G ! london_cleaners & G ! 800_degrees & G ! westwood_village G ! parking_36
Syntax error OR formula too long:
& G ! gayley_&_lindbrook_apartments & G ! westwoods_village_square & G ! dennys & G ! urban_outfitters G ! natures_way_café
& G ! gayley_&_lindbrook_apartments & G ! westwood_village & G ! dennys & G ! urban_outfitters G ! natures_way_café
Syntax error OR formula too long:
& G ! veggie_grill & G ! occidental_petroleum_heliport & G ! ikes_place & G ! natures_way_café G ! parking_32
& G ! occidental_petroleum_heliport & G ! ikes_place & G ! natures_way_café G ! parking_32
shorten LTLs:
& G ! a & G ! b & G ! c & G ! d G ! h
& G ! b & G ! c & G ! d G ! h

Syntax error OR formula too long:
& G ! dennys & G ! westwoods_village_square & G ! yogurtland & G ! iso_fusion_café G ! gayley_center
& G ! dennys & G ! westwood_village & G ! yogurtland & G ! iso_fusion_café G ! gayley_center
Syntax error OR formula too long:
& G ! u_mini & G ! natures_way_café & G ! westwoods_village_square & G ! ucla_extension_westwood_village_center G ! janss_dome
& G ! u_mini & G ! natures_way_café & G ! westwood_village & G ! ucla_extension_westwood_village_center G ! janss_dome
Syntax error OR formula too long:
& G ! westwood_wilshire & G ! subway & G ! the_gayley_building & G ! gayley_&_lindbrook_apartments G ! 800_degrees
& G ! westwood_village & G ! subway & G ! the_gayley_building & G ! gayley_&_lindbrook_apartments G ! 800_degrees
Syntax error OR formula too long:
U ! gayley_&_lindbrook_apartments westwood_sporting_goods
& U ! gayley_&_lindbrook_apartments westwood_sporting_goods F gayley_&_lindbrook_apartments
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! iso_fusion_café occidental_petroleum_heliport
U iso_fusion_café occidental_petroleum_heliport
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
U ! yogurtland 800_degrees
& U ! yogurtland 800_degrees F yogurtland
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! 800_degrees westwoods_village_square
U westwood_village 800_degrees
Syntax error OR formula too long:
U ! gayley_&_lindbrook_apartments janss_dome
& U ! gayley_&_lindbrook_apartments janss_dome F gayley_&_lindbrook_apartments
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! kinross_building_south iso_fusion_café
U iso_fusion_café kinross_building_south
shorten LTLs:
U ! a b
U b a

Syntax error OR formula too long:
U ! peets_coffee_&_tea stone_canyon_creek_underground
G i stone_canyon_creek_underground X peets_coffee_&_tea
shorten LTLs:
U ! a b
G i b X a

Syntax error OR formula too long:
U ! stone_canyon_creek_underground peets_coffee_&_tea
& U ! stone_canyon_creek_underground peets_coffee_&_tea F stone_canyon_creek_underground
shorten LTLs:
U ! a b
& U ! a b F a

Syntax error OR formula too long:
U ! natures_way_café bibigo
U natures_way_café bibigo
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
U ! 800_degrees village_center_newsstand
U 800_degrees village_center_newsstand
shorten LTLs:
U ! a b
U a b

Syntax error OR formula too long:
M & ucla_extension_lindbrook_center F & ! ucla_extension_lindbrook_center F & ucla_extension_lindbrook_center F & ! ucla_extension_lindbrook_center F ucla_extension_lindbrook_center | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G ! ucla_extension_lindbrook_center
& & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center F ucla_extension_lindbrook_center
shorten LTLs:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error OR formula too long:
M & westwood_sporting_goods F & ! westwood_sporting_goods F & westwood_sporting_goods F & ! westwood_sporting_goods F westwood_sporting_goods | ! westwood_sporting_goods G | westwood_sporting_goods G | ! westwood_sporting_goods G | westwood_sporting_goods G | ! westwood_sporting_goods G | westwood_sporting_goods G ! westwood_sporting_goods
& & U ! westwood_sporting_goods U westwood_sporting_goods & U ! westwood_sporting_goods U westwood_sporting_goods & U ! westwood_sporting_goods U westwood_sporting_goods F westwood_sporting_goods
shorten LTLs:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error OR formula too long:
G i dennys X G ! poke_bar
! F & dennys U poke_bar
shorten LTLs:
G i a X G ! b
! F & a U b

Syntax error:
G i a X G ! b
! F & a U b

Syntax error OR formula too long:
G i native_foods X G ! peets_coffee_&_tea
! F & native_foods U peets_coffee_&_tea
shorten LTLs:
G i a X G ! b
! F & a U b

Syntax error:
G i a X G ! b
! F & a U b

Syntax error OR formula too long:
G i bibigo X G ! iso_fusion_café
G e bibigo X iso_fusion_café
shorten LTLs:
G i a X G ! b
G e a X b

Syntax error OR formula too long:
G i natures_way_café X G ! yogurtland
G e natures_way_café X yogurtland
shorten LTLs:
G i a X G ! b
G e a X b

Syntax error OR formula too long:
G i ucla_extension_lindbrook_center X G ! occidental_petroleum_heliport
& U ! occidental_petroleum_heliport G occidental_petroleum_heliport
Syntax error OR formula too long:
G i stone_canyon_creek_underground X G ! dennys
& U ! dennys G dennys
Syntax error OR formula too long:
G i kinross_building_south X G ! 800_degrees
G e kinross_building_south X 800_degrees
shorten LTLs:
G i a X G ! b
G e a X b

Syntax error OR formula too long:
G i natures_way_café X G ! stone_canyon_creek_underground
G i natures_way_café X stone_canyon_creek_underground
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i iso_fusion_café X G ! tct_foods
G i iso_fusion_café X tct_foods
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i iso_fusion_café X G ! tct_foods
G i iso_fusion_café X tct_foods
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i parking_36 X G ! iso_fusion_café
G i parking_36 X iso_fusion_café
shorten LTLs:
G i a X G ! b
G i a X b

Syntax error OR formula too long:
G i westwoods_village_square X G ! london_cleaners
G ! london_cleaners G westwood_village
Syntax error OR formula too long:
G i mio_babbos X G ! village_center_newsstand
G ! village_center_newsstand G mio_babbos
shorten LTLs:
G i a X G ! b
G ! b G a

Syntax error:
G i a X G ! b
G ! b G a

Syntax error OR formula too long:
G i westwood_sporting_goods X G ! occidental_petroleum_heliport
G ! westwood_sporting_goods G occidental_petroleum_heliport
shorten LTLs:
G i a X G ! b
G ! a G b

Syntax error:
G i a X G ! b
G ! a G b

Syntax error OR formula too long:
G i parking_36 X G ! westwoods_village_square
G ! parking_36 G ! westwood_village
0
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Ike's Place, Red Pelican Music, Novel Cafe Westwood, Nature's Way Café, and UCLA Extension - Lindbrook Center
True Ground LTL: & F ikes_place & F red_pelican_music & F novel_cafe_westwood & F natures_way_café F ucla_extension_lindbrook_center
Out Ground LTL: & F red_pelican_music & F ikes_place & F novel_cafe_westwood & F natures_way_café F ucla_extension_lindbrook_center
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F b & F d & F a F c
True Lmks: ("Ike's Place", 'Red Pelican Music', 'Novel Cafe Westwood', "Nature's Way Café", 'UCLA Extension - Lindbrook Center')
Out Lmks:["Nature's Way Café", "Ike's Place", 'UCLA Extension - Lindbrook Center', 'Novel Cafe Westwood', 'Red Pelican Music']
Out Grounds: {"Nature's Way Café", "Ike's Place", 'UCLA Extension - Lindbrook Center', 'Novel Cafe Westwood', 'Red Pelican Music'}
Placeholder Map: {"Nature's Way Café": 'a', "Ike's Place": 'b', 'UCLA Extension - Lindbrook Center': 'c', 'Novel Cafe Westwood': 'd', 'Red Pelican Music': 'h'}
True

1
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Nature's Way Café, UCLA Extension - Westwood Village Center, Gayley Center, Yogurtland, and Red Pelican Music
True Ground LTL: & F natures_way_café & F ucla_extension_westwood_village_center & F gayley_center & F yogurtland F red_pelican_music
Out Ground LTL: & F natures_way_café & F ucla_extension_westwood_village_center & F gayley_center & F yogurtland F red_pelican_music
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F b & F c & F h F d
True Lmks: ("Nature's Way Café", 'UCLA Extension - Westwood Village Center', 'Gayley Center', 'Yogurtland', 'Red Pelican Music')
Out Lmks:["Nature's Way Café", 'UCLA Extension - Westwood Village Center', 'Gayley Center', 'Red Pelican Music', 'Yogurtland']
Out Grounds: {"Nature's Way Café", 'UCLA Extension - Westwood Village Center', 'Gayley Center', 'Red Pelican Music', 'Yogurtland'}
Placeholder Map: {"Nature's Way Café": 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Gayley Center': 'c', 'Red Pelican Music': 'd', 'Yogurtland': 'h'}
True

2
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: sometime visit Veggie Grill, UCLA Extension - Lindbrook Center, Peet's Coffee & Tea, The Gayley Building, and Janss Dome
True Ground LTL: & F veggie_grill & F peets_coffee_&_tea & F ucla_extension_lindbrook_center & F janss_dome F the_gayley_building
Out Ground LTL: & F veggie_grill & F ucla_extension_lindbrook_center & F peets_coffee_&_tea & F the_gayley_building F janss_dome
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F d & F b F a
True Lmks: ('Veggie Grill', "Peet's Coffee & Tea", 'UCLA Extension - Lindbrook Center', 'Janss Dome', 'The Gayley Building')
Out Lmks:['Janss Dome', 'The Gayley Building', 'UCLA Extension - Lindbrook Center', "Peet's Coffee & Tea", 'Veggie Grill']
Out Grounds: {'Janss Dome', 'The Gayley Building', 'UCLA Extension - Lindbrook Center', "Peet's Coffee & Tea", 'Veggie Grill'}
Placeholder Map: {'Janss Dome': 'a', 'The Gayley Building': 'b', 'UCLA Extension - Lindbrook Center': 'c', "Peet's Coffee & Tea": 'd', 'Veggie Grill': 'h'}
True

3
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: sometime visit Kinross Building South, Westwood's Village Square, Native Foods, Urban Outfitters, and Novel Cafe Westwood
True Ground LTL: & F kinross_building_south & F native_foods & F westwoods_village_square & F novel_cafe_westwood F urban_outfitters
Out Ground LTL: & F kinross_building_south & F westwood_village & F native_foods & F urban_outfitters F novel_cafe_westwood
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F a & F d F b
True Lmks: ('Kinross Building South', 'Native Foods', "Westwood's Village Square", 'Novel Cafe Westwood', 'Urban Outfitters')
Out Lmks:['Native Foods', "Westwood's Village Square", 'Novel Cafe Westwood', 'Urban Outfitters', 'Kinross Building South']
Out Grounds: {'Native Foods', 'Novel Cafe Westwood', 'Westwood Village', 'Urban Outfitters', 'Kinross Building South'}
Placeholder Map: {'Native Foods': 'a', 'Novel Cafe Westwood': 'b', 'Westwood Village': 'c', 'Urban Outfitters': 'd', 'Kinross Building South': 'h'}
False

4
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: eventually go visit Yogurtland, Victoria's Secret, Ike's Place, Starbucks, and 800 Degrees
True Ground LTL: & F yogurtland & F victorias_secret & F 800_degrees & F starbucks F ikes_place
Out Ground LTL: & F yogurtland & F victorias_secret & F ikes_place & F starbucks F 800_degrees
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F a & F c F h
True Lmks: ('Yogurtland', "Victoria's Secret", '800 Degrees', 'Starbucks', "Ike's Place")
Out Lmks:["Ike's Place", "Victoria's Secret", 'Starbucks', 'Yogurtland', '800 Degrees']
Out Grounds: {"Ike's Place", "Victoria's Secret", 'Starbucks', 'Yogurtland', '800 Degrees'}
Placeholder Map: {"Ike's Place": 'a', "Victoria's Secret": 'b', 'Starbucks': 'c', 'Yogurtland': 'd', '800 Degrees': 'h'}
True

5
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: eventually go visit Plaza la Reina, Native Foods, Janss Dome, Westwood Wilshire, and bibigo
True Ground LTL: & F plaza_la_reina & F native_foods & F bibigo & F westwood_wilshire F janss_dome
Out Ground LTL: & F plaza_la_reina & F native_foods & F janss_dome & F westwood_village F bibigo
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F b & F a & F h F d
True Lmks: ('Plaza la Reina', 'Native Foods', 'bibigo', 'Westwood Wilshire', 'Janss Dome')
Out Lmks:['Janss Dome', 'Native Foods', 'Plaza la Reina', 'bibigo', 'Westwood Wilshire']
Out Grounds: {'Janss Dome', 'Native Foods', 'Plaza la Reina', 'bibigo', 'Westwood Village'}
Placeholder Map: {'Janss Dome': 'a', 'Native Foods': 'b', 'Plaza la Reina': 'c', 'bibigo': 'd', 'Westwood Village': 'h'}
False

6
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Subway, Yogurtland, London Cleaners, Starbucks, and TCT Foods
True Ground LTL: & F subway & F yogurtland & F london_cleaners & F starbucks F tct_foods
Out Ground LTL: & F subway & F yogurtland & F london_cleaners & F starbucks F tct_foods
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F h & F b & F d F c
True Lmks: ('Subway', 'Yogurtland', 'London Cleaners', 'Starbucks', 'TCT Foods')
Out Lmks:['Subway', 'London Cleaners', 'TCT Foods', 'Starbucks', 'Yogurtland']
Out Grounds: {'Subway', 'London Cleaners', 'TCT Foods', 'Starbucks', 'Yogurtland'}
Placeholder Map: {'Subway': 'a', 'London Cleaners': 'b', 'TCT Foods': 'c', 'Starbucks': 'd', 'Yogurtland': 'h'}
True

7
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Starbucks, Subway, Native Foods, Parking 32, and The Gayley Building
True Ground LTL: & F starbucks & F subway & F native_foods & F parking_32 F the_gayley_building
Out Ground LTL: & F starbucks & F subway & F native_foods & F parking_32 F the_gayley_building
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F a & F h F b
True Lmks: ('Starbucks', 'Subway', 'Native Foods', 'Parking 32', 'The Gayley Building')
Out Lmks:['Native Foods', 'The Gayley Building', 'Subway', 'Starbucks', 'Parking 32']
Out Grounds: {'Native Foods', 'The Gayley Building', 'Subway', 'Starbucks', 'Parking 32'}
Placeholder Map: {'Native Foods': 'a', 'The Gayley Building': 'b', 'Subway': 'c', 'Starbucks': 'd', 'Parking 32': 'h'}
True

8
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Westwood Wilshire, go to London Cleaners, go to Ike's Place, go to Plaza la Reina, go to U-Mini
True Ground LTL: & F westwood_wilshire & F london_cleaners & F ikes_place & F plaza_la_reina F u_mini
Out Ground LTL: & F westwood_village & F london_cleaners & F ikes_place & F plaza_la_reina F u_mini
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F b & F a F h
True Lmks: ('Westwood Wilshire', 'London Cleaners', "Ike's Place", 'Plaza la Reina', 'U-Mini')
Out Lmks:['Plaza la Reina', "Ike's Place", 'London Cleaners', 'Westwood Wilshire', 'U-Mini']
Out Grounds: {'Plaza la Reina', "Ike's Place", 'Westwood Village', 'London Cleaners', 'U-Mini'}
Placeholder Map: {'Plaza la Reina': 'a', "Ike's Place": 'b', 'Westwood Village': 'c', 'London Cleaners': 'd', 'U-Mini': 'h'}
False

9
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to The Gayley Building, go to Village Center Newsstand, go to Mongol BBQ, go to Occidental Petroleum Heliport, go to Ike's Place
True Ground LTL: & F the_gayley_building & F village_center_newsstand & F mongol_bbq & F occidental_petroleum_heliport F ikes_place
Out Ground LTL: & F the_gayley_building & F village_center_newsstand & F mongol_bbq & F occidental_petroleum_heliport F ikes_place
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F h & F d & F a F b
True Lmks: ('The Gayley Building', 'Village Center Newsstand', 'Mongol BBQ', 'Occidental Petroleum Heliport', "Ike's Place")
Out Lmks:['Occidental Petroleum Heliport', "Ike's Place", 'The Gayley Building', 'Mongol BBQ', 'Village Center Newsstand']
Out Grounds: {'Occidental Petroleum Heliport', "Ike's Place", 'The Gayley Building', 'Mongol BBQ', 'Village Center Newsstand'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', "Ike's Place": 'b', 'The Gayley Building': 'c', 'Mongol BBQ': 'd', 'Village Center Newsstand': 'h'}
True

10
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Novel Cafe Westwood, Westwood's Village Square, Nature's Way Café, The Gayley Building, Iso Fusion Café, in any order required
True Ground LTL: & F novel_cafe_westwood & F westwoods_village_square & F natures_way_café & F the_gayley_building F iso_fusion_café
Out Ground LTL: & F novel_cafe_westwood & F westwood_village & F natures_way_café & F the_gayley_building F iso_fusion_café
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F a & F b F h
True Lmks: ('Novel Cafe Westwood', "Westwood's Village Square", "Nature's Way Café", 'The Gayley Building', 'Iso Fusion Café')
Out Lmks:["Nature's Way Café", "Westwood's Village Square", 'The Gayley Building', 'Novel Cafe Westwood', 'Iso Fusion Café']
Out Grounds: {"Nature's Way Café", 'The Gayley Building', 'Novel Cafe Westwood', 'Westwood Village', 'Iso Fusion Café'}
Placeholder Map: {"Nature's Way Café": 'a', 'The Gayley Building': 'b', 'Novel Cafe Westwood': 'c', 'Westwood Village': 'd', 'Iso Fusion Café': 'h'}
RER or Grounding Error

11
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Parking 32, Mongol BBQ, Village Center Newsstand, Gayley Center, Nature's Way Café, in any order required
True Ground LTL: & F parking_32 & F mongol_bbq & F village_center_newsstand & F gayley_center F natures_way_café
Out Ground LTL: & F parking_32 & F mongol_bbq & F village_center_newsstand & F gayley_center F natures_way_café
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F h & F b F a
True Lmks: ('Parking 32', 'Mongol BBQ', 'Village Center Newsstand', 'Gayley Center', "Nature's Way Café")
Out Lmks:["Nature's Way Café", 'Gayley Center', 'Mongol BBQ', 'Parking 32', 'Village Center Newsstand']
Out Grounds: {"Nature's Way Café", 'Gayley Center', 'Mongol BBQ', 'Parking 32', 'Village Center Newsstand'}
Placeholder Map: {"Nature's Way Café": 'a', 'Gayley Center': 'b', 'Mongol BBQ': 'c', 'Parking 32': 'd', 'Village Center Newsstand': 'h'}
True

12
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit all locations Urban Outfitters, bibigo, Nature's Way Café, UCLA Extension - Lindbrook Center, Gayley & Lindbrook Apartments
True Ground LTL: & F urban_outfitters & F bibigo & F natures_way_café & F ucla_extension_lindbrook_center F gayley_&_lindbrook_apartments
Out Ground LTL: & F urban_outfitters & F bibigo & F natures_way_café & F ucla_extension_lindbrook_center F gayley_&_lindbrook_apartments
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F b & F a & F c F d
True Lmks: ('Urban Outfitters', 'bibigo', "Nature's Way Café", 'UCLA Extension - Lindbrook Center', 'Gayley & Lindbrook Apartments')
Out Lmks:["Nature's Way Café", 'bibigo', 'UCLA Extension - Lindbrook Center', 'Gayley & Lindbrook Apartments', 'Urban Outfitters']
Out Grounds: {"Nature's Way Café", 'bibigo', 'UCLA Extension - Lindbrook Center', 'Gayley & Lindbrook Apartments', 'Urban Outfitters'}
Placeholder Map: {"Nature's Way Café": 'a', 'bibigo': 'b', 'UCLA Extension - Lindbrook Center': 'c', 'Gayley & Lindbrook Apartments': 'd', 'Urban Outfitters': 'h'}
True

13
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit all locations Westwood Wilshire, Subway, Red Pelican Music, Westwood's Village Square, Village Center Newsstand
True Ground LTL: & F westwood_wilshire & F subway & F red_pelican_music & F westwoods_village_square F village_center_newsstand
Out Ground LTL: & F westwood_village & F subway & F red_pelican_music F village_center_newsstand
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F b & F c F d
True Lmks: ('Westwood Wilshire', 'Subway', 'Red Pelican Music', "Westwood's Village Square", 'Village Center Newsstand')
Out Lmks:["Westwood's Village Square", 'Subway', 'Red Pelican Music', 'Westwood Wilshire', 'Village Center Newsstand']
Out Grounds: {'Westwood Village', 'Subway', 'Red Pelican Music', 'Village Center Newsstand'}
Placeholder Map: {'Westwood Village': 'a', 'Subway': 'b', 'Red Pelican Music': 'c', 'Village Center Newsstand': 'd'}
False

14
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach the following five locations Urban Outfitters, Westwood's Village Square, Subway, bibigo, Yogurtland
True Ground LTL: & F urban_outfitters & F westwoods_village_square & F subway & F bibigo F yogurtland
Out Ground LTL: & F urban_outfitters & F westwood_village & F subway & F bibigo F yogurtland
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F b & F c & F a F d
True Lmks: ('Urban Outfitters', "Westwood's Village Square", 'Subway', 'bibigo', 'Yogurtland')
Out Lmks:['bibigo', "Westwood's Village Square", 'Subway', 'Yogurtland', 'Urban Outfitters']
Out Grounds: {'bibigo', 'Westwood Village', 'Subway', 'Yogurtland', 'Urban Outfitters'}
Placeholder Map: {'bibigo': 'a', 'Westwood Village': 'b', 'Subway': 'c', 'Yogurtland': 'd', 'Urban Outfitters': 'h'}
False

15
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach the following five locations Urban Outfitters, Stone Canyon Creek (underground), UCLA Extension - Lindbrook Center, Westwood Wilshire, bibigo
True Ground LTL: & F urban_outfitters & F stone_canyon_creek_underground & F ucla_extension_lindbrook_center & F westwood_wilshire F bibigo
Out Ground LTL: & F urban_outfitters & F stone_canyon_creek_underground & F ucla_extension_lindbrook_center & F westwood_village F bibigo
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F a & F c & F d F b
True Lmks: ('Urban Outfitters', 'Stone Canyon Creek (underground)', 'UCLA Extension - Lindbrook Center', 'Westwood Wilshire', 'bibigo')
Out Lmks:['Stone Canyon Creek (underground)', 'bibigo', 'UCLA Extension - Lindbrook Center', 'Westwood Wilshire', 'Urban Outfitters']
Out Grounds: {'Stone Canyon Creek (underground)', 'bibigo', 'UCLA Extension - Lindbrook Center', 'Westwood Village', 'Urban Outfitters'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'bibigo': 'b', 'UCLA Extension - Lindbrook Center': 'c', 'Westwood Village': 'd', 'Urban Outfitters': 'h'}
False

16
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: find the following Mongol BBQ, Janss Dome, Ike's Place, UCLA Extension - Westwood Village Center, Westwood's Village Square
True Ground LTL: & F mongol_bbq & F janss_dome & F ikes_place & F ucla_extension_westwood_village_center F westwoods_village_square
Out Ground LTL: & F mongol_bbq & F janss_dome & F ikes_place & F ucla_extension_westwood_village_center F westwood_village
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F a & F b & F c F d
True Lmks: ('Mongol BBQ', 'Janss Dome', "Ike's Place", 'UCLA Extension - Westwood Village Center', "Westwood's Village Square")
Out Lmks:['Janss Dome', "Westwood's Village Square", "Ike's Place", 'UCLA Extension - Westwood Village Center', 'Mongol BBQ']
Out Grounds: {'Janss Dome', "Ike's Place", 'UCLA Extension - Westwood Village Center', 'Westwood Village', 'Mongol BBQ'}
Placeholder Map: {'Janss Dome': 'a', "Ike's Place": 'b', 'UCLA Extension - Westwood Village Center': 'c', 'Westwood Village': 'd', 'Mongol BBQ': 'h'}
False

17
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: find the following TCT Foods, Westwood's Village Square, London Cleaners, Subway, Kinross Building South
True Ground LTL: & F tct_foods & F westwoods_village_square & F london_cleaners & F subway F kinross_building_south
Out Ground LTL: & F tct_foods & F westwood_village & F london_cleaners & F subway F kinross_building_south
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F a & F c & F b F h
True Lmks: ('TCT Foods', "Westwood's Village Square", 'London Cleaners', 'Subway', 'Kinross Building South')
Out Lmks:["Westwood's Village Square", 'Subway', 'London Cleaners', 'TCT Foods', 'Kinross Building South']
Out Grounds: {'Westwood Village', 'Subway', 'London Cleaners', 'TCT Foods', 'Kinross Building South'}
Placeholder Map: {'Westwood Village': 'a', 'Subway': 'b', 'London Cleaners': 'c', 'TCT Foods': 'd', 'Kinross Building South': 'h'}
False

18
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Mio Babbo's, Westwood's Village Square, Red Pelican Music, Yogurtland, and TCT Foods, in arbitrary order
True Ground LTL: & F mio_babbos & F westwoods_village_square & F red_pelican_music & F yogurtland F tct_foods
Out Ground LTL: & F mio_babbos & F westwood_village & F red_pelican_music & F yogurtland F tct_foods
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F a & F b & F d F c
True Lmks: ("Mio Babbo's", "Westwood's Village Square", 'Red Pelican Music', 'Yogurtland', 'TCT Foods')
Out Lmks:["Westwood's Village Square", 'Red Pelican Music', 'TCT Foods', 'Yogurtland', "Mio Babbo's"]
Out Grounds: {'Westwood Village', 'Red Pelican Music', 'TCT Foods', 'Yogurtland', "Mio Babbo's"}
Placeholder Map: {'Westwood Village': 'a', 'Red Pelican Music': 'b', 'TCT Foods': 'c', 'Yogurtland': 'd', "Mio Babbo's": 'h'}
False

19
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to TCT Foods, Occidental Petroleum Heliport, Subway, Nature's Way Café, and Parking 32, in arbitrary order
True Ground LTL: & F tct_foods & F occidental_petroleum_heliport & F subway & F natures_way_café F parking_32
Out Ground LTL: & F tct_foods & F occidental_petroleum_heliport & F subway & F natures_way_café F parking_32
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F c & F a F h
True Lmks: ('TCT Foods', 'Occidental Petroleum Heliport', 'Subway', "Nature's Way Café", 'Parking 32')
Out Lmks:["Nature's Way Café", 'Occidental Petroleum Heliport', 'Subway', 'TCT Foods', 'Parking 32']
Out Grounds: {"Nature's Way Café", 'Occidental Petroleum Heliport', 'Subway', 'TCT Foods', 'Parking 32'}
Placeholder Map: {"Nature's Way Café": 'a', 'Occidental Petroleum Heliport': 'b', 'Subway': 'c', 'TCT Foods': 'd', 'Parking 32': 'h'}
True

20
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure Village Center Newsstand, Gayley & Lindbrook Apartments, U-Mini, Janss Dome, and Peet's Coffee & Tea, are all visited
True Ground LTL: & F village_center_newsstand & F gayley_&_lindbrook_apartments & F u_mini & F janss_dome F peets_coffee_&_tea
Out Ground LTL: & F village_center_newsstand & F gayley_&_lindbrook_apartments & F u_mini & F janss_dome F peets_coffee_&_tea
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F d & F a F b
True Lmks: ('Village Center Newsstand', 'Gayley & Lindbrook Apartments', 'U-Mini', 'Janss Dome', "Peet's Coffee & Tea")
Out Lmks:['Janss Dome', "Peet's Coffee & Tea", 'Gayley & Lindbrook Apartments', 'U-Mini', 'Village Center Newsstand']
Out Grounds: {'Janss Dome', "Peet's Coffee & Tea", 'Gayley & Lindbrook Apartments', 'U-Mini', 'Village Center Newsstand'}
Placeholder Map: {'Janss Dome': 'a', "Peet's Coffee & Tea": 'b', 'Gayley & Lindbrook Apartments': 'c', 'U-Mini': 'd', 'Village Center Newsstand': 'h'}
True

21
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure Westwood Wilshire, Noah's Bagels, Mio Babbo's, Plaza la Reina, and Denny's, are all visited
True Ground LTL: & F westwood_wilshire & F noahs_bagels & F mio_babbos & F plaza_la_reina F dennys
Out Ground LTL: & F westwood_village & F noahs_bagels & F mio_babbos & F plaza_la_reina F dennys
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F c & F d & F a F h
True Lmks: ('Westwood Wilshire', "Noah's Bagels", "Mio Babbo's", 'Plaza la Reina', "Denny's")
Out Lmks:['Plaza la Reina', "Noah's Bagels", 'Westwood Wilshire', "Mio Babbo's", "Denny's"]
Out Grounds: {'Plaza la Reina', 'Westwood Village', "Noah's Bagels", "Mio Babbo's", "Denny's"}
Placeholder Map: {'Plaza la Reina': 'a', 'Westwood Village': 'b', "Noah's Bagels": 'c', "Mio Babbo's": 'd', "Denny's": 'h'}
False

22
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: do not stop until Stone Canyon Creek (underground), Denny's, Native Foods, Peet's Coffee & Tea, and Victoria's Secret, are all visited
True Ground LTL: & F stone_canyon_creek_underground & F dennys & F native_foods & F peets_coffee_&_tea F victorias_secret
Out Ground LTL: & F stone_canyon_creek_underground & F dennys & F native_foods & F peets_coffee_&_tea F victorias_secret
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F h & F b & F c F d
True Lmks: ('Stone Canyon Creek (underground)', "Denny's", 'Native Foods', "Peet's Coffee & Tea", "Victoria's Secret")
Out Lmks:['Stone Canyon Creek (underground)', 'Native Foods', "Peet's Coffee & Tea", "Denny's", "Victoria's Secret"]
Out Grounds: {'Stone Canyon Creek (underground)', 'Native Foods', "Peet's Coffee & Tea", "Victoria's Secret", "Denny's"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Native Foods': 'b', "Peet's Coffee & Tea": 'c', "Victoria's Secret": 'd', "Denny's": 'h'}
True

23
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: do not stop until Occidental Petroleum Heliport, Denny's, Westwood Wilshire, Parking 32, and Yogurtland, are all visited
True Ground LTL: & F occidental_petroleum_heliport & F dennys & F westwood_wilshire & F parking_32 F yogurtland
Out Ground LTL: & F occidental_petroleum_heliport & F dennys & F westwood_village & F parking_32 F yogurtland
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F h & F b & F d F c
True Lmks: ('Occidental Petroleum Heliport', "Denny's", 'Westwood Wilshire', 'Parking 32', 'Yogurtland')
Out Lmks:['Occidental Petroleum Heliport', 'Westwood Wilshire', 'Yogurtland', 'Parking 32', "Denny's"]
Out Grounds: {'Occidental Petroleum Heliport', 'Westwood Village', 'Yogurtland', 'Parking 32', "Denny's"}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Westwood Village': 'b', 'Yogurtland': 'c', 'Parking 32': 'd', "Denny's": 'h'}
False

24
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make your way to Subway, Parking 36, 800 Degrees, UCLA Extension - Westwood Village Center, and Veggie Grill
True Ground LTL: & F subway & F parking_36 & F 800_degrees & F ucla_extension_westwood_village_center F veggie_grill
Out Ground LTL: & F subway & F parking_36 & F 800_degrees & F ucla_extension_westwood_village_center F veggie_grill
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F h & F a F b
True Lmks: ('Subway', 'Parking 36', '800 Degrees', 'UCLA Extension - Westwood Village Center', 'Veggie Grill')
Out Lmks:['UCLA Extension - Westwood Village Center', 'Veggie Grill', 'Subway', 'Parking 36', '800 Degrees']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Veggie Grill', 'Subway', 'Parking 36', '800 Degrees'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Veggie Grill': 'b', 'Subway': 'c', 'Parking 36': 'd', '800 Degrees': 'h'}
True

25
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make your way to UCLA Extension - Lindbrook Center, Poke Bar, bibigo, Parking 36, and Iso Fusion Café
True Ground LTL: & F ucla_extension_lindbrook_center & F poke_bar & F bibigo & F parking_36 F iso_fusion_café
Out Ground LTL: & F ucla_extension_lindbrook_center & F poke_bar & F bibigo & F parking_36 F iso_fusion_café
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F c & F a & F h F d
True Lmks: ('UCLA Extension - Lindbrook Center', 'Poke Bar', 'bibigo', 'Parking 36', 'Iso Fusion Café')
Out Lmks:['bibigo', 'UCLA Extension - Lindbrook Center', 'Poke Bar', 'Iso Fusion Café', 'Parking 36']
Out Grounds: {'bibigo', 'UCLA Extension - Lindbrook Center', 'Poke Bar', 'Iso Fusion Café', 'Parking 36'}
Placeholder Map: {'bibigo': 'a', 'UCLA Extension - Lindbrook Center': 'b', 'Poke Bar': 'c', 'Iso Fusion Café': 'd', 'Parking 36': 'h'}
True

26
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Occidental Petroleum Heliport, Stone Canyon Creek (underground), Denny's, London Cleaners, and Noah's Bagels, in any order
True Ground LTL: & F occidental_petroleum_heliport & F stone_canyon_creek_underground & F dennys & F london_cleaners F noahs_bagels
Out Ground LTL: & F occidental_petroleum_heliport & F stone_canyon_creek_underground & F dennys & F london_cleaners F noahs_bagels
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F a & F h & F c F d
True Lmks: ('Occidental Petroleum Heliport', 'Stone Canyon Creek (underground)', "Denny's", 'London Cleaners', "Noah's Bagels")
Out Lmks:['Occidental Petroleum Heliport', 'Stone Canyon Creek (underground)', 'London Cleaners', "Noah's Bagels", "Denny's"]
Out Grounds: {'Stone Canyon Creek (underground)', 'Occidental Petroleum Heliport', 'London Cleaners', "Noah's Bagels", "Denny's"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Occidental Petroleum Heliport': 'b', 'London Cleaners': 'c', "Noah's Bagels": 'd', "Denny's": 'h'}
True

27
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Mongol BBQ, Yogurtland, Red Pelican Music, Mio Babbo's, and London Cleaners, in any order
True Ground LTL: & F mongol_bbq & F yogurtland & F red_pelican_music & F mio_babbos F london_cleaners
Out Ground LTL: & F mongol_bbq & F yogurtland & F red_pelican_music & F mio_babbos F london_cleaners
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F c & F h F b
True Lmks: ('Mongol BBQ', 'Yogurtland', 'Red Pelican Music', "Mio Babbo's", 'London Cleaners')
Out Lmks:['Mongol BBQ', 'London Cleaners', 'Red Pelican Music', 'Yogurtland', "Mio Babbo's"]
Out Grounds: {'Mongol BBQ', 'London Cleaners', 'Red Pelican Music', 'Yogurtland', "Mio Babbo's"}
Placeholder Map: {'Mongol BBQ': 'a', 'London Cleaners': 'b', 'Red Pelican Music': 'c', 'Yogurtland': 'd', "Mio Babbo's": 'h'}
True

28
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Parking 36, Kinross Building South, 800 Degrees, U-Mini, and Iso Fusion Café, in no particular order
True Ground LTL: & F kinross_building_south & F iso_fusion_café & F parking_36 & F 800_degrees F u_mini
Out Ground LTL: & F parking_36 & F kinross_building_south & F 800_degrees & F u_mini F iso_fusion_café
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F h & F b F a
True Lmks: ('Kinross Building South', 'Iso Fusion Café', 'Parking 36', '800 Degrees', 'U-Mini')
Out Lmks:['Iso Fusion Café', 'U-Mini', 'Kinross Building South', 'Parking 36', '800 Degrees']
Out Grounds: {'Iso Fusion Café', 'U-Mini', 'Kinross Building South', 'Parking 36', '800 Degrees'}
Placeholder Map: {'Iso Fusion Café': 'a', 'U-Mini': 'b', 'Kinross Building South': 'c', 'Parking 36': 'd', '800 Degrees': 'h'}
True

29
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Mongol BBQ, UTLA Beauty, TCT Foods, Peet's Coffee & Tea, and bibigo, in no particular order
True Ground LTL: & F utla_beauty & F bibigo & F mongol_bbq & F tct_foods F peets_coffee_&_tea
Out Ground LTL: & F mongol_bbq & F utla_beauty & F tct_foods & F peets_coffee_&_tea F bibigo
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F h & F d & F b F a
True Lmks: ('UTLA Beauty', 'bibigo', 'Mongol BBQ', 'TCT Foods', "Peet's Coffee & Tea")
Out Lmks:['bibigo', "Peet's Coffee & Tea", 'Mongol BBQ', 'TCT Foods', 'UTLA Beauty']
Out Grounds: {'bibigo', "Peet's Coffee & Tea", 'Mongol BBQ', 'TCT Foods', 'UTLA Beauty'}
Placeholder Map: {'bibigo': 'a', "Peet's Coffee & Tea": 'b', 'Mongol BBQ': 'c', 'TCT Foods': 'd', 'UTLA Beauty': 'h'}
True

30
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Parking 36, Red Pelican Music, Westwood Wilshire, Victoria's Secret, and Janss Dome, at least once
True Ground LTL: & F parking_36 & F janss_dome & F westwood_wilshire & F red_pelican_music F victorias_secret
Out Ground LTL: & F red_pelican_music & F parking_36 & F westwood_village & F victorias_secret F janss_dome
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F b & F h F a
True Lmks: ('Parking 36', 'Janss Dome', 'Westwood Wilshire', 'Red Pelican Music', "Victoria's Secret")
Out Lmks:['Janss Dome', 'Red Pelican Music', 'Westwood Wilshire', 'Parking 36', "Victoria's Secret"]
Out Grounds: {'Janss Dome', 'Westwood Village', 'Red Pelican Music', 'Parking 36', "Victoria's Secret"}
Placeholder Map: {'Janss Dome': 'a', 'Westwood Village': 'b', 'Red Pelican Music': 'c', 'Parking 36': 'd', "Victoria's Secret": 'h'}
False

31
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Parking 32, The Gayley Building, Ike's Place, Nature's Way Café, and U-Mini, at least once
True Ground LTL: & F parking_32 & F u_mini & F ikes_place & F the_gayley_building F natures_way_café
Out Ground LTL: & F the_gayley_building & F parking_32 & F ikes_place & F natures_way_café F u_mini
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F h & F b & F a F d
True Lmks: ('Parking 32', 'U-Mini', "Ike's Place", 'The Gayley Building', "Nature's Way Café")
Out Lmks:["Nature's Way Café", "Ike's Place", 'The Gayley Building', 'U-Mini', 'Parking 32']
Out Grounds: {"Nature's Way Café", "Ike's Place", 'The Gayley Building', 'U-Mini', 'Parking 32'}
Placeholder Map: {"Nature's Way Café": 'a', "Ike's Place": 'b', 'The Gayley Building': 'c', 'U-Mini': 'd', 'Parking 32': 'h'}
True

32
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Native Foods, Yogurtland, Westwood's Village Square, Westwood Sporting Goods, and UCLA Extension - Westwood Village Center
True Ground LTL: & F yogurtland & F native_foods & F westwood_sporting_goods & F ucla_extension_westwood_village_center F westwoods_village_square
Out Ground LTL: & F native_foods & F yogurtland & F westwood_village & F westwood_sporting_goods F ucla_extension_westwood_village_center
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F c & F h F b
True Lmks: ('Yogurtland', 'Native Foods', 'Westwood Sporting Goods', 'UCLA Extension - Westwood Village Center', "Westwood's Village Square")
Out Lmks:['Native Foods', "Westwood's Village Square", 'UCLA Extension - Westwood Village Center', 'Yogurtland', 'Westwood Sporting Goods']
Out Grounds: {'Native Foods', 'UCLA Extension - Westwood Village Center', 'Westwood Village', 'Yogurtland', 'Westwood Sporting Goods'}
Placeholder Map: {'Native Foods': 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Westwood Village': 'c', 'Yogurtland': 'd', 'Westwood Sporting Goods': 'h'}
False

33
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Stone Canyon Creek (underground), Noah's Bagels, U-Mini, Subway, and The Gayley Building
True Ground LTL: & F noahs_bagels & F stone_canyon_creek_underground & F subway & F the_gayley_building F u_mini
Out Ground LTL: & F stone_canyon_creek_underground & F noahs_bagels & F u_mini & F subway F the_gayley_building
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F h & F c F b
True Lmks: ("Noah's Bagels", 'Stone Canyon Creek (underground)', 'Subway', 'The Gayley Building', 'U-Mini')
Out Lmks:['Stone Canyon Creek (underground)', 'The Gayley Building', 'Subway', "Noah's Bagels", 'U-Mini']
Out Grounds: {'Stone Canyon Creek (underground)', 'The Gayley Building', 'Subway', "Noah's Bagels", 'U-Mini'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'The Gayley Building': 'b', 'Subway': 'c', "Noah's Bagels": 'd', 'U-Mini': 'h'}
True

34
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to UCLA Extension - Lindbrook Center, Victoria's Secret, 800 Degrees, Subway, and Gayley & Lindbrook Apartments, in any order
True Ground LTL: & F gayley_&_lindbrook_apartments & F 800_degrees & F victorias_secret & F subway F ucla_extension_lindbrook_center
Out Ground LTL: & F subway & F ucla_extension_lindbrook_center & F gayley_&_lindbrook_apartments & F 800_degrees F victorias_secret
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F b & F d & F a F h
True Lmks: ('Gayley & Lindbrook Apartments', '800 Degrees', "Victoria's Secret", 'Subway', 'UCLA Extension - Lindbrook Center')
Out Lmks:['UCLA Extension - Lindbrook Center', 'Gayley & Lindbrook Apartments', 'Subway', "Victoria's Secret", '800 Degrees']
Out Grounds: {'800 Degrees', 'UCLA Extension - Lindbrook Center', 'Subway', 'Gayley & Lindbrook Apartments', "Victoria's Secret"}
Placeholder Map: {'800 Degrees': 'a', 'UCLA Extension - Lindbrook Center': 'b', 'Subway': 'c', 'Gayley & Lindbrook Apartments': 'd', "Victoria's Secret": 'h'}
True

35
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Red Pelican Music, Nature's Way Café, UCLA Extension - Westwood Village Center, 800 Degrees, and U-Mini, in any order
True Ground LTL: & F u_mini & F ucla_extension_westwood_village_center & F natures_way_café & F 800_degrees F red_pelican_music
Out Ground LTL: & F 800_degrees & F red_pelican_music & F ucla_extension_westwood_village_center & F u_mini F natures_way_café
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F b & F d F a
True Lmks: ('U-Mini', 'UCLA Extension - Westwood Village Center', "Nature's Way Café", '800 Degrees', 'Red Pelican Music')
Out Lmks:["Nature's Way Café", 'UCLA Extension - Westwood Village Center', 'Red Pelican Music', 'U-Mini', '800 Degrees']
Out Grounds: {"Nature's Way Café", 'UCLA Extension - Westwood Village Center', 'Red Pelican Music', 'U-Mini', '800 Degrees'}
Placeholder Map: {"Nature's Way Café": 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Red Pelican Music': 'c', 'U-Mini': 'd', '800 Degrees': 'h'}
True

36
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit London Cleaners, Red Pelican Music, Yogurtland, Novel Cafe Westwood, and Village Center Newsstand, in no specific order
True Ground LTL: & F london_cleaners & F red_pelican_music & F yogurtland & F novel_cafe_westwood F village_center_newsstand
Out Ground LTL: & F red_pelican_music & F london_cleaners & F yogurtland & F novel_cafe_westwood F village_center_newsstand
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F b & F d & F a F h
True Lmks: ('London Cleaners', 'Red Pelican Music', 'Yogurtland', 'Novel Cafe Westwood', 'Village Center Newsstand')
Out Lmks:['Novel Cafe Westwood', 'London Cleaners', 'Red Pelican Music', 'Yogurtland', 'Village Center Newsstand']
Out Grounds: {'Novel Cafe Westwood', 'London Cleaners', 'Red Pelican Music', 'Yogurtland', 'Village Center Newsstand'}
Placeholder Map: {'Novel Cafe Westwood': 'a', 'London Cleaners': 'b', 'Red Pelican Music': 'c', 'Yogurtland': 'd', 'Village Center Newsstand': 'h'}
True

37
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Janss Dome, Parking 32, UCLA Extension - Westwood Village Center, Village Center Newsstand, and Urban Outfitters, in no specific order
True Ground LTL: & F janss_dome & F parking_32 & F ucla_extension_westwood_village_center & F village_center_newsstand F urban_outfitters
Out Ground LTL: & F janss_dome & F parking_32 & F ucla_extension_westwood_village_center & F village_center_newsstand F urban_outfitters
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F b & F h F c
True Lmks: ('Janss Dome', 'Parking 32', 'UCLA Extension - Westwood Village Center', 'Village Center Newsstand', 'Urban Outfitters')
Out Lmks:['Janss Dome', 'UCLA Extension - Westwood Village Center', 'Urban Outfitters', 'Parking 32', 'Village Center Newsstand']
Out Grounds: {'Janss Dome', 'UCLA Extension - Westwood Village Center', 'Urban Outfitters', 'Parking 32', 'Village Center Newsstand'}
Placeholder Map: {'Janss Dome': 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Urban Outfitters': 'c', 'Parking 32': 'd', 'Village Center Newsstand': 'h'}
True

38
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach Parking 36, Occidental Petroleum Heliport, Yogurtland, Mongol BBQ, and Kinross Building South, in any order
True Ground LTL: & F parking_36 & F occidental_petroleum_heliport & F yogurtland & F mongol_bbq F kinross_building_south
Out Ground LTL: & F parking_36 & F occidental_petroleum_heliport & F yogurtland & F mongol_bbq F kinross_building_south
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F a & F c & F b F d
True Lmks: ('Parking 36', 'Occidental Petroleum Heliport', 'Yogurtland', 'Mongol BBQ', 'Kinross Building South')
Out Lmks:['Occidental Petroleum Heliport', 'Mongol BBQ', 'Yogurtland', 'Kinross Building South', 'Parking 36']
Out Grounds: {'Occidental Petroleum Heliport', 'Mongol BBQ', 'Yogurtland', 'Kinross Building South', 'Parking 36'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Mongol BBQ': 'b', 'Yogurtland': 'c', 'Kinross Building South': 'd', 'Parking 36': 'h'}
True

39
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach bibigo, Victoria's Secret, Occidental Petroleum Heliport, Village Center Newsstand, and Nature's Way Café, in any order
True Ground LTL: & F bibigo & F victorias_secret & F occidental_petroleum_heliport & F village_center_newsstand F natures_way_café
Out Ground LTL: & F bibigo & F victorias_secret & F occidental_petroleum_heliport & F village_center_newsstand F natures_way_café
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F b & F h F a
True Lmks: ('bibigo', "Victoria's Secret", 'Occidental Petroleum Heliport', 'Village Center Newsstand', "Nature's Way Café")
Out Lmks:["Nature's Way Café", 'Occidental Petroleum Heliport', 'bibigo', "Victoria's Secret", 'Village Center Newsstand']
Out Grounds: {"Nature's Way Café", 'Occidental Petroleum Heliport', 'bibigo', "Victoria's Secret", 'Village Center Newsstand'}
Placeholder Map: {"Nature's Way Café": 'a', 'Occidental Petroleum Heliport': 'b', 'bibigo': 'c', "Victoria's Secret": 'd', 'Village Center Newsstand': 'h'}
True

40
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you go to Gayley & Lindbrook Apartments, Peet's Coffee & Tea, Native Foods, Subway, Occidental Petroleum Heliport, in any order
True Ground LTL: & F gayley_&_lindbrook_apartments & F peets_coffee_&_tea & F native_foods & F subway F occidental_petroleum_heliport
Out Ground LTL: & F gayley_&_lindbrook_apartments & F peets_coffee_&_tea & F native_foods & F subway F occidental_petroleum_heliport
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F b & F d F a
True Lmks: ('Gayley & Lindbrook Apartments', "Peet's Coffee & Tea", 'Native Foods', 'Subway', 'Occidental Petroleum Heliport')
Out Lmks:['Occidental Petroleum Heliport', 'Native Foods', "Peet's Coffee & Tea", 'Subway', 'Gayley & Lindbrook Apartments']
Out Grounds: {'Occidental Petroleum Heliport', 'Native Foods', "Peet's Coffee & Tea", 'Subway', 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Native Foods': 'b', "Peet's Coffee & Tea": 'c', 'Subway': 'd', 'Gayley & Lindbrook Apartments': 'h'}
True

41
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you go to Red Pelican Music, UCLA Extension - Westwood Village Center, Native Foods, London Cleaners, Noah's Bagels, in any order
True Ground LTL: & F red_pelican_music & F ucla_extension_westwood_village_center & F native_foods & F london_cleaners F noahs_bagels
Out Ground LTL: & F red_pelican_music & F ucla_extension_westwood_village_center & F native_foods & F london_cleaners F noahs_bagels
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F a & F c F h
True Lmks: ('Red Pelican Music', 'UCLA Extension - Westwood Village Center', 'Native Foods', 'London Cleaners', "Noah's Bagels")
Out Lmks:['Native Foods', 'UCLA Extension - Westwood Village Center', 'London Cleaners', 'Red Pelican Music', "Noah's Bagels"]
Out Grounds: {'Native Foods', 'UCLA Extension - Westwood Village Center', 'London Cleaners', 'Red Pelican Music', "Noah's Bagels"}
Placeholder Map: {'Native Foods': 'a', 'UCLA Extension - Westwood Village Center': 'b', 'London Cleaners': 'c', 'Red Pelican Music': 'd', "Noah's Bagels": 'h'}
True

42
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: you must visit Peet's Coffee & Tea, Gayley & Lindbrook Apartments, Native Foods, Westwood's Village Square, Kinross Building South, but it can be done in any order
True Ground LTL: & F peets_coffee_&_tea & F gayley_&_lindbrook_apartments & F native_foods & F westwoods_village_square F kinross_building_south
Out Ground LTL: & F peets_coffee_&_tea & F gayley_&_lindbrook_apartments & F native_foods & F westwood_village F kinross_building_south
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F d & F a & F c F h
True Lmks: ("Peet's Coffee & Tea", 'Gayley & Lindbrook Apartments', 'Native Foods', "Westwood's Village Square", 'Kinross Building South')
Out Lmks:['Native Foods', "Westwood's Village Square", "Peet's Coffee & Tea", 'Gayley & Lindbrook Apartments', 'Kinross Building South']
Out Grounds: {'Native Foods', "Peet's Coffee & Tea", 'Westwood Village', 'Gayley & Lindbrook Apartments', 'Kinross Building South'}
Placeholder Map: {'Native Foods': 'a', "Peet's Coffee & Tea": 'b', 'Westwood Village': 'c', 'Gayley & Lindbrook Apartments': 'd', 'Kinross Building South': 'h'}
False

43
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: you must visit Veggie Grill, Urban Outfitters, Village Center Newsstand, Noah's Bagels, Iso Fusion Café, but it can be done in any order
True Ground LTL: & F veggie_grill & F urban_outfitters & F village_center_newsstand & F noahs_bagels F iso_fusion_café
Out Ground LTL: & F veggie_grill & F urban_outfitters & F village_center_newsstand & F noahs_bagels F iso_fusion_café
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F h & F b F c
True Lmks: ('Veggie Grill', 'Urban Outfitters', 'Village Center Newsstand', "Noah's Bagels", 'Iso Fusion Café')
Out Lmks:['Veggie Grill', "Noah's Bagels", 'Iso Fusion Café', 'Urban Outfitters', 'Village Center Newsstand']
Out Grounds: {'Veggie Grill', "Noah's Bagels", 'Iso Fusion Café', 'Urban Outfitters', 'Village Center Newsstand'}
Placeholder Map: {'Veggie Grill': 'a', "Noah's Bagels": 'b', 'Iso Fusion Café': 'c', 'Urban Outfitters': 'd', 'Village Center Newsstand': 'h'}
True

44
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: in no particular order visit Red Pelican Music, Mongol BBQ, Janss Dome, Westwood Wilshire, Occidental Petroleum Heliport
True Ground LTL: & F red_pelican_music & F mongol_bbq & F janss_dome & F westwood_wilshire F occidental_petroleum_heliport
Out Ground LTL: & F red_pelican_music & F mongol_bbq & F janss_dome & F westwood_village F occidental_petroleum_heliport
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F d & F a & F c F b
True Lmks: ('Red Pelican Music', 'Mongol BBQ', 'Janss Dome', 'Westwood Wilshire', 'Occidental Petroleum Heliport')
Out Lmks:['Janss Dome', 'Occidental Petroleum Heliport', 'Mongol BBQ', 'Red Pelican Music', 'Westwood Wilshire']
Out Grounds: {'Janss Dome', 'Occidental Petroleum Heliport', 'Westwood Village', 'Mongol BBQ', 'Red Pelican Music'}
Placeholder Map: {'Janss Dome': 'a', 'Occidental Petroleum Heliport': 'b', 'Westwood Village': 'c', 'Mongol BBQ': 'd', 'Red Pelican Music': 'h'}
False

45
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: in no particular order visit Gayley & Lindbrook Apartments, Parking 32, Kinross Building South, UCLA Extension - Westwood Village Center, Veggie Grill
True Ground LTL: & F gayley_&_lindbrook_apartments & F parking_32 & F kinross_building_south & F ucla_extension_westwood_village_center F veggie_grill
Out Ground LTL: & F gayley_&_lindbrook_apartments & F parking_32 & F kinross_building_south & F ucla_extension_westwood_village_center F veggie_grill
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F h & F d & F a F b
True Lmks: ('Gayley & Lindbrook Apartments', 'Parking 32', 'Kinross Building South', 'UCLA Extension - Westwood Village Center', 'Veggie Grill')
Out Lmks:['UCLA Extension - Westwood Village Center', 'Veggie Grill', 'Gayley & Lindbrook Apartments', 'Kinross Building South', 'Parking 32']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Veggie Grill', 'Gayley & Lindbrook Apartments', 'Kinross Building South', 'Parking 32'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Veggie Grill': 'b', 'Gayley & Lindbrook Apartments': 'c', 'Kinross Building South': 'd', 'Parking 32': 'h'}
True

46
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not visit Westwood Sporting Goods, until you visit Peet's Coffee & Tea, visit Peet's Coffee & Tea, only once do not visit Peet's Coffee & Tea, until you visit bibigo, visit bibigo, only once do no visit bibigo, until you visit Urban Outfitters, visit Urban Outfitters, only once
True Ground LTL: & & U ! bibigo urban_outfitters & U ! peets_coffee_&_tea bibigo & U ! westwood_sporting_goods peets_coffee_&_tea F westwood_sporting_goods & U ! urban_outfitters U urban_outfitters U ! urban_outfitters bibigo & U ! bibigo U bibigo U ! bibigo peets_coffee_&_tea U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea westwood_sporting_goods
Out Ground LTL: & & U ! bibigo urban_outfitters & U ! peets_coffee_&_tea bibigo & U ! westwood_sporting_goods peets_coffee_&_tea F westwood_sporting_goods & U ! urban_outfitters U urban_outfitters U ! urban_outfitters bibigo & U ! bibigo U bibigo U ! bibigo peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea westwood_sporting_goods
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! b a & U ! d b F d & U ! c U c U ! c a & U ! a U a U ! a b & U ! b U b U ! b d
True Lmks: ('Urban Outfitters', 'bibigo', "Peet's Coffee & Tea", 'Westwood Sporting Goods')
Out Lmks:['Urban Outfitters', "Peet's Coffee & Tea", 'bibigo', 'Westwood Sporting Goods']
Out Grounds: {'bibigo', "Peet's Coffee & Tea", 'Urban Outfitters', 'Westwood Sporting Goods'}
Placeholder Map: {'bibigo': 'a', "Peet's Coffee & Tea": 'b', 'Urban Outfitters': 'c', 'Westwood Sporting Goods': 'd'}
Syntax Error

47
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not visit Janss Dome, until you visit Ike's Place, visit Ike's Place, only once do not visit Ike's Place, until you visit Subway, visit Subway, only once do no visit Subway, until you visit Stone Canyon Creek (underground), visit Stone Canyon Creek (underground), only once
True Ground LTL: & & U ! subway stone_canyon_creek_underground & U ! ikes_place subway & U ! janss_dome ikes_place F janss_dome & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground subway & U ! subway U subway U ! subway ikes_place U ! ikes_place U ikes_place U ! ikes_place janss_dome
Out Ground LTL: & & U ! subway stone_canyon_creek_underground & U ! ikes_place subway & U ! janss_dome ikes_place F janss_dome & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground subway & U ! subway U subway U ! subway ikes_place & U ! ikes_place U ikes_place U ! ikes_place janss_dome
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! d c & U ! a d F a & U ! b U b U ! b c & U ! c U c U ! c d & U ! d U d U ! d a
True Lmks: ('Stone Canyon Creek (underground)', 'Subway', "Ike's Place", 'Janss Dome')
Out Lmks:['Janss Dome', 'Stone Canyon Creek (underground)', 'Subway', "Ike's Place"]
Out Grounds: {'Janss Dome', 'Stone Canyon Creek (underground)', 'Subway', "Ike's Place"}
Placeholder Map: {'Janss Dome': 'a', 'Stone Canyon Creek (underground)': 'b', 'Subway': 'c', "Ike's Place": 'd'}
Syntax Error

48
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Denny's, then Subway, then Occidental Petroleum Heliport, and then Veggie Grill, you can only visit each landmark once
True Ground LTL: & & U ! subway dennys & U ! occidental_petroleum_heliport subway & U ! veggie_grill occidental_petroleum_heliport F veggie_grill & U ! dennys U dennys U ! dennys subway & U ! subway U subway U ! subway occidental_petroleum_heliport U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport veggie_grill
Out Ground LTL: & & U ! subway dennys & U ! occidental_petroleum_heliport subway & U ! veggie_grill occidental_petroleum_heliport F veggie_grill & U ! dennys U dennys U ! dennys subway & U ! subway U subway U ! subway occidental_petroleum_heliport & U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport veggie_grill
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! b a & U ! c b F c & U ! d U d U ! d a & U ! a U a U ! a b & U ! b U b U ! b c
True Lmks: ("Denny's", 'Subway', 'Occidental Petroleum Heliport', 'Veggie Grill')
Out Lmks:['Subway', 'Occidental Petroleum Heliport', 'Veggie Grill', "Denny's"]
Out Grounds: {'Subway', 'Occidental Petroleum Heliport', 'Veggie Grill', "Denny's"}
Placeholder Map: {'Subway': 'a', 'Occidental Petroleum Heliport': 'b', 'Veggie Grill': 'c', "Denny's": 'd'}
Syntax Error

49
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Gayley & Lindbrook Apartments, then Janss Dome, then Plaza la Reina, and then Noah's Bagels, you can only visit each landmark once
True Ground LTL: & & U ! janss_dome gayley_&_lindbrook_apartments & U ! plaza_la_reina janss_dome & U ! noahs_bagels plaza_la_reina F noahs_bagels & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments janss_dome & U ! janss_dome U janss_dome U ! janss_dome plaza_la_reina U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina noahs_bagels
Out Ground LTL: & & U ! janss_dome gayley_&_lindbrook_apartments & U ! plaza_la_reina janss_dome & U ! noahs_bagels plaza_la_reina F noahs_bagels & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments janss_dome & U ! janss_dome U janss_dome U ! janss_dome plaza_la_reina & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina noahs_bagels
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! b a & U ! d b F d & U ! c U c U ! c a & U ! a U a U ! a b & U ! b U b U ! b d
True Lmks: ('Gayley & Lindbrook Apartments', 'Janss Dome', 'Plaza la Reina', "Noah's Bagels")
Out Lmks:['Janss Dome', 'Plaza la Reina', 'Gayley & Lindbrook Apartments', "Noah's Bagels"]
Out Grounds: {'Janss Dome', 'Plaza la Reina', 'Gayley & Lindbrook Apartments', "Noah's Bagels"}
Placeholder Map: {'Janss Dome': 'a', 'Plaza la Reina': 'b', 'Gayley & Lindbrook Apartments': 'c', "Noah's Bagels": 'd'}
Syntax Error

50
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Westwood's Village Square, but not through Westwood Wilshire, Mongol BBQ, or Mio Babbo's, and then go to Westwood Wilshire, but not through Mongol BBQ, or Mio Babbo's, and then go to Mongol BBQ, but not through Mio Babbo's, and finally go to Mio Babbo's, no revisiting is allowed
True Ground LTL: & & U ! westwood_wilshire westwoods_village_square & U ! mongol_bbq westwood_wilshire & U ! mio_babbos mongol_bbq F mio_babbos & U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square westwood_wilshire & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire mongol_bbq U ! mongol_bbq U mongol_bbq U ! mongol_bbq mio_babbos
Out Ground LTL: & & U ! westwood_village westwood_village & U ! mongol_bbq westwood_village & U ! mio_babbos mongol_bbq F mio_babbos & U ! westwood_village U westwood_village U ! westwood_village westwood_village & U ! mongol_bbq U mongol_bbq U ! mongol_bbq westwood_village & U ! mio_babbos U mio_babbos U ! mio_babbos mongol_bbq
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c c & U ! a c & U ! b a F b & U ! c U c U ! c c & U ! a U a U ! a c & U ! b U b U ! b a
True Lmks: ("Westwood's Village Square", 'Westwood Wilshire', 'Mongol BBQ', "Mio Babbo's")
Out Lmks:['Westwood Wilshire', 'Mongol BBQ', "Mio Babbo's", "Westwood's Village Square"]
Out Grounds: {'Mongol BBQ', "Mio Babbo's", 'Westwood Village'}
Placeholder Map: {'Mongol BBQ': 'a', "Mio Babbo's": 'b', 'Westwood Village': 'c'}
RER or Grounding Error

51
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Westwood Wilshire, but not through Gayley & Lindbrook Apartments, Urban Outfitters, or Westwood's Village Square, and then go to Gayley & Lindbrook Apartments, but not through Urban Outfitters, or Westwood's Village Square, and then go to Urban Outfitters, but not through Westwood's Village Square, and finally go to Westwood's Village Square, no revisiting is allowed
True Ground LTL: & & U ! gayley_&_lindbrook_apartments westwood_wilshire & U ! urban_outfitters gayley_&_lindbrook_apartments & U ! westwoods_village_square urban_outfitters F westwoods_village_square & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments urban_outfitters U ! urban_outfitters U urban_outfitters U ! urban_outfitters westwoods_village_square
Out Ground LTL: & & U ! gayley_&_lindbrook_apartments westwood_village & U ! urban_outfitters gayley_&_lindbrook_apartments & U ! westwood_village urban_outfitters F westwood_village & U ! westwood_village U westwood_village U ! westwood_village gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments urban_outfitters & U ! urban_outfitters U urban_outfitters U ! urban_outfitters westwood_village
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! c b & U ! a c F a & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c a
True Lmks: ('Westwood Wilshire', 'Gayley & Lindbrook Apartments', 'Urban Outfitters', "Westwood's Village Square")
Out Lmks:['Westwood Wilshire', "Westwood's Village Square", 'Gayley & Lindbrook Apartments', 'Urban Outfitters']
Out Grounds: {'Westwood Village', 'Gayley & Lindbrook Apartments', 'Urban Outfitters'}
Placeholder Map: {'Westwood Village': 'a', 'Gayley & Lindbrook Apartments': 'b', 'Urban Outfitters': 'c'}
RER or Grounding Error

52
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not go to Peet's Coffee & Tea, until UTLA Beauty, is visited and do not go to UTLA Beauty, until Starbucks, is visited and do not go to Starbucks, until The Gayley Building, is visited along the path never return to previous location you have been to
True Ground LTL: & & U ! starbucks the_gayley_building & U ! utla_beauty starbucks & U ! peets_coffee_&_tea utla_beauty F peets_coffee_&_tea & U ! the_gayley_building U the_gayley_building U ! the_gayley_building starbucks & U ! starbucks U starbucks U ! starbucks utla_beauty U ! utla_beauty U utla_beauty U ! utla_beauty peets_coffee_&_tea
Out Ground LTL: & & U ! starbucks the_gayley_building & U ! utla_beauty starbucks & U ! peets_coffee_&_tea utla_beauty F peets_coffee_&_tea & U ! the_gayley_building U the_gayley_building U ! the_gayley_building starbucks & U ! starbucks U starbucks U ! starbucks utla_beauty & U ! utla_beauty U utla_beauty U ! utla_beauty peets_coffee_&_tea
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! a c & U ! b a F b & U ! d U d U ! d c & U ! c U c U ! c a & U ! a U a U ! a b
True Lmks: ('The Gayley Building', 'Starbucks', 'UTLA Beauty', "Peet's Coffee & Tea")
Out Lmks:['Starbucks', "Peet's Coffee & Tea", 'The Gayley Building', 'UTLA Beauty']
Out Grounds: {'UTLA Beauty', "Peet's Coffee & Tea", 'Starbucks', 'The Gayley Building'}
Placeholder Map: {'UTLA Beauty': 'a', "Peet's Coffee & Tea": 'b', 'Starbucks': 'c', 'The Gayley Building': 'd'}
Syntax Error

53
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not go to Gayley Center, until UCLA Extension - Westwood Village Center, is visited and do not go to UCLA Extension - Westwood Village Center, until Native Foods, is visited and do not go to Native Foods, until UTLA Beauty, is visited along the path never return to previous location you have been to
True Ground LTL: & & U ! native_foods utla_beauty & U ! ucla_extension_westwood_village_center native_foods & U ! gayley_center ucla_extension_westwood_village_center F gayley_center & U ! utla_beauty U utla_beauty U ! utla_beauty native_foods & U ! native_foods U native_foods U ! native_foods ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center U ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center gayley_center
Out Ground LTL: & & U ! native_foods utla_beauty & U ! ucla_extension_westwood_village_center native_foods & U ! gayley_center ucla_extension_westwood_village_center F gayley_center & U ! utla_beauty U utla_beauty U ! utla_beauty native_foods & U ! native_foods U native_foods U ! native_foods ucla_extension_westwood_village_center & U ! ucla_extension_westwood_village_center U ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center gayley_center
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! b a & U ! c b F c & U ! d U d U ! d a & U ! a U a U ! a b & U ! b U b U ! b c
True Lmks: ('UTLA Beauty', 'Native Foods', 'UCLA Extension - Westwood Village Center', 'Gayley Center')
Out Lmks:['Native Foods', 'UCLA Extension - Westwood Village Center', 'Gayley Center', 'UTLA Beauty']
Out Grounds: {'Native Foods', 'UCLA Extension - Westwood Village Center', 'Gayley Center', 'UTLA Beauty'}
Placeholder Map: {'Native Foods': 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Gayley Center': 'c', 'UTLA Beauty': 'd'}
Syntax Error

54
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: make your way to UTLA Beauty, only after going to Westwood Sporting Goods, before that make your way to Westwood Sporting Goods, only after going to Parking 36, before that make your way to Parking 36, only after going to UCLA Extension - Lindbrook Center, do not go back to the previous location you have visited while heading to the next
True Ground LTL: & & U ! parking_36 ucla_extension_lindbrook_center & U ! westwood_sporting_goods parking_36 & U ! utla_beauty westwood_sporting_goods F utla_beauty & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center U ! ucla_extension_lindbrook_center parking_36 & U ! parking_36 U parking_36 U ! parking_36 westwood_sporting_goods U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods utla_beauty
Out Ground LTL: & & U ! parking_36 ucla_extension_lindbrook_center & U ! westwood_sporting_goods parking_36 & U ! utla_beauty westwood_sporting_goods F utla_beauty & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center U ! ucla_extension_lindbrook_center parking_36 & U ! parking_36 U parking_36 U ! parking_36 westwood_sporting_goods & U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods utla_beauty
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d
True Lmks: ('UCLA Extension - Lindbrook Center', 'Parking 36', 'Westwood Sporting Goods', 'UTLA Beauty')
Out Lmks:['UCLA Extension - Lindbrook Center', 'Parking 36', 'Westwood Sporting Goods', 'UTLA Beauty']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Parking 36', 'Westwood Sporting Goods', 'UTLA Beauty'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Parking 36': 'b', 'Westwood Sporting Goods': 'c', 'UTLA Beauty': 'd'}
Syntax Error

55
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: make your way to Stone Canyon Creek (underground), only after going to Westwood Wilshire, before that make your way to Westwood Wilshire, only after going to Mio Babbo's, before that make your way to Mio Babbo's, only after going to Yogurtland, do not go back to the previous location you have visited while heading to the next
True Ground LTL: & & U ! mio_babbos yogurtland & U ! westwood_wilshire mio_babbos & U ! stone_canyon_creek_underground westwood_wilshire F stone_canyon_creek_underground & U ! yogurtland U yogurtland U ! yogurtland mio_babbos & U ! mio_babbos U mio_babbos U ! mio_babbos westwood_wilshire U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire stone_canyon_creek_underground
Out Ground LTL: & & U ! mio_babbos yogurtland & U ! westwood_village mio_babbos & U ! stone_canyon_creek_underground westwood_village F stone_canyon_creek_underground & U ! yogurtland U yogurtland U ! yogurtland mio_babbos & U ! mio_babbos U mio_babbos U ! mio_babbos westwood_village & U ! westwood_village U westwood_village U ! westwood_village stone_canyon_creek_underground
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b d & U ! c b & U ! a c F a & U ! d U d U ! d b & U ! b U b U ! b c & U ! c U c U ! c a
True Lmks: ('Yogurtland', "Mio Babbo's", 'Westwood Wilshire', 'Stone Canyon Creek (underground)')
Out Lmks:['Stone Canyon Creek (underground)', 'Westwood Wilshire', "Mio Babbo's", 'Yogurtland']
Out Grounds: {'Stone Canyon Creek (underground)', "Mio Babbo's", 'Westwood Village', 'Yogurtland'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Mio Babbo's": 'b', 'Westwood Village': 'c', 'Yogurtland': 'd'}
RER or Grounding Error

56
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to TCT Foods, but do not visit Native Foods, Nature's Way Café, or Parking 32, and then go to Native Foods, but do not visit Nature's Way Café, or Parking 32, or revisit TCT Foods, and then go to Nature's Way Café, but do not visit Parking 32, or revisit TCT Foods, or Native Foods, and then go to Parking 32, but do not revisit TCT Foods, Native Foods, or Nature's Way Café
True Ground LTL: & & U ! native_foods tct_foods & U ! natures_way_café native_foods & U ! parking_32 natures_way_café F parking_32 & U ! tct_foods U tct_foods U ! tct_foods native_foods & U ! native_foods U native_foods U ! native_foods natures_way_café U ! natures_way_café U natures_way_café U ! natures_way_café parking_32
Out Ground LTL: & & U ! native_foods tct_foods & U ! natures_way_café native_foods & U ! parking_32 natures_way_café F parking_32 & U ! tct_foods U tct_foods U ! tct_foods native_foods & U ! native_foods U native_foods U ! native_foods natures_way_café & U ! natures_way_café U natures_way_café U ! natures_way_café parking_32
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! a c & U ! b a F b & U ! d U d U ! d c & U ! c U c U ! c a & U ! a U a U ! a b
True Lmks: ('TCT Foods', 'Native Foods', "Nature's Way Café", 'Parking 32')
Out Lmks:['TCT Foods', 'Parking 32', 'Native Foods', "Nature's Way Café"]
Out Grounds: {"Nature's Way Café", 'Parking 32', 'Native Foods', 'TCT Foods'}
Placeholder Map: {"Nature's Way Café": 'a', 'Parking 32': 'b', 'Native Foods': 'c', 'TCT Foods': 'd'}
Syntax Error

57
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Starbucks, but do not visit The Gayley Building, bibigo, or Denny's, and then go to The Gayley Building, but do not visit bibigo, or Denny's, or revisit Starbucks, and then go to bibigo, but do not visit Denny's, or revisit Starbucks, or The Gayley Building, and then go to Denny's, but do not revisit Starbucks, The Gayley Building, or bibigo
True Ground LTL: & & U ! the_gayley_building starbucks & U ! bibigo the_gayley_building & U ! dennys bibigo F dennys & U ! starbucks U starbucks U ! starbucks the_gayley_building & U ! the_gayley_building U the_gayley_building U ! the_gayley_building bibigo U ! bibigo U bibigo U ! bibigo dennys
Out Ground LTL: & & U ! the_gayley_building starbucks & U ! bibigo the_gayley_building & U ! dennys bibigo F dennys & U ! starbucks U starbucks U ! starbucks the_gayley_building & U ! the_gayley_building U the_gayley_building U ! the_gayley_building bibigo & U ! bibigo U bibigo U ! bibigo dennys
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! c d & U ! b c F b & U ! a U a U ! a d & U ! d U d U ! d c & U ! c U c U ! c b
True Lmks: ('Starbucks', 'The Gayley Building', 'bibigo', "Denny's")
Out Lmks:['Starbucks', "Denny's", 'bibigo', 'The Gayley Building']
Out Grounds: {'Starbucks', "Denny's", 'bibigo', 'The Gayley Building'}
Placeholder Map: {'Starbucks': 'a', "Denny's": 'b', 'bibigo': 'c', 'The Gayley Building': 'd'}
Syntax Error

58
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Plaza la Reina, London Cleaners, TCT Foods, and U-Mini, in this order without skipping any one of them do not revisit any one of them once after you have been there
True Ground LTL: & & U ! london_cleaners plaza_la_reina & U ! tct_foods london_cleaners & U ! u_mini tct_foods F u_mini & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners tct_foods U ! tct_foods U tct_foods U ! tct_foods u_mini
Out Ground LTL: & & U ! london_cleaners plaza_la_reina & U ! tct_foods london_cleaners & U ! u_mini tct_foods F u_mini & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners tct_foods & U ! tct_foods U tct_foods U ! tct_foods u_mini
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! a c & U ! d a F d & U ! b U b U ! b c & U ! c U c U ! c a & U ! a U a U ! a d
True Lmks: ('Plaza la Reina', 'London Cleaners', 'TCT Foods', 'U-Mini')
Out Lmks:['TCT Foods', 'Plaza la Reina', 'London Cleaners', 'U-Mini']
Out Grounds: {'TCT Foods', 'Plaza la Reina', 'London Cleaners', 'U-Mini'}
Placeholder Map: {'TCT Foods': 'a', 'Plaza la Reina': 'b', 'London Cleaners': 'c', 'U-Mini': 'd'}
Syntax Error

59
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit U-Mini, London Cleaners, bibigo, and Ike's Place, in this order without skipping any one of them do not revisit any one of them once after you have been there
True Ground LTL: & & U ! london_cleaners u_mini & U ! bibigo london_cleaners & U ! ikes_place bibigo F ikes_place & U ! u_mini U u_mini U ! u_mini london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners bibigo U ! bibigo U bibigo U ! bibigo ikes_place
Out Ground LTL: & & U ! london_cleaners u_mini & U ! bibigo london_cleaners & U ! ikes_place bibigo F ikes_place & U ! u_mini U u_mini U ! u_mini london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners bibigo & U ! bibigo U bibigo U ! bibigo ikes_place
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d
True Lmks: ('U-Mini', 'London Cleaners', 'bibigo', "Ike's Place")
Out Lmks:["Ike's Place", 'London Cleaners', 'bibigo', 'U-Mini']
Out Grounds: {'U-Mini', 'London Cleaners', 'bibigo', "Ike's Place"}
Placeholder Map: {'U-Mini': 'a', 'London Cleaners': 'b', 'bibigo': 'c', "Ike's Place": 'd'}
Syntax Error

60
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to TCT Foods, only once but keep away from Kinross Building South, Poke Bar, and U-Mini, and then go to Kinross Building South, only once but keep away from TCT Foods, Poke Bar, and U-Mini, and then go to Poke Bar, only once but keep way from TCT Foods, Kinross Building South, and U-Mini, and finally go to U-Mini, once but keep away from TCT Foods, Kinross Building South, and Poke Bar
True Ground LTL: & & U ! kinross_building_south tct_foods & U ! poke_bar kinross_building_south & U ! u_mini poke_bar F u_mini & U ! tct_foods U tct_foods U ! tct_foods kinross_building_south & U ! kinross_building_south U kinross_building_south U ! kinross_building_south poke_bar U ! poke_bar U poke_bar U ! poke_bar u_mini
Out Ground LTL: & & U ! kinross_building_south tct_foods & U ! poke_bar kinross_building_south & U ! u_mini poke_bar F u_mini & U ! tct_foods U tct_foods U ! tct_foods kinross_building_south & U ! kinross_building_south U kinross_building_south U ! kinross_building_south poke_bar & U ! poke_bar U poke_bar U ! poke_bar u_mini
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c F d & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d
True Lmks: ('TCT Foods', 'Kinross Building South', 'Poke Bar', 'U-Mini')
Out Lmks:['TCT Foods', 'Kinross Building South', 'Poke Bar', 'U-Mini']
Out Grounds: {'Kinross Building South', 'TCT Foods', 'Poke Bar', 'U-Mini'}
Placeholder Map: {'Kinross Building South': 'a', 'TCT Foods': 'b', 'Poke Bar': 'c', 'U-Mini': 'd'}
Syntax Error

61
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to UTLA Beauty, only once but keep away from Westwood's Village Square, TCT Foods, and Iso Fusion Café, and then go to Westwood's Village Square, only once but keep away from UTLA Beauty, TCT Foods, and Iso Fusion Café, and then go to TCT Foods, only once but keep way from UTLA Beauty, Westwood's Village Square, and Iso Fusion Café, and finally go to Iso Fusion Café, once but keep away from UTLA Beauty, Westwood's Village Square, and TCT Foods
True Ground LTL: & & U ! westwoods_village_square utla_beauty & U ! tct_foods westwoods_village_square & U ! iso_fusion_café tct_foods F iso_fusion_café & U ! utla_beauty U utla_beauty U ! utla_beauty westwoods_village_square & U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square tct_foods U ! tct_foods U tct_foods U ! tct_foods iso_fusion_café
Out Ground LTL: & & U ! westwood_village utla_beauty & U ! tct_foods westwood_village & U ! iso_fusion_café tct_foods F iso_fusion_café & U ! utla_beauty U utla_beauty U ! utla_beauty westwood_village & U ! westwood_village U westwood_village U ! westwood_village tct_foods & U ! tct_foods U tct_foods U ! tct_foods iso_fusion_café
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b d & U ! a b & U ! c a F c & U ! d U d U ! d b & U ! b U b U ! b a & U ! a U a U ! a c
True Lmks: ('UTLA Beauty', "Westwood's Village Square", 'TCT Foods', 'Iso Fusion Café')
Out Lmks:['TCT Foods', "Westwood's Village Square", 'Iso Fusion Café', 'UTLA Beauty']
Out Grounds: {'TCT Foods', 'Westwood Village', 'Iso Fusion Café', 'UTLA Beauty'}
Placeholder Map: {'TCT Foods': 'a', 'Westwood Village': 'b', 'Iso Fusion Café': 'c', 'UTLA Beauty': 'd'}
RER or Grounding Error

62
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Parking 32, one time but not through The Gayley Building, Noah's Bagels, or Subway, and then visit The Gayley Building, once but not through Parking 32, Noah's Bagels, or Subway, and then visit Noah's Bagels, once but not through Parking 32, The Gayley Building, or Subway, and then visit Subway, once but not through Parking 32, The Gayley Building, or Noah's Bagels
True Ground LTL: & & U ! the_gayley_building parking_32 & U ! noahs_bagels the_gayley_building & U ! subway noahs_bagels F subway & U ! parking_32 U parking_32 U ! parking_32 the_gayley_building & U ! the_gayley_building U the_gayley_building U ! the_gayley_building noahs_bagels U ! noahs_bagels U noahs_bagels U ! noahs_bagels subway
Out Ground LTL: & & U ! the_gayley_building parking_32 & U ! noahs_bagels the_gayley_building & U ! subway noahs_bagels F subway & U ! parking_32 U parking_32 U ! parking_32 the_gayley_building & U ! the_gayley_building U the_gayley_building U ! the_gayley_building noahs_bagels & U ! noahs_bagels U noahs_bagels U ! noahs_bagels subway
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! c d & U ! a c F a & U ! b U b U ! b d & U ! d U d U ! d c & U ! c U c U ! c a
True Lmks: ('Parking 32', 'The Gayley Building', "Noah's Bagels", 'Subway')
Out Lmks:['Subway', 'Parking 32', "Noah's Bagels", 'The Gayley Building']
Out Grounds: {'Subway', 'Parking 32', "Noah's Bagels", 'The Gayley Building'}
Placeholder Map: {'Subway': 'a', 'Parking 32': 'b', "Noah's Bagels": 'c', 'The Gayley Building': 'd'}
Syntax Error

63
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Stone Canyon Creek (underground), one time but not through Ike's Place, Westwood's Village Square, or Poke Bar, and then visit Ike's Place, once but not through Stone Canyon Creek (underground), Westwood's Village Square, or Poke Bar, and then visit Westwood's Village Square, once but not through Stone Canyon Creek (underground), Ike's Place, or Poke Bar, and then visit Poke Bar, once but not through Stone Canyon Creek (underground), Ike's Place, or Westwood's Village Square
True Ground LTL: & & U ! ikes_place stone_canyon_creek_underground & U ! westwoods_village_square ikes_place & U ! poke_bar westwoods_village_square F poke_bar & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground ikes_place & U ! ikes_place U ikes_place U ! ikes_place westwoods_village_square U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square poke_bar
Out Ground LTL: & & U ! ikes_place stone_canyon_creek_underground & U ! westwood_village ikes_place & U ! poke_bar westwood_village F poke_bar & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground ikes_place & U ! ikes_place U ikes_place U ! ikes_place westwood_village & U ! westwood_village U westwood_village U ! westwood_village poke_bar
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! b d & U ! c b F c & U ! a U a U ! a d & U ! d U d U ! d b & U ! b U b U ! b c
True Lmks: ('Stone Canyon Creek (underground)', "Ike's Place", "Westwood's Village Square", 'Poke Bar')
Out Lmks:['Stone Canyon Creek (underground)', "Westwood's Village Square", 'Poke Bar', "Ike's Place"]
Out Grounds: {'Stone Canyon Creek (underground)', 'Westwood Village', 'Poke Bar', "Ike's Place"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Westwood Village': 'b', 'Poke Bar': 'c', "Ike's Place": 'd'}
RER or Grounding Error

64
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: stay away from London Cleaners, Poke Bar, and Kinross Building South, until you make Denny's, single visit to Denny's, and then make your way to London Cleaners, while staying away from Denny's, Poke Bar, and Kinross Building South, and then make your way to Poke Bar, while staying away from Denny's, London Cleaners, or Kinross Building South, and finally make your way to Kinross Building South, while staying away from Denny's, London Cleaners, and Poke Bar
True Ground LTL: & & U ! london_cleaners dennys & U ! poke_bar london_cleaners & U ! kinross_building_south poke_bar F kinross_building_south & U ! dennys U dennys U ! dennys london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners poke_bar U ! poke_bar U poke_bar U ! poke_bar kinross_building_south
Out Ground LTL: & U ! london_cleaners dennys & U ! poke_bar london_cleaners & U ! kinross_building_south poke_bar F kinross_building_south
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & U ! c b & U ! d c & U ! a d F a
True Lmks: ("Denny's", 'London Cleaners', 'Poke Bar', 'Kinross Building South')
Out Lmks:['Kinross Building South', "Denny's", 'London Cleaners', 'Poke Bar']
Out Grounds: {'Kinross Building South', "Denny's", 'London Cleaners', 'Poke Bar'}
Placeholder Map: {'Kinross Building South': 'a', "Denny's": 'b', 'London Cleaners': 'c', 'Poke Bar': 'd'}
False

65
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: stay away from Ike's Place, bibigo, and UCLA Extension - Westwood Village Center, until you make Westwood Wilshire, single visit to Westwood Wilshire, and then make your way to Ike's Place, while staying away from Westwood Wilshire, bibigo, and UCLA Extension - Westwood Village Center, and then make your way to bibigo, while staying away from Westwood Wilshire, Ike's Place, or UCLA Extension - Westwood Village Center, and finally make your way to UCLA Extension - Westwood Village Center, while staying away from Westwood Wilshire, Ike's Place, and bibigo
True Ground LTL: & & U ! ikes_place westwood_wilshire & U ! bibigo ikes_place & U ! ucla_extension_westwood_village_center bibigo F ucla_extension_westwood_village_center & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire ikes_place & U ! ikes_place U ikes_place U ! ikes_place bibigo U ! bibigo U bibigo U ! bibigo ucla_extension_westwood_village_center
Out Ground LTL: & U ! bibigo ikes_place & U ! ucla_extension_westwood_village_center bibigo F ucla_extension_westwood_village_center
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & U ! c d & U ! a c F a
True Lmks: ('Westwood Wilshire', "Ike's Place", 'bibigo', 'UCLA Extension - Westwood Village Center')
Out Lmks:['UCLA Extension - Westwood Village Center', 'Westwood Wilshire', 'bibigo', "Ike's Place"]
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Westwood Village', 'bibigo', "Ike's Place"}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Westwood Village': 'b', 'bibigo': 'c', "Ike's Place": 'd'}
False

66
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: head to Poke Bar, Mio Babbo's, Noah's Bagels, and Westwood Wilshire, in this order without skipping or revisiting any one of them
True Ground LTL: & & U ! mio_babbos poke_bar & U ! noahs_bagels mio_babbos & U ! westwood_wilshire noahs_bagels F westwood_wilshire & U ! poke_bar U poke_bar U ! poke_bar mio_babbos & U ! mio_babbos U mio_babbos U ! mio_babbos noahs_bagels U ! noahs_bagels U noahs_bagels U ! noahs_bagels westwood_wilshire
Out Ground LTL: & & U ! mio_babbos poke_bar & U ! noahs_bagels mio_babbos & U ! westwood_village noahs_bagels F westwood_village & U ! poke_bar U poke_bar U ! poke_bar mio_babbos & U ! mio_babbos U mio_babbos U ! mio_babbos noahs_bagels & U ! noahs_bagels U noahs_bagels U ! noahs_bagels westwood_village
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b
True Lmks: ('Poke Bar', "Mio Babbo's", "Noah's Bagels", 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', "Mio Babbo's", 'Poke Bar', "Noah's Bagels"]
Out Grounds: {"Mio Babbo's", 'Westwood Village', 'Poke Bar', "Noah's Bagels"}
Placeholder Map: {"Mio Babbo's": 'a', 'Westwood Village': 'b', 'Poke Bar': 'c', "Noah's Bagels": 'd'}
RER or Grounding Error

67
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: head to Stone Canyon Creek (underground), Mongol BBQ, Novel Cafe Westwood, and Kinross Building South, in this order without skipping or revisiting any one of them
True Ground LTL: & & U ! mongol_bbq stone_canyon_creek_underground & U ! novel_cafe_westwood mongol_bbq & U ! kinross_building_south novel_cafe_westwood F kinross_building_south & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground mongol_bbq & U ! mongol_bbq U mongol_bbq U ! mongol_bbq novel_cafe_westwood U ! novel_cafe_westwood U novel_cafe_westwood U ! novel_cafe_westwood kinross_building_south
Out Ground LTL: & & U ! mongol_bbq stone_canyon_creek_underground & U ! novel_cafe_westwood mongol_bbq & U ! kinross_building_south novel_cafe_westwood F kinross_building_south & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground mongol_bbq & U ! mongol_bbq U mongol_bbq U ! mongol_bbq novel_cafe_westwood & U ! novel_cafe_westwood U novel_cafe_westwood U ! novel_cafe_westwood kinross_building_south
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! c d & U ! a c F a & U ! b U b U ! b d & U ! d U d U ! d c & U ! c U c U ! c a
True Lmks: ('Stone Canyon Creek (underground)', 'Mongol BBQ', 'Novel Cafe Westwood', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Stone Canyon Creek (underground)', 'Novel Cafe Westwood', 'Mongol BBQ']
Out Grounds: {'Kinross Building South', 'Stone Canyon Creek (underground)', 'Novel Cafe Westwood', 'Mongol BBQ'}
Placeholder Map: {'Kinross Building South': 'a', 'Stone Canyon Creek (underground)': 'b', 'Novel Cafe Westwood': 'c', 'Mongol BBQ': 'd'}
Syntax Error

68
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit each of Parking 36, Gayley & Lindbrook Apartments, Victoria's Secret, and The Gayley Building, exactly once in this order
True Ground LTL: & & U ! gayley_&_lindbrook_apartments parking_36 & U ! victorias_secret gayley_&_lindbrook_apartments & U ! the_gayley_building victorias_secret F the_gayley_building & U ! parking_36 U parking_36 U ! parking_36 gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments victorias_secret U ! victorias_secret U victorias_secret U ! victorias_secret the_gayley_building
Out Ground LTL: & & U ! gayley_&_lindbrook_apartments parking_36 & U ! victorias_secret gayley_&_lindbrook_apartments & U ! the_gayley_building victorias_secret F the_gayley_building & U ! parking_36 U parking_36 U ! parking_36 gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments victorias_secret & U ! victorias_secret U victorias_secret U ! victorias_secret the_gayley_building
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! a c & U ! d a F d & U ! b U b U ! b c & U ! c U c U ! c a & U ! a U a U ! a d
True Lmks: ('Parking 36', 'Gayley & Lindbrook Apartments', "Victoria's Secret", 'The Gayley Building')
Out Lmks:['Parking 36', "Victoria's Secret", 'Gayley & Lindbrook Apartments', 'The Gayley Building']
Out Grounds: {"Victoria's Secret", 'Parking 36', 'Gayley & Lindbrook Apartments', 'The Gayley Building'}
Placeholder Map: {"Victoria's Secret": 'a', 'Parking 36': 'b', 'Gayley & Lindbrook Apartments': 'c', 'The Gayley Building': 'd'}
Syntax Error

69
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit each of Westwood Wilshire, Denny's, Noah's Bagels, and Parking 36, exactly once in this order
True Ground LTL: & & U ! dennys westwood_wilshire & U ! noahs_bagels dennys & U ! parking_36 noahs_bagels F parking_36 & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire dennys & U ! dennys U dennys U ! dennys noahs_bagels U ! noahs_bagels U noahs_bagels U ! noahs_bagels parking_36
Out Ground LTL: & & U ! dennys westwood_village & U ! noahs_bagels dennys & U ! parking_36 noahs_bagels F parking_36 & U ! westwood_village U westwood_village U ! westwood_village dennys & U ! dennys U dennys U ! dennys noahs_bagels & U ! noahs_bagels U noahs_bagels U ! noahs_bagels parking_36
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! d c & U ! a d F a & U ! b U b U ! b c & U ! c U c U ! c d & U ! d U d U ! d a
True Lmks: ('Westwood Wilshire', "Denny's", "Noah's Bagels", 'Parking 36')
Out Lmks:['Parking 36', 'Westwood Wilshire', "Denny's", "Noah's Bagels"]
Out Grounds: {'Parking 36', 'Westwood Village', "Denny's", "Noah's Bagels"}
Placeholder Map: {'Parking 36': 'a', 'Westwood Village': 'b', "Denny's": 'c', "Noah's Bagels": 'd'}
RER or Grounding Error

70
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Peet's Coffee & Tea, but before visiting Peet's Coffee & Tea, you must visit Red Pelican Music, only after that visit The Gayley Building, after visiting The Gayley Building, visit Westwood Wilshire, visit each location once
True Ground LTL: & & U ! peets_coffee_&_tea red_pelican_music & U ! the_gayley_building peets_coffee_&_tea & U ! westwood_wilshire the_gayley_building F westwood_wilshire & U ! red_pelican_music U red_pelican_music U ! red_pelican_music peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea the_gayley_building U ! the_gayley_building U the_gayley_building U ! the_gayley_building westwood_wilshire
Out Ground LTL: & & U ! peets_coffee_&_tea red_pelican_music & U ! the_gayley_building peets_coffee_&_tea & U ! westwood_village the_gayley_building F westwood_village & U ! red_pelican_music U red_pelican_music U ! red_pelican_music peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea the_gayley_building U ! the_gayley_building U the_gayley_building U ! the_gayley_building westwood_village
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d U ! d U d U ! d b
True Lmks: ('Red Pelican Music', "Peet's Coffee & Tea", 'The Gayley Building', 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', "Peet's Coffee & Tea", 'Red Pelican Music', 'The Gayley Building']
Out Grounds: {"Peet's Coffee & Tea", 'Westwood Village', 'Red Pelican Music', 'The Gayley Building'}
Placeholder Map: {"Peet's Coffee & Tea": 'a', 'Westwood Village': 'b', 'Red Pelican Music': 'c', 'The Gayley Building': 'd'}
False

71
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Occidental Petroleum Heliport, but before visiting Occidental Petroleum Heliport, you must visit Nature's Way Café, only after that visit Peet's Coffee & Tea, after visiting Peet's Coffee & Tea, visit Kinross Building South, visit each location once
True Ground LTL: & & U ! occidental_petroleum_heliport natures_way_café & U ! peets_coffee_&_tea occidental_petroleum_heliport & U ! kinross_building_south peets_coffee_&_tea F kinross_building_south & U ! natures_way_café U natures_way_café U ! natures_way_café occidental_petroleum_heliport & U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport peets_coffee_&_tea U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea kinross_building_south
Out Ground LTL: & & U ! occidental_petroleum_heliport natures_way_café & U ! peets_coffee_&_tea occidental_petroleum_heliport & U ! kinross_building_south peets_coffee_&_tea F kinross_building_south & U ! natures_way_café U natures_way_café U ! natures_way_café occidental_petroleum_heliport & U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea kinross_building_south
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b d & U ! c b & U ! a c F a & U ! d U d U ! d b & U ! b U b U ! b c & U ! c U c U ! c a
True Lmks: ("Nature's Way Café", 'Occidental Petroleum Heliport', "Peet's Coffee & Tea", 'Kinross Building South')
Out Lmks:["Nature's Way Café", 'Occidental Petroleum Heliport', "Peet's Coffee & Tea", 'Kinross Building South']
Out Grounds: {'Kinross Building South', 'Occidental Petroleum Heliport', "Peet's Coffee & Tea", "Nature's Way Café"}
Placeholder Map: {'Kinross Building South': 'a', 'Occidental Petroleum Heliport': 'b', "Peet's Coffee & Tea": 'c', "Nature's Way Café": 'd'}
Syntax Error

72
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Gayley Center, only once while avoiding Village Center Newsstand, then visit Village Center Newsstand, once while avoiding TCT Foods, only after visiting TCT Foods, once visit The Gayley Building
True Ground LTL: & & U ! village_center_newsstand gayley_center & U ! tct_foods village_center_newsstand & U ! the_gayley_building tct_foods F the_gayley_building & U ! gayley_center U gayley_center U ! gayley_center village_center_newsstand & U ! village_center_newsstand U village_center_newsstand U ! village_center_newsstand tct_foods U ! tct_foods U tct_foods U ! tct_foods the_gayley_building
Out Ground LTL: & & U ! village_center_newsstand gayley_center & U ! tct_foods village_center_newsstand F tct_foods & U ! the_gayley_building U the_gayley_building U ! the_gayley_building village_center_newsstand U ! village_center_newsstand U village_center_newsstand U ! village_center_newsstand gayley_center
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! a d F a & U ! c U c U ! c d U ! d U d U ! d b
True Lmks: ('Gayley Center', 'Village Center Newsstand', 'TCT Foods', 'The Gayley Building')
Out Lmks:['TCT Foods', 'Gayley Center', 'The Gayley Building', 'Village Center Newsstand']
Out Grounds: {'TCT Foods', 'Gayley Center', 'The Gayley Building', 'Village Center Newsstand'}
Placeholder Map: {'TCT Foods': 'a', 'Gayley Center': 'b', 'The Gayley Building': 'c', 'Village Center Newsstand': 'd'}
False

73
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Denny's, only once while avoiding London Cleaners, then visit London Cleaners, once while avoiding Peet's Coffee & Tea, only after visiting Peet's Coffee & Tea, once visit Noah's Bagels
True Ground LTL: & & U ! london_cleaners dennys & U ! peets_coffee_&_tea london_cleaners & U ! noahs_bagels peets_coffee_&_tea F noahs_bagels & U ! dennys U dennys U ! dennys london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners peets_coffee_&_tea U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea noahs_bagels
Out Ground LTL: & & U ! london_cleaners dennys & U ! peets_coffee_&_tea london_cleaners F peets_coffee_&_tea & U ! noahs_bagels U noahs_bagels U ! noahs_bagels london_cleaners U ! london_cleaners U london_cleaners U ! london_cleaners dennys
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! a c F a & U ! d U d U ! d c U ! c U c U ! c b
True Lmks: ("Denny's", 'London Cleaners', "Peet's Coffee & Tea", "Noah's Bagels")
Out Lmks:["Peet's Coffee & Tea", "Denny's", 'London Cleaners', "Noah's Bagels"]
Out Grounds: {"Peet's Coffee & Tea", "Denny's", 'London Cleaners', "Noah's Bagels"}
Placeholder Map: {"Peet's Coffee & Tea": 'a', "Denny's": 'b', 'London Cleaners': 'c', "Noah's Bagels": 'd'}
False

74
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Parking 36, Kinross Building South, The Gayley Building, Mio Babbo's, once do not visit Kinross Building South, without visiting Parking 36, and do not visit Kinross Building South, without visiting The Gayley Building, do not visit Mio Babbo's, without visiting The Gayley Building
True Ground LTL: & & U ! kinross_building_south parking_36 & U ! the_gayley_building kinross_building_south & U ! mio_babbos the_gayley_building F mio_babbos & U ! parking_36 U parking_36 U ! parking_36 kinross_building_south & U ! kinross_building_south U kinross_building_south U ! kinross_building_south the_gayley_building U ! the_gayley_building U the_gayley_building U ! the_gayley_building mio_babbos
Out Ground LTL: & & U ! kinross_building_south parking_36 & U ! the_gayley_building kinross_building_south & U ! mio_babbos the_gayley_building F mio_babbos & U ! parking_36 U parking_36 U ! parking_36 kinross_building_south & U ! kinross_building_south U kinross_building_south U ! kinross_building_south the_gayley_building U ! the_gayley_building U the_gayley_building U ! the_gayley_building mio_babbos
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! d a & U ! c d F c & U ! b U b U ! b a & U ! a U a U ! a d U ! d U d U ! d c
True Lmks: ('Parking 36', 'Kinross Building South', 'The Gayley Building', "Mio Babbo's")
Out Lmks:['Kinross Building South', 'Parking 36', "Mio Babbo's", 'The Gayley Building']
Out Grounds: {'Kinross Building South', 'Parking 36', "Mio Babbo's", 'The Gayley Building'}
Placeholder Map: {'Kinross Building South': 'a', 'Parking 36': 'b', "Mio Babbo's": 'c', 'The Gayley Building': 'd'}
True

75
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Subway, Nature's Way Café, Red Pelican Music, Urban Outfitters, once do not visit Nature's Way Café, without visiting Subway, and do not visit Nature's Way Café, without visiting Red Pelican Music, do not visit Urban Outfitters, without visiting Red Pelican Music
True Ground LTL: & & U ! natures_way_café subway & U ! red_pelican_music natures_way_café & U ! urban_outfitters red_pelican_music F urban_outfitters & U ! subway U subway U ! subway natures_way_café & U ! natures_way_café U natures_way_café U ! natures_way_café red_pelican_music U ! red_pelican_music U red_pelican_music U ! red_pelican_music urban_outfitters
Out Ground LTL: & & U ! natures_way_café subway & U ! red_pelican_music natures_way_café & U ! urban_outfitters red_pelican_music F urban_outfitters & U ! subway U subway U ! subway natures_way_café & U ! natures_way_café U natures_way_café U ! natures_way_café red_pelican_music U ! red_pelican_music U red_pelican_music U ! red_pelican_music urban_outfitters
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! d a & U ! c d F c & U ! b U b U ! b a & U ! a U a U ! a d U ! d U d U ! d c
True Lmks: ('Subway', "Nature's Way Café", 'Red Pelican Music', 'Urban Outfitters')
Out Lmks:["Nature's Way Café", 'Urban Outfitters', 'Subway', 'Red Pelican Music']
Out Grounds: {"Nature's Way Café", 'Subway', 'Urban Outfitters', 'Red Pelican Music'}
Placeholder Map: {"Nature's Way Café": 'a', 'Subway': 'b', 'Urban Outfitters': 'c', 'Red Pelican Music': 'd'}
True

76
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Poke Bar, then Novel Cafe Westwood, then Starbucks, then Plaza la Reina, follow this strict order and visit each location only once
True Ground LTL: & & U ! novel_cafe_westwood poke_bar & U ! starbucks novel_cafe_westwood & U ! plaza_la_reina starbucks F plaza_la_reina & U ! poke_bar U poke_bar U ! poke_bar novel_cafe_westwood & U ! novel_cafe_westwood U novel_cafe_westwood U ! novel_cafe_westwood starbucks U ! starbucks U starbucks U ! starbucks plaza_la_reina
Out Ground LTL: & & U ! novel_cafe_westwood poke_bar & U ! starbucks novel_cafe_westwood & U ! plaza_la_reina starbucks F plaza_la_reina & U ! poke_bar U poke_bar U ! poke_bar novel_cafe_westwood & U ! novel_cafe_westwood U novel_cafe_westwood U ! novel_cafe_westwood starbucks & U ! starbucks U starbucks U ! starbucks plaza_la_reina
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! a b & U ! d a F d & U ! c U c U ! c b & U ! b U b U ! b a & U ! a U a U ! a d
True Lmks: ('Poke Bar', 'Novel Cafe Westwood', 'Starbucks', 'Plaza la Reina')
Out Lmks:['Starbucks', 'Novel Cafe Westwood', 'Poke Bar', 'Plaza la Reina']
Out Grounds: {'Starbucks', 'Novel Cafe Westwood', 'Poke Bar', 'Plaza la Reina'}
Placeholder Map: {'Starbucks': 'a', 'Novel Cafe Westwood': 'b', 'Poke Bar': 'c', 'Plaza la Reina': 'd'}
Syntax Error

77
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit UTLA Beauty, then Peet's Coffee & Tea, then Victoria's Secret, then London Cleaners, follow this strict order and visit each location only once
True Ground LTL: & & U ! peets_coffee_&_tea utla_beauty & U ! victorias_secret peets_coffee_&_tea & U ! london_cleaners victorias_secret F london_cleaners & U ! utla_beauty U utla_beauty U ! utla_beauty peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea victorias_secret U ! victorias_secret U victorias_secret U ! victorias_secret london_cleaners
Out Ground LTL: & & U ! peets_coffee_&_tea utla_beauty & U ! victorias_secret peets_coffee_&_tea & U ! london_cleaners victorias_secret F london_cleaners & U ! utla_beauty U utla_beauty U ! utla_beauty peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea victorias_secret & U ! victorias_secret U victorias_secret U ! victorias_secret london_cleaners
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! b a & U ! c b F c & U ! d U d U ! d a & U ! a U a U ! a b & U ! b U b U ! b c
True Lmks: ('UTLA Beauty', "Peet's Coffee & Tea", "Victoria's Secret", 'London Cleaners')
Out Lmks:["Peet's Coffee & Tea", "Victoria's Secret", 'London Cleaners', 'UTLA Beauty']
Out Grounds: {"Peet's Coffee & Tea", "Victoria's Secret", 'London Cleaners', 'UTLA Beauty'}
Placeholder Map: {"Peet's Coffee & Tea": 'a', "Victoria's Secret": 'b', 'London Cleaners': 'c', 'UTLA Beauty': 'd'}
Syntax Error

78
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: please go to Iso Fusion Café, then Village Center Newsstand, then London Cleaners, then Plaza la Reina, in that specific order without revisiting previously visited location
True Ground LTL: & & U ! village_center_newsstand iso_fusion_café & U ! london_cleaners village_center_newsstand & U ! plaza_la_reina london_cleaners F plaza_la_reina & U ! iso_fusion_café U iso_fusion_café U ! iso_fusion_café village_center_newsstand & U ! village_center_newsstand U village_center_newsstand U ! village_center_newsstand london_cleaners U ! london_cleaners U london_cleaners U ! london_cleaners plaza_la_reina
Out Ground LTL: & & U ! village_center_newsstand iso_fusion_café & U ! london_cleaners village_center_newsstand & U ! plaza_la_reina london_cleaners F plaza_la_reina & U ! iso_fusion_café U iso_fusion_café U ! iso_fusion_café village_center_newsstand & U ! village_center_newsstand U village_center_newsstand U ! village_center_newsstand london_cleaners & U ! london_cleaners U london_cleaners U ! london_cleaners plaza_la_reina
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d c & U ! b d & U ! a b F a & U ! c U c U ! c d & U ! d U d U ! d b & U ! b U b U ! b a
True Lmks: ('Iso Fusion Café', 'Village Center Newsstand', 'London Cleaners', 'Plaza la Reina')
Out Lmks:['Plaza la Reina', 'London Cleaners', 'Iso Fusion Café', 'Village Center Newsstand']
Out Grounds: {'Plaza la Reina', 'London Cleaners', 'Iso Fusion Café', 'Village Center Newsstand'}
Placeholder Map: {'Plaza la Reina': 'a', 'London Cleaners': 'b', 'Iso Fusion Café': 'c', 'Village Center Newsstand': 'd'}
Syntax Error

79
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: please go to Plaza la Reina, then Subway, then Westwood's Village Square, then Gayley Center, in that specific order without revisiting previously visited location
True Ground LTL: & & U ! subway plaza_la_reina & U ! westwoods_village_square subway & U ! gayley_center westwoods_village_square F gayley_center & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina subway & U ! subway U subway U ! subway westwoods_village_square U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square gayley_center
Out Ground LTL: & & U ! subway plaza_la_reina & U ! westwood_village subway & U ! gayley_center westwood_village F gayley_center & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina subway & U ! subway U subway U ! subway westwood_village & U ! westwood_village U westwood_village U ! westwood_village gayley_center
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c F d & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d
True Lmks: ('Plaza la Reina', 'Subway', "Westwood's Village Square", 'Gayley Center')
Out Lmks:['Gayley Center', 'Plaza la Reina', "Westwood's Village Square", 'Subway']
Out Grounds: {'Subway', 'Plaza la Reina', 'Westwood Village', 'Gayley Center'}
Placeholder Map: {'Subway': 'a', 'Plaza la Reina': 'b', 'Westwood Village': 'c', 'Gayley Center': 'd'}
RER or Grounding Error

80
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to UTLA Beauty, once without visiting Iso Fusion Café, then go to Iso Fusion Café, once without visiting Westwood Sporting Goods, then go to Westwood Sporting Goods, once without visiting Victoria's Secret, finally go to Victoria's Secret
True Ground LTL: & & U ! iso_fusion_café utla_beauty & U ! westwood_sporting_goods iso_fusion_café & U ! victorias_secret westwood_sporting_goods F victorias_secret & U ! utla_beauty U utla_beauty U ! utla_beauty iso_fusion_café & U ! iso_fusion_café U iso_fusion_café U ! iso_fusion_café westwood_sporting_goods U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods victorias_secret
Out Ground LTL: & & U ! iso_fusion_café utla_beauty & U ! westwood_sporting_goods iso_fusion_café & U ! victorias_secret westwood_sporting_goods F victorias_secret & U ! utla_beauty U utla_beauty U ! utla_beauty iso_fusion_café & U ! iso_fusion_café U iso_fusion_café U ! iso_fusion_café westwood_sporting_goods & U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods victorias_secret
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! c a & U ! b c F b & U ! d U d U ! d a & U ! a U a U ! a c & U ! c U c U ! c b
True Lmks: ('UTLA Beauty', 'Iso Fusion Café', 'Westwood Sporting Goods', "Victoria's Secret")
Out Lmks:['Westwood Sporting Goods', "Victoria's Secret", 'Iso Fusion Café', 'UTLA Beauty']
Out Grounds: {'Iso Fusion Café', "Victoria's Secret", 'Westwood Sporting Goods', 'UTLA Beauty'}
Placeholder Map: {'Iso Fusion Café': 'a', "Victoria's Secret": 'b', 'Westwood Sporting Goods': 'c', 'UTLA Beauty': 'd'}
Syntax Error

81
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Subway, once without visiting Janss Dome, then go to Janss Dome, once without visiting Mongol BBQ, then go to Mongol BBQ, once without visiting UCLA Extension - Westwood Village Center, finally go to UCLA Extension - Westwood Village Center
True Ground LTL: & & U ! janss_dome subway & U ! mongol_bbq janss_dome & U ! ucla_extension_westwood_village_center mongol_bbq F ucla_extension_westwood_village_center & U ! subway U subway U ! subway janss_dome & U ! janss_dome U janss_dome U ! janss_dome mongol_bbq U ! mongol_bbq U mongol_bbq U ! mongol_bbq ucla_extension_westwood_village_center
Out Ground LTL: & & U ! janss_dome subway & U ! mongol_bbq janss_dome & U ! ucla_extension_westwood_village_center mongol_bbq F ucla_extension_westwood_village_center & U ! subway U subway U ! subway janss_dome & U ! janss_dome U janss_dome U ! janss_dome mongol_bbq & U ! mongol_bbq U mongol_bbq U ! mongol_bbq ucla_extension_westwood_village_center
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! c a & U ! b c F b & U ! d U d U ! d a & U ! a U a U ! a c & U ! c U c U ! c b
True Lmks: ('Subway', 'Janss Dome', 'Mongol BBQ', 'UCLA Extension - Westwood Village Center')
Out Lmks:['Janss Dome', 'UCLA Extension - Westwood Village Center', 'Mongol BBQ', 'Subway']
Out Grounds: {'Janss Dome', 'UCLA Extension - Westwood Village Center', 'Mongol BBQ', 'Subway'}
Placeholder Map: {'Janss Dome': 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Mongol BBQ': 'c', 'Subway': 'd'}
Syntax Error

82
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Gayley & Lindbrook Apartments, once then go to Westwood Wilshire, once while avoiding Mio Babbo's, then go to Mio Babbo's, once while avoiding U-Mini, finally go to U-Mini
True Ground LTL: & & U ! westwood_wilshire gayley_&_lindbrook_apartments & U ! mio_babbos westwood_wilshire & U ! u_mini mio_babbos F u_mini & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments westwood_wilshire & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire mio_babbos U ! mio_babbos U mio_babbos U ! mio_babbos u_mini
Out Ground LTL: & & U ! westwood_village gayley_&_lindbrook_apartments & U ! mio_babbos westwood_village & U ! u_mini mio_babbos F u_mini & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments westwood_village & U ! westwood_village U westwood_village U ! westwood_village mio_babbos U ! mio_babbos U mio_babbos U ! mio_babbos u_mini
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! a b & U ! d a F d & U ! c U c U ! c b & U ! b U b U ! b a U ! a U a U ! a d
True Lmks: ('Gayley & Lindbrook Apartments', 'Westwood Wilshire', "Mio Babbo's", 'U-Mini')
Out Lmks:['Westwood Wilshire', "Mio Babbo's", 'Gayley & Lindbrook Apartments', 'U-Mini']
Out Grounds: {"Mio Babbo's", 'Westwood Village', 'Gayley & Lindbrook Apartments', 'U-Mini'}
Placeholder Map: {"Mio Babbo's": 'a', 'Westwood Village': 'b', 'Gayley & Lindbrook Apartments': 'c', 'U-Mini': 'd'}
False

83
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Westwood Sporting Goods, once then go to Gayley & Lindbrook Apartments, once while avoiding Janss Dome, then go to Janss Dome, once while avoiding Peet's Coffee & Tea, finally go to Peet's Coffee & Tea
True Ground LTL: & & U ! gayley_&_lindbrook_apartments westwood_sporting_goods & U ! janss_dome gayley_&_lindbrook_apartments & U ! peets_coffee_&_tea janss_dome F peets_coffee_&_tea & U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments janss_dome U ! janss_dome U janss_dome U ! janss_dome peets_coffee_&_tea
Out Ground LTL: & & U ! gayley_&_lindbrook_apartments westwood_sporting_goods & U ! janss_dome gayley_&_lindbrook_apartments & U ! peets_coffee_&_tea janss_dome F peets_coffee_&_tea & U ! westwood_sporting_goods U westwood_sporting_goods U ! westwood_sporting_goods gayley_&_lindbrook_apartments & U ! gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments janss_dome U ! janss_dome U janss_dome U ! janss_dome peets_coffee_&_tea
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! a c & U ! b a F b & U ! d U d U ! d c & U ! c U c U ! c a U ! a U a U ! a b
True Lmks: ('Westwood Sporting Goods', 'Gayley & Lindbrook Apartments', 'Janss Dome', "Peet's Coffee & Tea")
Out Lmks:['Janss Dome', "Peet's Coffee & Tea", 'Gayley & Lindbrook Apartments', 'Westwood Sporting Goods']
Out Grounds: {'Janss Dome', "Peet's Coffee & Tea", 'Gayley & Lindbrook Apartments', 'Westwood Sporting Goods'}
Placeholder Map: {'Janss Dome': 'a', "Peet's Coffee & Tea": 'b', 'Gayley & Lindbrook Apartments': 'c', 'Westwood Sporting Goods': 'd'}
True

84
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Westwood Wilshire, without visiting Poke Bar, then go to Poke Bar, without visiting Janss Dome, then go to Janss Dome, without visiting Yogurtland, finally go to Yogurtland, while only visiting each location once
True Ground LTL: & & U ! poke_bar westwood_wilshire & U ! janss_dome poke_bar & U ! yogurtland janss_dome F yogurtland & U ! westwood_wilshire U westwood_wilshire U ! westwood_wilshire poke_bar & U ! poke_bar U poke_bar U ! poke_bar janss_dome U ! janss_dome U janss_dome U ! janss_dome yogurtland
Out Ground LTL: & & U ! poke_bar westwood_village & U ! janss_dome poke_bar & U ! yogurtland janss_dome F yogurtland & U ! westwood_village U westwood_village U ! westwood_village poke_bar & U ! poke_bar U poke_bar U ! poke_bar janss_dome & U ! janss_dome U janss_dome U ! janss_dome yogurtland
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! a d & U ! c a F c & U ! b U b U ! b d & U ! d U d U ! d a & U ! a U a U ! a c
True Lmks: ('Westwood Wilshire', 'Poke Bar', 'Janss Dome', 'Yogurtland')
Out Lmks:['Janss Dome', 'Westwood Wilshire', 'Yogurtland', 'Poke Bar']
Out Grounds: {'Janss Dome', 'Westwood Village', 'Yogurtland', 'Poke Bar'}
Placeholder Map: {'Janss Dome': 'a', 'Westwood Village': 'b', 'Yogurtland': 'c', 'Poke Bar': 'd'}
RER or Grounding Error

85
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Mio Babbo's, without visiting Stone Canyon Creek (underground), then go to Stone Canyon Creek (underground), without visiting Peet's Coffee & Tea, then go to Peet's Coffee & Tea, without visiting UCLA Extension - Lindbrook Center, finally go to UCLA Extension - Lindbrook Center, while only visiting each location once
True Ground LTL: & & U ! stone_canyon_creek_underground mio_babbos & U ! peets_coffee_&_tea stone_canyon_creek_underground & U ! ucla_extension_lindbrook_center peets_coffee_&_tea F ucla_extension_lindbrook_center & U ! mio_babbos U mio_babbos U ! mio_babbos stone_canyon_creek_underground & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground peets_coffee_&_tea U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea ucla_extension_lindbrook_center
Out Ground LTL: & & U ! stone_canyon_creek_underground mio_babbos & U ! peets_coffee_&_tea stone_canyon_creek_underground & U ! ucla_extension_lindbrook_center peets_coffee_&_tea F ucla_extension_lindbrook_center & U ! mio_babbos U mio_babbos U ! mio_babbos stone_canyon_creek_underground & U ! stone_canyon_creek_underground U stone_canyon_creek_underground U ! stone_canyon_creek_underground peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea ucla_extension_lindbrook_center
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b d & U ! c b & U ! a c F a & U ! d U d U ! d b & U ! b U b U ! b c & U ! c U c U ! c a
True Lmks: ("Mio Babbo's", 'Stone Canyon Creek (underground)', "Peet's Coffee & Tea", 'UCLA Extension - Lindbrook Center')
Out Lmks:["Peet's Coffee & Tea", 'Stone Canyon Creek (underground)', "Mio Babbo's", 'UCLA Extension - Lindbrook Center']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Stone Canyon Creek (underground)', "Peet's Coffee & Tea", "Mio Babbo's"}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Stone Canyon Creek (underground)': 'b', "Peet's Coffee & Tea": 'c', "Mio Babbo's": 'd'}
Syntax Error

86
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Westwood's Village Square, then Ike's Place, then Poke Bar, and then Occidental Petroleum Heliport, in that strict order without returning to previously visited locations
True Ground LTL: & & U ! ikes_place westwoods_village_square & U ! poke_bar ikes_place & U ! occidental_petroleum_heliport poke_bar F occidental_petroleum_heliport & U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square ikes_place & U ! ikes_place U ikes_place U ! ikes_place poke_bar U ! poke_bar U poke_bar U ! poke_bar occidental_petroleum_heliport
Out Ground LTL: & & U ! ikes_place westwood_village & U ! poke_bar ikes_place & U ! occidental_petroleum_heliport poke_bar F occidental_petroleum_heliport & U ! westwood_village U westwood_village U ! westwood_village ikes_place & U ! ikes_place U ikes_place U ! ikes_place poke_bar & U ! poke_bar U poke_bar U ! poke_bar occidental_petroleum_heliport
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! c d & U ! a c F a & U ! b U b U ! b d & U ! d U d U ! d c & U ! c U c U ! c a
True Lmks: ("Westwood's Village Square", "Ike's Place", 'Poke Bar', 'Occidental Petroleum Heliport')
Out Lmks:['Occidental Petroleum Heliport', "Westwood's Village Square", 'Poke Bar', "Ike's Place"]
Out Grounds: {'Occidental Petroleum Heliport', 'Westwood Village', 'Poke Bar', "Ike's Place"}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Westwood Village': 'b', 'Poke Bar': 'c', "Ike's Place": 'd'}
RER or Grounding Error

87
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Plaza la Reina, then Westwood's Village Square, then Noah's Bagels, and then 800 Degrees, in that strict order without returning to previously visited locations
True Ground LTL: & & U ! westwoods_village_square plaza_la_reina & U ! noahs_bagels westwoods_village_square & U ! 800_degrees noahs_bagels F 800_degrees & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina westwoods_village_square & U ! westwoods_village_square U westwoods_village_square U ! westwoods_village_square noahs_bagels U ! noahs_bagels U noahs_bagels U ! noahs_bagels 800_degrees
Out Ground LTL: & & U ! westwood_village plaza_la_reina & U ! noahs_bagels westwood_village & U ! 800_degrees noahs_bagels F 800_degrees & U ! plaza_la_reina U plaza_la_reina U ! plaza_la_reina westwood_village & U ! westwood_village U westwood_village U ! westwood_village noahs_bagels & U ! noahs_bagels U noahs_bagels U ! noahs_bagels 800_degrees
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! d b & U ! c d F c & U ! a U a U ! a b & U ! b U b U ! b d & U ! d U d U ! d c
True Lmks: ('Plaza la Reina', "Westwood's Village Square", "Noah's Bagels", '800 Degrees')
Out Lmks:['Plaza la Reina', '800 Degrees', "Westwood's Village Square", "Noah's Bagels"]
Out Grounds: {'Plaza la Reina', 'Westwood Village', '800 Degrees', "Noah's Bagels"}
Placeholder Map: {'Plaza la Reina': 'a', 'Westwood Village': 'b', '800 Degrees': 'c', "Noah's Bagels": 'd'}
RER or Grounding Error

88
patrolling ['a', 'b', 'c', 'd'] Input utterance: never stop visiting Subway, Westwood's Village Square, Mongol BBQ, and Starbucks
True Ground LTL: & G F subway & G F westwoods_village_square & G F mongol_bbq G F starbucks
Out Ground LTL: & G F subway & G F westwood_village & G F mongol_bbq G F starbucks
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F a G F b
True Lmks: ('Subway', "Westwood's Village Square", 'Mongol BBQ', 'Starbucks')
Out Lmks:['Starbucks', "Westwood's Village Square", 'Mongol BBQ', 'Subway']
Out Grounds: {'Mongol BBQ', 'Starbucks', 'Westwood Village', 'Subway'}
Placeholder Map: {'Mongol BBQ': 'a', 'Starbucks': 'b', 'Westwood Village': 'c', 'Subway': 'd'}
False

89
patrolling ['a', 'b', 'c', 'd'] Input utterance: never stop visiting Noah's Bagels, Novel Cafe Westwood, Yogurtland, and Iso Fusion Café
True Ground LTL: & G F noahs_bagels & G F novel_cafe_westwood & G F yogurtland G F iso_fusion_café
Out Ground LTL: & G F noahs_bagels & G F novel_cafe_westwood & G F yogurtland G F iso_fusion_café
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F b G F c
True Lmks: ("Noah's Bagels", 'Novel Cafe Westwood', 'Yogurtland', 'Iso Fusion Café')
Out Lmks:['Novel Cafe Westwood', 'Yogurtland', 'Iso Fusion Café', "Noah's Bagels"]
Out Grounds: {'Novel Cafe Westwood', 'Yogurtland', 'Iso Fusion Café', "Noah's Bagels"}
Placeholder Map: {'Novel Cafe Westwood': 'a', 'Yogurtland': 'b', 'Iso Fusion Café': 'c', "Noah's Bagels": 'd'}
True

90
patrolling ['a', 'b', 'c', 'd'] Input utterance: frequent Parking 32, Veggie Grill, Urban Outfitters, and UTLA Beauty, infinitely in any order
True Ground LTL: & G F parking_32 & G F veggie_grill & G F urban_outfitters G F utla_beauty
Out Ground LTL: & G F parking_32 & G F veggie_grill & G F urban_outfitters G F utla_beauty
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F c G F d
True Lmks: ('Parking 32', 'Veggie Grill', 'Urban Outfitters', 'UTLA Beauty')
Out Lmks:['Parking 32', 'Veggie Grill', 'Urban Outfitters', 'UTLA Beauty']
Out Grounds: {'Parking 32', 'Veggie Grill', 'Urban Outfitters', 'UTLA Beauty'}
Placeholder Map: {'Parking 32': 'a', 'Veggie Grill': 'b', 'Urban Outfitters': 'c', 'UTLA Beauty': 'd'}
True

91
patrolling ['a', 'b', 'c', 'd'] Input utterance: frequent Westwood Wilshire, Starbucks, 800 Degrees, and Westwood Sporting Goods, infinitely in any order
True Ground LTL: & G F westwood_wilshire & G F starbucks & G F 800_degrees G F westwood_sporting_goods
Out Ground LTL: & G F westwood_village & G F starbucks & G F 800_degrees G F westwood_sporting_goods
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F c G F d
True Lmks: ('Westwood Wilshire', 'Starbucks', '800 Degrees', 'Westwood Sporting Goods')
Out Lmks:['Starbucks', 'Westwood Wilshire', '800 Degrees', 'Westwood Sporting Goods']
Out Grounds: {'Starbucks', 'Westwood Village', '800 Degrees', 'Westwood Sporting Goods'}
Placeholder Map: {'Starbucks': 'a', 'Westwood Village': 'b', '800 Degrees': 'c', 'Westwood Sporting Goods': 'd'}
RER or Grounding Error

92
patrolling ['a', 'b', 'c', 'd'] Input utterance: please keep visiting Occidental Petroleum Heliport, UTLA Beauty, Kinross Building South, and Starbucks, without stopping
True Ground LTL: & G F occidental_petroleum_heliport & G F utla_beauty & G F kinross_building_south G F starbucks
Out Ground LTL: & G F occidental_petroleum_heliport & G F utla_beauty & G F kinross_building_south G F starbucks
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F a G F c
True Lmks: ('Occidental Petroleum Heliport', 'UTLA Beauty', 'Kinross Building South', 'Starbucks')
Out Lmks:['Kinross Building South', 'Occidental Petroleum Heliport', 'Starbucks', 'UTLA Beauty']
Out Grounds: {'Kinross Building South', 'Occidental Petroleum Heliport', 'Starbucks', 'UTLA Beauty'}
Placeholder Map: {'Kinross Building South': 'a', 'Occidental Petroleum Heliport': 'b', 'Starbucks': 'c', 'UTLA Beauty': 'd'}
True

93
patrolling ['a', 'b', 'c', 'd'] Input utterance: please keep visiting bibigo, Plaza la Reina, Village Center Newsstand, and Gayley & Lindbrook Apartments, without stopping
True Ground LTL: & G F bibigo & G F plaza_la_reina & G F village_center_newsstand G F gayley_&_lindbrook_apartments
Out Ground LTL: & G F bibigo & G F plaza_la_reina & G F village_center_newsstand G F gayley_&_lindbrook_apartments
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F d G F b
True Lmks: ('bibigo', 'Plaza la Reina', 'Village Center Newsstand', 'Gayley & Lindbrook Apartments')
Out Lmks:['Gayley & Lindbrook Apartments', 'Plaza la Reina', 'bibigo', 'Village Center Newsstand']
Out Grounds: {'Plaza la Reina', 'Gayley & Lindbrook Apartments', 'bibigo', 'Village Center Newsstand'}
Placeholder Map: {'Plaza la Reina': 'a', 'Gayley & Lindbrook Apartments': 'b', 'bibigo': 'c', 'Village Center Newsstand': 'd'}
True

94
patrolling ['a', 'b', 'c', 'd'] Input utterance: make sure TCT Foods, Denny's, Westwood Sporting Goods, and Mongol BBQ, are visited infinitely
True Ground LTL: & G F tct_foods & G F dennys & G F westwood_sporting_goods G F mongol_bbq
Out Ground LTL: & G F tct_foods & G F dennys & G F westwood_sporting_goods G F mongol_bbq
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F d G F b
True Lmks: ('TCT Foods', "Denny's", 'Westwood Sporting Goods', 'Mongol BBQ')
Out Lmks:['TCT Foods', 'Mongol BBQ', "Denny's", 'Westwood Sporting Goods']
Out Grounds: {'TCT Foods', 'Mongol BBQ', "Denny's", 'Westwood Sporting Goods'}
Placeholder Map: {'TCT Foods': 'a', 'Mongol BBQ': 'b', "Denny's": 'c', 'Westwood Sporting Goods': 'd'}
True

95
patrolling ['a', 'b', 'c', 'd'] Input utterance: make sure Westwood Wilshire, UCLA Extension - Lindbrook Center, Noah's Bagels, and Plaza la Reina, are visited infinitely
True Ground LTL: & G F westwood_wilshire & G F ucla_extension_lindbrook_center & G F noahs_bagels G F plaza_la_reina
Out Ground LTL: & G F westwood_village & G F ucla_extension_lindbrook_center & G F noahs_bagels G F plaza_la_reina
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F d G F b
True Lmks: ('Westwood Wilshire', 'UCLA Extension - Lindbrook Center', "Noah's Bagels", 'Plaza la Reina')
Out Lmks:['UCLA Extension - Lindbrook Center', 'Westwood Wilshire', 'Plaza la Reina', "Noah's Bagels"]
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Plaza la Reina', 'Westwood Village', "Noah's Bagels"}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Plaza la Reina': 'b', 'Westwood Village': 'c', "Noah's Bagels": 'd'}
False

96
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Novel Cafe Westwood, Gayley & Lindbrook Apartments, Ike's Place, and Veggie Grill, in any order
True Ground LTL: & G F novel_cafe_westwood & G F gayley_&_lindbrook_apartments & G F ikes_place G F veggie_grill
Out Ground LTL: & G F novel_cafe_westwood & G F gayley_&_lindbrook_apartments & G F ikes_place G F veggie_grill
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F d G F b
True Lmks: ('Novel Cafe Westwood', 'Gayley & Lindbrook Apartments', "Ike's Place", 'Veggie Grill')
Out Lmks:['Novel Cafe Westwood', 'Veggie Grill', 'Gayley & Lindbrook Apartments', "Ike's Place"]
Out Grounds: {'Novel Cafe Westwood', 'Veggie Grill', 'Gayley & Lindbrook Apartments', "Ike's Place"}
Placeholder Map: {'Novel Cafe Westwood': 'a', 'Veggie Grill': 'b', 'Gayley & Lindbrook Apartments': 'c', "Ike's Place": 'd'}
True

97
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Subway, Ike's Place, bibigo, and London Cleaners, in any order
True Ground LTL: & G F subway & G F ikes_place & G F bibigo G F london_cleaners
Out Ground LTL: & G F subway & G F ikes_place & G F bibigo G F london_cleaners
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F d & G F c G F b
True Lmks: ('Subway', "Ike's Place", 'bibigo', 'London Cleaners')
Out Lmks:['London Cleaners', 'Subway', 'bibigo', "Ike's Place"]
Out Grounds: {'Subway', 'London Cleaners', 'bibigo', "Ike's Place"}
Placeholder Map: {'Subway': 'a', 'London Cleaners': 'b', 'bibigo': 'c', "Ike's Place": 'd'}
True

98
patrolling ['a', 'b', 'c', 'd'] Input utterance: visit locations Westwood's Village Square, TCT Foods, Denny's, and UCLA Extension - Lindbrook Center, an infinite number of times
True Ground LTL: & G F westwoods_village_square & G F tct_foods & G F dennys G F ucla_extension_lindbrook_center
Out Ground LTL: & G F dennys & G F westwood_village & G F tct_foods G F ucla_extension_lindbrook_center
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F b G F a
True Lmks: ("Westwood's Village Square", 'TCT Foods', "Denny's", 'UCLA Extension - Lindbrook Center')
Out Lmks:['TCT Foods', "Denny's", "Westwood's Village Square", 'UCLA Extension - Lindbrook Center']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'TCT Foods', 'Westwood Village', "Denny's"}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'TCT Foods': 'b', 'Westwood Village': 'c', "Denny's": 'd'}
False

99
patrolling ['a', 'b', 'c', 'd'] Input utterance: visit locations Starbucks, Poke Bar, Kinross Building South, and Parking 32, an infinite number of times
True Ground LTL: & G F starbucks & G F poke_bar & G F kinross_building_south G F parking_32
Out Ground LTL: & G F poke_bar & G F starbucks & G F kinross_building_south G F parking_32
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F a G F b
True Lmks: ('Starbucks', 'Poke Bar', 'Kinross Building South', 'Parking 32')
Out Lmks:['Kinross Building South', 'Parking 32', 'Starbucks', 'Poke Bar']
Out Grounds: {'Kinross Building South', 'Parking 32', 'Starbucks', 'Poke Bar'}
Placeholder Map: {'Kinross Building South': 'a', 'Parking 32': 'b', 'Starbucks': 'c', 'Poke Bar': 'd'}
True

100
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Westwood's Village Square, Kinross Building South, Starbucks, and Yogurtland
True Ground LTL: & G F westwoods_village_square & G F kinross_building_south & G F starbucks G F yogurtland
Out Ground LTL: & G F kinross_building_south & G F starbucks & G F yogurtland G F westwood_village
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F d G F c
True Lmks: ("Westwood's Village Square", 'Kinross Building South', 'Starbucks', 'Yogurtland')
Out Lmks:['Kinross Building South', 'Starbucks', 'Yogurtland', "Westwood's Village Square"]
Out Grounds: {'Kinross Building South', 'Starbucks', 'Westwood Village', 'Yogurtland'}
Placeholder Map: {'Kinross Building South': 'a', 'Starbucks': 'b', 'Westwood Village': 'c', 'Yogurtland': 'd'}
False

101
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Plaza la Reina, Occidental Petroleum Heliport, UCLA Extension - Westwood Village Center, and Westwood Wilshire
True Ground LTL: & G F plaza_la_reina & G F occidental_petroleum_heliport & G F ucla_extension_westwood_village_center G F westwood_wilshire
Out Ground LTL: & G F occidental_petroleum_heliport & G F ucla_extension_westwood_village_center & G F plaza_la_reina & G F westwood_village G F h
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F b & G F c G F h
True Lmks: ('Plaza la Reina', 'Occidental Petroleum Heliport', 'UCLA Extension - Westwood Village Center', 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', 'Occidental Petroleum Heliport', 'Plaza la Reina', 'UCLA Extension - Westwood Village Center']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Plaza la Reina', 'Westwood Village', 'Occidental Petroleum Heliport'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Plaza la Reina': 'b', 'Westwood Village': 'c', 'Occidental Petroleum Heliport': 'd'}
False

102
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Nature's Way Café, Occidental Petroleum Heliport, bibigo, and UCLA Extension - Lindbrook Center
True Ground LTL: & G F natures_way_café & G F occidental_petroleum_heliport & G F bibigo G F ucla_extension_lindbrook_center
Out Ground LTL: & G F ucla_extension_lindbrook_center & G F bibigo & G F occidental_petroleum_heliport G F natures_way_café
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F d & G F b G F c
True Lmks: ("Nature's Way Café", 'Occidental Petroleum Heliport', 'bibigo', 'UCLA Extension - Lindbrook Center')
Out Lmks:["Nature's Way Café", 'Occidental Petroleum Heliport', 'bibigo', 'UCLA Extension - Lindbrook Center']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Occidental Petroleum Heliport', "Nature's Way Café", 'bibigo'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Occidental Petroleum Heliport': 'b', "Nature's Way Café": 'c', 'bibigo': 'd'}
True

103
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Red Pelican Music, Nature's Way Café, Westwood Sporting Goods, and Plaza la Reina
True Ground LTL: & G F red_pelican_music & G F natures_way_café & G F westwood_sporting_goods G F plaza_la_reina
Out Ground LTL: & G F plaza_la_reina & G F westwood_sporting_goods & G F natures_way_café & G F red_pelican_music G F h
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F a & G F c G F h
True Lmks: ('Red Pelican Music', "Nature's Way Café", 'Westwood Sporting Goods', 'Plaza la Reina')
Out Lmks:["Nature's Way Café", 'Westwood Sporting Goods', 'Plaza la Reina', 'Red Pelican Music']
Out Grounds: {"Nature's Way Café", 'Plaza la Reina', 'Red Pelican Music', 'Westwood Sporting Goods'}
Placeholder Map: {"Nature's Way Café": 'a', 'Plaza la Reina': 'b', 'Red Pelican Music': 'c', 'Westwood Sporting Goods': 'd'}
False

104
patrolling ['a', 'b', 'c', 'd'] Input utterance: go to Parking 36, TCT Foods, Gayley & Lindbrook Apartments, and Mio Babbo's, over and over again
True Ground LTL: & G F parking_36 & G F tct_foods & G F gayley_&_lindbrook_apartments G F mio_babbos
Out Ground LTL: & G F parking_36 & G F tct_foods & G F gayley_&_lindbrook_apartments G F mio_babbos
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F d G F c
True Lmks: ('Parking 36', 'TCT Foods', 'Gayley & Lindbrook Apartments', "Mio Babbo's")
Out Lmks:['TCT Foods', 'Parking 36', "Mio Babbo's", 'Gayley & Lindbrook Apartments']
Out Grounds: {'TCT Foods', 'Parking 36', "Mio Babbo's", 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'TCT Foods': 'a', 'Parking 36': 'b', "Mio Babbo's": 'c', 'Gayley & Lindbrook Apartments': 'd'}
True

105
patrolling ['a', 'b', 'c', 'd'] Input utterance: go to TCT Foods, Subway, Gayley & Lindbrook Apartments, and Noah's Bagels, over and over again
True Ground LTL: & G F tct_foods & G F subway & G F gayley_&_lindbrook_apartments G F noahs_bagels
Out Ground LTL: & G F tct_foods & G F subway & G F gayley_&_lindbrook_apartments G F noahs_bagels
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F c G F d
True Lmks: ('TCT Foods', 'Subway', 'Gayley & Lindbrook Apartments', "Noah's Bagels")
Out Lmks:['TCT Foods', 'Gayley & Lindbrook Apartments', 'Subway', "Noah's Bagels"]
Out Grounds: {'TCT Foods', 'Subway', 'Gayley & Lindbrook Apartments', "Noah's Bagels"}
Placeholder Map: {'TCT Foods': 'a', 'Subway': 'b', 'Gayley & Lindbrook Apartments': 'c', "Noah's Bagels": 'd'}
True

106
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue to stop at Nature's Way Café, Subway, Village Center Newsstand, and Occidental Petroleum Heliport
True Ground LTL: & G F natures_way_café & G F subway & G F village_center_newsstand G F occidental_petroleum_heliport
Out Ground LTL: & G F natures_way_café & G F subway & G F village_center_newsstand G F occidental_petroleum_heliport
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F d G F b
True Lmks: ("Nature's Way Café", 'Subway', 'Village Center Newsstand', 'Occidental Petroleum Heliport')
Out Lmks:["Nature's Way Café", 'Occidental Petroleum Heliport', 'Subway', 'Village Center Newsstand']
Out Grounds: {"Nature's Way Café", 'Occidental Petroleum Heliport', 'Subway', 'Village Center Newsstand'}
Placeholder Map: {"Nature's Way Café": 'a', 'Occidental Petroleum Heliport': 'b', 'Subway': 'c', 'Village Center Newsstand': 'd'}
True

107
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue to stop at Gayley Center, Occidental Petroleum Heliport, 800 Degrees, and Ike's Place
True Ground LTL: & G F gayley_center & G F occidental_petroleum_heliport & G F 800_degrees G F ikes_place
Out Ground LTL: & G F gayley_center & G F occidental_petroleum_heliport & G F 800_degrees G F ikes_place
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F c G F d
True Lmks: ('Gayley Center', 'Occidental Petroleum Heliport', '800 Degrees', "Ike's Place")
Out Lmks:['Occidental Petroleum Heliport', 'Gayley Center', '800 Degrees', "Ike's Place"]
Out Grounds: {'Occidental Petroleum Heliport', 'Gayley Center', '800 Degrees', "Ike's Place"}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Gayley Center': 'b', '800 Degrees': 'c', "Ike's Place": 'd'}
True

108
patrolling ['a', 'b', 'c', 'd'] Input utterance: continuously visit Starbucks, Denny's, Village Center Newsstand, and UTLA Beauty
True Ground LTL: & G F starbucks & G F dennys & G F village_center_newsstand G F utla_beauty
Out Ground LTL: & G F starbucks & G F dennys & G F village_center_newsstand G F utla_beauty
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F d G F b
True Lmks: ('Starbucks', "Denny's", 'Village Center Newsstand', 'UTLA Beauty')
Out Lmks:['UTLA Beauty', 'Starbucks', "Denny's", 'Village Center Newsstand']
Out Grounds: {'Starbucks', 'UTLA Beauty', "Denny's", 'Village Center Newsstand'}
Placeholder Map: {'Starbucks': 'a', 'UTLA Beauty': 'b', "Denny's": 'c', 'Village Center Newsstand': 'd'}
True

109
patrolling ['a', 'b', 'c', 'd'] Input utterance: continuously visit Red Pelican Music, Gayley & Lindbrook Apartments, UCLA Extension - Westwood Village Center, and Poke Bar
True Ground LTL: & G F red_pelican_music & G F gayley_&_lindbrook_apartments & G F ucla_extension_westwood_village_center G F poke_bar
Out Ground LTL: & G F red_pelican_music & G F gayley_&_lindbrook_apartments & G F ucla_extension_westwood_village_center G F poke_bar
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F a G F b
True Lmks: ('Red Pelican Music', 'Gayley & Lindbrook Apartments', 'UCLA Extension - Westwood Village Center', 'Poke Bar')
Out Lmks:['UCLA Extension - Westwood Village Center', 'Poke Bar', 'Gayley & Lindbrook Apartments', 'Red Pelican Music']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Poke Bar', 'Gayley & Lindbrook Apartments', 'Red Pelican Music'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Poke Bar': 'b', 'Gayley & Lindbrook Apartments': 'c', 'Red Pelican Music': 'd'}
True

110
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not go to 800 Degrees, Occidental Petroleum Heliport, Veggie Grill, and UTLA Beauty, Occidental Petroleum Heliport, finite number of times
True Ground LTL: & G F occidental_petroleum_heliport & G F utla_beauty & G F 800_degrees G F veggie_grill
Out Ground LTL: & & U ! occidental_petroleum_heliport 800_degrees & U ! veggie_grill occidental_petroleum_heliport & U ! utla_beauty veggie_grill & U ! h utla_beauty F h & U ! 800_degrees U 800_degrees U ! 800_degrees occidental_petroleum_heliport & U ! occidental_petroleum_heliport U occidental_petroleum_heliport U ! occidental_petroleum_heliport veggie_grill & U ! veggie_grill U veggie_grill U ! veggie_grill utla_beauty U ! utla_beauty U utla_beauty U ! utla_beauty h
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & & U ! a c & U ! b a & U ! d b & U ! h d F h & U ! c U c U ! c a & U ! a U a U ! a b & U ! b U b U ! b d U ! d U d U ! d h
True Lmks: ('Occidental Petroleum Heliport', 'UTLA Beauty', '800 Degrees', 'Veggie Grill')
Out Lmks:['Occidental Petroleum Heliport', 'Veggie Grill', '800 Degrees', 'UTLA Beauty']
Out Grounds: {'Occidental Petroleum Heliport', 'Veggie Grill', '800 Degrees', 'UTLA Beauty'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Veggie Grill': 'b', '800 Degrees': 'c', 'UTLA Beauty': 'd'}
False

111
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not go to Parking 36, Veggie Grill, Peet's Coffee & Tea, and Denny's, Veggie Grill, finite number of times
True Ground LTL: & G F veggie_grill & G F dennys & G F parking_36 G F peets_coffee_&_tea
Out Ground LTL: & & U ! veggie_grill parking_36 & U ! peets_coffee_&_tea veggie_grill & U ! dennys peets_coffee_&_tea & U ! h dennys F h & U ! parking_36 U parking_36 U ! parking_36 veggie_grill & U ! veggie_grill U veggie_grill U ! veggie_grill peets_coffee_&_tea & U ! peets_coffee_&_tea U peets_coffee_&_tea U ! peets_coffee_&_tea dennys U ! dennys U dennys U ! dennys h
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & & U ! c a & U ! b c & U ! d b & U ! h d F h & U ! a U a U ! a c & U ! c U c U ! c b & U ! b U b U ! b d U ! d U d U ! d h
True Lmks: ('Veggie Grill', "Denny's", 'Parking 36', "Peet's Coffee & Tea")
Out Lmks:['Parking 36', "Peet's Coffee & Tea", 'Veggie Grill', "Denny's"]
Out Grounds: {'Parking 36', "Peet's Coffee & Tea", 'Veggie Grill', "Denny's"}
Placeholder Map: {'Parking 36': 'a', "Peet's Coffee & Tea": 'b', 'Veggie Grill': 'c', "Denny's": 'd'}
False

112
patrolling ['a', 'b', 'c', 'd'] Input utterance: perpetually travel to Iso Fusion Café, Subway, and Victoria's Secret
True Ground LTL: & G F victorias_secret & G F iso_fusion_café & G F subway G F bibigo
Out Ground LTL: & G F iso_fusion_café & G F victorias_secret G F subway
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b G F a
True Lmks: ("Victoria's Secret", 'Iso Fusion Café', 'Subway', 'bibigo')
Out Lmks:["Victoria's Secret", 'Subway', 'Iso Fusion Café']
Out Grounds: {'Subway', "Victoria's Secret", 'Iso Fusion Café'}
Placeholder Map: {'Subway': 'a', "Victoria's Secret": 'b', 'Iso Fusion Café': 'c'}
RER or Grounding Error

113
patrolling ['a', 'b', 'c', 'd'] Input utterance: perpetually travel to UTLA Beauty, Nature's Way Café, and Red Pelican Music
True Ground LTL: & G F red_pelican_music & G F utla_beauty & G F natures_way_café G F parking_32
Out Ground LTL: & G F utla_beauty & G F red_pelican_music G F natures_way_café
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b G F a
True Lmks: ('Red Pelican Music', 'UTLA Beauty', "Nature's Way Café", 'Parking 32')
Out Lmks:["Nature's Way Café", 'Red Pelican Music', 'UTLA Beauty']
Out Grounds: {"Nature's Way Café", 'Red Pelican Music', 'UTLA Beauty'}
Placeholder Map: {"Nature's Way Café": 'a', 'Red Pelican Music': 'b', 'UTLA Beauty': 'c'}
RER or Grounding Error

114
patrolling ['a', 'b', 'c', 'd'] Input utterance: explore Kinross Building South, Urban Outfitters, and Parking 36, endlessy
True Ground LTL: & G F urban_outfitters & G F kinross_building_south & G F parking_36 G F natures_way_café
Out Ground LTL: & G F urban_outfitters & G F kinross_building_south G F parking_36
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a G F b
True Lmks: ('Urban Outfitters', 'Kinross Building South', 'Parking 36', "Nature's Way Café")
Out Lmks:['Kinross Building South', 'Parking 36', 'Urban Outfitters']
Out Grounds: {'Kinross Building South', 'Parking 36', 'Urban Outfitters'}
Placeholder Map: {'Kinross Building South': 'a', 'Parking 36': 'b', 'Urban Outfitters': 'c'}
RER or Grounding Error

115
patrolling ['a', 'b', 'c', 'd'] Input utterance: explore Urban Outfitters, Westwood's Village Square, and Ike's Place, endlessy
True Ground LTL: & G F westwoods_village_square & G F urban_outfitters & G F ikes_place G F ucla_extension_westwood_village_center
Out Ground LTL: & G F westwood_village & G F urban_outfitters G F ikes_place
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b G F c
True Lmks: ("Westwood's Village Square", 'Urban Outfitters', "Ike's Place", 'UCLA Extension - Westwood Village Center')
Out Lmks:["Westwood's Village Square", 'Urban Outfitters', "Ike's Place"]
Out Grounds: {'Westwood Village', 'Urban Outfitters', "Ike's Place"}
Placeholder Map: {'Westwood Village': 'a', 'Urban Outfitters': 'b', "Ike's Place": 'c'}
False

116
patrolling ['a', 'b', 'c', 'd'] Input utterance: you are prohibited from not infinitely going to Kinross Building South, UTLA Beauty, Iso Fusion Café, and Red Pelican Music
True Ground LTL: & G F iso_fusion_café & G F red_pelican_music & G F utla_beauty G F kinross_building_south
Out Ground LTL: & G F red_pelican_music & G F iso_fusion_café & G F utla_beauty G F kinross_building_south
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b & G F d G F a
True Lmks: ('Iso Fusion Café', 'Red Pelican Music', 'UTLA Beauty', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Red Pelican Music', 'Iso Fusion Café', 'UTLA Beauty']
Out Grounds: {'Kinross Building South', 'Iso Fusion Café', 'Red Pelican Music', 'UTLA Beauty'}
Placeholder Map: {'Kinross Building South': 'a', 'Iso Fusion Café': 'b', 'Red Pelican Music': 'c', 'UTLA Beauty': 'd'}
True

117
patrolling ['a', 'b', 'c', 'd'] Input utterance: you are prohibited from not infinitely going to Mio Babbo's, Stone Canyon Creek (underground), Ike's Place, and Parking 32
True Ground LTL: & G F ikes_place & G F parking_32 & G F stone_canyon_creek_underground G F mio_babbos
Out Ground LTL: & G F parking_32 & G F stone_canyon_creek_underground & G F mio_babbos G F ikes_place
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F b G F d
True Lmks: ("Ike's Place", 'Parking 32', 'Stone Canyon Creek (underground)', "Mio Babbo's")
Out Lmks:['Stone Canyon Creek (underground)', "Mio Babbo's", 'Parking 32', "Ike's Place"]
Out Grounds: {'Stone Canyon Creek (underground)', "Mio Babbo's", 'Parking 32', "Ike's Place"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Mio Babbo's": 'b', 'Parking 32': 'c', "Ike's Place": 'd'}
True

118
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Starbucks, UCLA Extension - Westwood Village Center, Westwood Wilshire, and Native Foods, in no specific order
True Ground LTL: & G F starbucks & G F ucla_extension_westwood_village_center & G F westwood_wilshire G F native_foods
Out Ground LTL: & G F starbucks & G F ucla_extension_westwood_village_center & G F westwood_village G F native_foods
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F c G F b
True Lmks: ('Starbucks', 'UCLA Extension - Westwood Village Center', 'Westwood Wilshire', 'Native Foods')
Out Lmks:['Westwood Wilshire', 'UCLA Extension - Westwood Village Center', 'Starbucks', 'Native Foods']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Native Foods', 'Westwood Village', 'Starbucks'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Native Foods': 'b', 'Westwood Village': 'c', 'Starbucks': 'd'}
False

119
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting UTLA Beauty, London Cleaners, Gayley & Lindbrook Apartments, and Native Foods, in no specific order
True Ground LTL: & G F utla_beauty & G F london_cleaners & G F gayley_&_lindbrook_apartments G F native_foods
Out Ground LTL: & G F utla_beauty & G F london_cleaners & G F gayley_&_lindbrook_apartments G F native_foods
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F b G F a
True Lmks: ('UTLA Beauty', 'London Cleaners', 'Gayley & Lindbrook Apartments', 'Native Foods')
Out Lmks:['Gayley & Lindbrook Apartments', 'Native Foods', 'London Cleaners', 'UTLA Beauty']
Out Grounds: {'Native Foods', 'Gayley & Lindbrook Apartments', 'London Cleaners', 'UTLA Beauty'}
Placeholder Map: {'Native Foods': 'a', 'Gayley & Lindbrook Apartments': 'b', 'London Cleaners': 'c', 'UTLA Beauty': 'd'}
True

120
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Westwood's Village Square, Stone Canyon Creek (underground), UTLA Beauty, and Victoria's Secret, in any order
True Ground LTL: & G F westwoods_village_square & G F stone_canyon_creek_underground & G F utla_beauty G F victorias_secret
Out Ground LTL: & G F westwood_village & G F stone_canyon_creek_underground & G F utla_beauty G F victorias_secret
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F d G F c
True Lmks: ("Westwood's Village Square", 'Stone Canyon Creek (underground)', 'UTLA Beauty', "Victoria's Secret")
Out Lmks:['Stone Canyon Creek (underground)', "Victoria's Secret", "Westwood's Village Square", 'UTLA Beauty']
Out Grounds: {'Stone Canyon Creek (underground)', 'Westwood Village', "Victoria's Secret", 'UTLA Beauty'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Westwood Village': 'b', "Victoria's Secret": 'c', 'UTLA Beauty': 'd'}
False

121
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to The Gayley Building, U-Mini, London Cleaners, and Parking 32, in any order
True Ground LTL: & G F the_gayley_building & G F u_mini & G F london_cleaners G F parking_32
Out Ground LTL: & G F the_gayley_building & G F u_mini & G F london_cleaners G F parking_32
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F b G F a
True Lmks: ('The Gayley Building', 'U-Mini', 'London Cleaners', 'Parking 32')
Out Lmks:['Parking 32', 'London Cleaners', 'U-Mini', 'The Gayley Building']
Out Grounds: {'Parking 32', 'London Cleaners', 'U-Mini', 'The Gayley Building'}
Placeholder Map: {'Parking 32': 'a', 'London Cleaners': 'b', 'U-Mini': 'c', 'The Gayley Building': 'd'}
True

122
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Ike's Place, Kinross Building South, Plaza la Reina, and U-Mini, in any order infinitely
True Ground LTL: & G F ikes_place & G F kinross_building_south & G F plaza_la_reina G F u_mini
Out Ground LTL: & G F ikes_place & G F kinross_building_south & G F plaza_la_reina G F u_mini
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F b G F c
True Lmks: ("Ike's Place", 'Kinross Building South', 'Plaza la Reina', 'U-Mini')
Out Lmks:['Kinross Building South', 'Plaza la Reina', 'U-Mini', "Ike's Place"]
Out Grounds: {'Kinross Building South', 'Plaza la Reina', 'U-Mini', "Ike's Place"}
Placeholder Map: {'Kinross Building South': 'a', 'Plaza la Reina': 'b', 'U-Mini': 'c', "Ike's Place": 'd'}
True

123
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Mongol BBQ, bibigo, Veggie Grill, and Kinross Building South, in any order infinitely
True Ground LTL: & G F mongol_bbq & G F bibigo & G F veggie_grill G F kinross_building_south
Out Ground LTL: & G F mongol_bbq & G F bibigo & G F veggie_grill G F kinross_building_south
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F c G F a
True Lmks: ('Mongol BBQ', 'bibigo', 'Veggie Grill', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Veggie Grill', 'Mongol BBQ', 'bibigo']
Out Grounds: {'Kinross Building South', 'Mongol BBQ', 'Veggie Grill', 'bibigo'}
Placeholder Map: {'Kinross Building South': 'a', 'Mongol BBQ': 'b', 'Veggie Grill': 'c', 'bibigo': 'd'}
True

124
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Noah's Bagels, bibigo, Novel Cafe Westwood, and Gayley & Lindbrook Apartments, in no specific order
True Ground LTL: & G F noahs_bagels & G F bibigo & G F novel_cafe_westwood G F gayley_&_lindbrook_apartments
Out Ground LTL: & G F noahs_bagels & G F bibigo & G F novel_cafe_westwood G F gayley_&_lindbrook_apartments
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F a G F b
True Lmks: ("Noah's Bagels", 'bibigo', 'Novel Cafe Westwood', 'Gayley & Lindbrook Apartments')
Out Lmks:['Gayley & Lindbrook Apartments', 'Novel Cafe Westwood', 'bibigo', "Noah's Bagels"]
Out Grounds: {'Novel Cafe Westwood', 'Gayley & Lindbrook Apartments', 'bibigo', "Noah's Bagels"}
Placeholder Map: {'Novel Cafe Westwood': 'a', 'Gayley & Lindbrook Apartments': 'b', 'bibigo': 'c', "Noah's Bagels": 'd'}
True

125
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Mio Babbo's, Denny's, London Cleaners, and bibigo, in no specific order
True Ground LTL: & G F mio_babbos & G F dennys & G F london_cleaners G F bibigo
Out Ground LTL: & G F mio_babbos & G F dennys & G F london_cleaners G F bibigo
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F c G F d
True Lmks: ("Mio Babbo's", "Denny's", 'London Cleaners', 'bibigo')
Out Lmks:['bibigo', "Mio Babbo's", "Denny's", 'London Cleaners']
Out Grounds: {"Mio Babbo's", "Denny's", 'London Cleaners', 'bibigo'}
Placeholder Map: {"Mio Babbo's": 'a', "Denny's": 'b', 'London Cleaners': 'c', 'bibigo': 'd'}
True

126
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop going to Native Foods, Plaza la Reina, Mio Babbo's, and Parking 32, in any order
True Ground LTL: & G F native_foods & G F plaza_la_reina & G F mio_babbos G F parking_32
Out Ground LTL: & G F native_foods & G F plaza_la_reina & G F mio_babbos G F parking_32
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F d G F b
True Lmks: ('Native Foods', 'Plaza la Reina', "Mio Babbo's", 'Parking 32')
Out Lmks:['Parking 32', 'Native Foods', "Mio Babbo's", 'Plaza la Reina']
Out Grounds: {'Native Foods', 'Parking 32', 'Plaza la Reina', "Mio Babbo's"}
Placeholder Map: {'Native Foods': 'a', 'Parking 32': 'b', 'Plaza la Reina': 'c', "Mio Babbo's": 'd'}
True

127
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop going to Native Foods, Starbucks, Ike's Place, and Parking 36, in any order
True Ground LTL: & G F native_foods & G F starbucks & G F ikes_place G F parking_36
Out Ground LTL: & G F native_foods & G F starbucks & G F ikes_place G F parking_36
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c & G F d G F a
True Lmks: ('Native Foods', 'Starbucks', "Ike's Place", 'Parking 36')
Out Lmks:['Starbucks', 'Native Foods', 'Parking 36', "Ike's Place"]
Out Grounds: {'Parking 36', 'Native Foods', 'Starbucks', "Ike's Place"}
Placeholder Map: {'Parking 36': 'a', 'Native Foods': 'b', 'Starbucks': 'c', "Ike's Place": 'd'}
True

128
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Yogurtland, Iso Fusion Café, 800 Degrees, and Westwood Wilshire, an infinite number of times
True Ground LTL: & G F yogurtland & G F iso_fusion_café & G F 800_degrees G F westwood_wilshire
Out Ground LTL: & G F yogurtland & G F iso_fusion_café & G F 800_degrees G F westwood_village
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F d & G F c G F b
True Lmks: ('Yogurtland', 'Iso Fusion Café', '800 Degrees', 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', 'Yogurtland', '800 Degrees', 'Iso Fusion Café']
Out Grounds: {'Yogurtland', 'Westwood Village', '800 Degrees', 'Iso Fusion Café'}
Placeholder Map: {'Yogurtland': 'a', 'Westwood Village': 'b', '800 Degrees': 'c', 'Iso Fusion Café': 'd'}
RER or Grounding Error

129
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Westwood Sporting Goods, Parking 36, bibigo, and Gayley Center, an infinite number of times
True Ground LTL: & G F westwood_sporting_goods & G F parking_36 & G F bibigo G F gayley_center
Out Ground LTL: & G F westwood_sporting_goods & G F parking_36 & G F bibigo G F gayley_center
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F c G F b
True Lmks: ('Westwood Sporting Goods', 'Parking 36', 'bibigo', 'Gayley Center')
Out Lmks:['Parking 36', 'Gayley Center', 'bibigo', 'Westwood Sporting Goods']
Out Grounds: {'Parking 36', 'Gayley Center', 'bibigo', 'Westwood Sporting Goods'}
Placeholder Map: {'Parking 36': 'a', 'Gayley Center': 'b', 'bibigo': 'c', 'Westwood Sporting Goods': 'd'}
True

130
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Nature's Way Café, Poke Bar, Urban Outfitters, and Westwood Wilshire, an infinite number of times
True Ground LTL: & G F natures_way_café & G F poke_bar & G F urban_outfitters G F westwood_wilshire
Out Ground LTL: & G F natures_way_café & G F poke_bar & G F urban_outfitters G F westwood_village
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F c & G F d G F b
True Lmks: ("Nature's Way Café", 'Poke Bar', 'Urban Outfitters', 'Westwood Wilshire')
Out Lmks:["Nature's Way Café", 'Westwood Wilshire', 'Urban Outfitters', 'Poke Bar']
Out Grounds: {"Nature's Way Café", 'Westwood Village', 'Poke Bar', 'Urban Outfitters'}
Placeholder Map: {"Nature's Way Café": 'a', 'Westwood Village': 'b', 'Poke Bar': 'c', 'Urban Outfitters': 'd'}
RER or Grounding Error

131
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Parking 36, bibigo, Peet's Coffee & Tea, and Native Foods, an infinite number of times
True Ground LTL: & G F parking_36 & G F bibigo & G F peets_coffee_&_tea G F native_foods
Out Ground LTL: & G F parking_36 & G F bibigo & G F peets_coffee_&_tea G F native_foods
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F c G F a
True Lmks: ('Parking 36', 'bibigo', "Peet's Coffee & Tea", 'Native Foods')
Out Lmks:['Native Foods', 'Parking 36', "Peet's Coffee & Tea", 'bibigo']
Out Grounds: {'Native Foods', 'Parking 36', "Peet's Coffee & Tea", 'bibigo'}
Placeholder Map: {'Native Foods': 'a', 'Parking 36': 'b', "Peet's Coffee & Tea": 'c', 'bibigo': 'd'}
True

132
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue visiting UTLA Beauty, Gayley Center, UCLA Extension - Westwood Village Center, and Mio Babbo's, an infinite number of times
True Ground LTL: & G F utla_beauty & G F gayley_center & G F ucla_extension_westwood_village_center G F mio_babbos
Out Ground LTL: & G F utla_beauty & G F gayley_center & G F ucla_extension_westwood_village_center G F mio_babbos
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F b & G F a G F c
True Lmks: ('UTLA Beauty', 'Gayley Center', 'UCLA Extension - Westwood Village Center', "Mio Babbo's")
Out Lmks:['UCLA Extension - Westwood Village Center', 'Gayley Center', "Mio Babbo's", 'UTLA Beauty']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Gayley Center', "Mio Babbo's", 'UTLA Beauty'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Gayley Center': 'b', "Mio Babbo's": 'c', 'UTLA Beauty': 'd'}
True

133
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue visiting Stone Canyon Creek (underground), Westwood Wilshire, Village Center Newsstand, and Denny's, an infinite number of times
True Ground LTL: & G F stone_canyon_creek_underground & G F westwood_wilshire & G F village_center_newsstand G F dennys
Out Ground LTL: & G F stone_canyon_creek_underground & G F westwood_village & G F village_center_newsstand G F dennys
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F d G F c
True Lmks: ('Stone Canyon Creek (underground)', 'Westwood Wilshire', 'Village Center Newsstand', "Denny's")
Out Lmks:['Stone Canyon Creek (underground)', 'Westwood Wilshire', "Denny's", 'Village Center Newsstand']
Out Grounds: {'Stone Canyon Creek (underground)', 'Westwood Village', "Denny's", 'Village Center Newsstand'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Westwood Village': 'b', "Denny's": 'c', 'Village Center Newsstand': 'd'}
False

134
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Poke Bar, Ike's Place, Parking 36, and Gayley Center
True Ground LTL: & G F poke_bar & G F ikes_place & G F parking_36 G F gayley_center
Out Ground LTL: & G F poke_bar & G F ikes_place & G F parking_36 G F gayley_center
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d & G F a G F b
True Lmks: ('Poke Bar', "Ike's Place", 'Parking 36', 'Gayley Center')
Out Lmks:['Parking 36', 'Gayley Center', 'Poke Bar', "Ike's Place"]
Out Grounds: {'Parking 36', 'Gayley Center', 'Poke Bar', "Ike's Place"}
Placeholder Map: {'Parking 36': 'a', 'Gayley Center': 'b', 'Poke Bar': 'c', "Ike's Place": 'd'}
True

135
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Nature's Way Café, The Gayley Building, Westwood Wilshire, and Stone Canyon Creek (underground)
True Ground LTL: & G F natures_way_café & G F the_gayley_building & G F westwood_wilshire G F stone_canyon_creek_underground
Out Ground LTL: & G F natures_way_café & G F the_gayley_building & G F westwood_village G F stone_canyon_creek_underground
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F d & G F c G F b
True Lmks: ("Nature's Way Café", 'The Gayley Building', 'Westwood Wilshire', 'Stone Canyon Creek (underground)')
Out Lmks:["Nature's Way Café", 'Stone Canyon Creek (underground)', 'Westwood Wilshire', 'The Gayley Building']
Out Grounds: {"Nature's Way Café", 'Stone Canyon Creek (underground)', 'Westwood Village', 'The Gayley Building'}
Placeholder Map: {"Nature's Way Café": 'a', 'Stone Canyon Creek (underground)': 'b', 'Westwood Village': 'c', 'The Gayley Building': 'd'}
RER or Grounding Error

136
global_avoidance ['a', 'b', 'c'] Input utterance: never go to UTLA Beauty, Ike's Place, or Poke Bar
True Ground LTL: & G ! utla_beauty & G ! ikes_place G ! poke_bar
Out Ground LTL: & G ! ikes_place & G ! utla_beauty G ! poke_bar
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('UTLA Beauty', "Ike's Place", 'Poke Bar')
Out Lmks:["Ike's Place", 'Poke Bar', 'UTLA Beauty']
Out Grounds: {'UTLA Beauty', 'Poke Bar', "Ike's Place"}
Placeholder Map: {'UTLA Beauty': 'a', 'Poke Bar': 'b', "Ike's Place": 'c'}
True

137
global_avoidance ['a', 'b', 'c'] Input utterance: never go to Mio Babbo's, Kinross Building South, or The Gayley Building
True Ground LTL: & G ! mio_babbos & G ! kinross_building_south G ! the_gayley_building
Out Ground LTL: & G ! mio_babbos & G ! kinross_building_south G ! the_gayley_building
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ("Mio Babbo's", 'Kinross Building South', 'The Gayley Building')
Out Lmks:['Kinross Building South', "Mio Babbo's", 'The Gayley Building']
Out Grounds: {'Kinross Building South', "Mio Babbo's", 'The Gayley Building'}
Placeholder Map: {'Kinross Building South': 'a', "Mio Babbo's": 'b', 'The Gayley Building': 'c'}
True

138
global_avoidance ['a', 'b', 'c'] Input utterance: you can never visit U-Mini, Ike's Place, or UCLA Extension - Westwood Village Center
True Ground LTL: & G ! u_mini & G ! ikes_place G ! ucla_extension_westwood_village_center
Out Ground LTL: & G ! u_mini & G ! ikes_place G ! ucla_extension_westwood_village_center
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('U-Mini', "Ike's Place", 'UCLA Extension - Westwood Village Center')
Out Lmks:["Ike's Place", 'UCLA Extension - Westwood Village Center', 'U-Mini']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'U-Mini', "Ike's Place"}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'U-Mini': 'b', "Ike's Place": 'c'}
True

139
global_avoidance ['a', 'b', 'c'] Input utterance: you can never visit London Cleaners, Janss Dome, or The Gayley Building
True Ground LTL: & G ! london_cleaners & G ! janss_dome G ! the_gayley_building
Out Ground LTL: & G ! london_cleaners & G ! janss_dome G ! the_gayley_building
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('London Cleaners', 'Janss Dome', 'The Gayley Building')
Out Lmks:['Janss Dome', 'London Cleaners', 'The Gayley Building']
Out Grounds: {'Janss Dome', 'London Cleaners', 'The Gayley Building'}
Placeholder Map: {'Janss Dome': 'a', 'London Cleaners': 'b', 'The Gayley Building': 'c'}
True

140
global_avoidance ['a', 'b', 'c'] Input utterance: always avoid going to TCT Foods, Poke Bar, and Gayley Center
True Ground LTL: & G ! tct_foods & G ! poke_bar G ! gayley_center
Out Ground LTL: & G ! poke_bar & G ! tct_foods G ! gayley_center
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('TCT Foods', 'Poke Bar', 'Gayley Center')
Out Lmks:['TCT Foods', 'Gayley Center', 'Poke Bar']
Out Grounds: {'TCT Foods', 'Gayley Center', 'Poke Bar'}
Placeholder Map: {'TCT Foods': 'a', 'Gayley Center': 'b', 'Poke Bar': 'c'}
True

141
global_avoidance ['a', 'b', 'c'] Input utterance: always avoid going to bibigo, Stone Canyon Creek (underground), and Peet's Coffee & Tea
True Ground LTL: & G ! bibigo & G ! stone_canyon_creek_underground G ! peets_coffee_&_tea
Out Ground LTL: & G ! bibigo & G ! stone_canyon_creek_underground G ! peets_coffee_&_tea
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('bibigo', 'Stone Canyon Creek (underground)', "Peet's Coffee & Tea")
Out Lmks:['Stone Canyon Creek (underground)', "Peet's Coffee & Tea", 'bibigo']
Out Grounds: {'Stone Canyon Creek (underground)', "Peet's Coffee & Tea", 'bibigo'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Peet's Coffee & Tea": 'b', 'bibigo': 'c'}
True

142
global_avoidance ['a', 'b', 'c'] Input utterance: always stay away from Starbucks, 800 Degrees, and bibigo
True Ground LTL: & G ! starbucks & G ! 800_degrees G ! bibigo
Out Ground LTL: & G ! starbucks & G ! 800_degrees G ! bibigo
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Starbucks', '800 Degrees', 'bibigo')
Out Lmks:['Starbucks', '800 Degrees', 'bibigo']
Out Grounds: {'Starbucks', '800 Degrees', 'bibigo'}
Placeholder Map: {'Starbucks': 'a', '800 Degrees': 'b', 'bibigo': 'c'}
True

143
global_avoidance ['a', 'b', 'c'] Input utterance: always stay away from Westwood Sporting Goods, Gayley & Lindbrook Apartments, and Victoria's Secret
True Ground LTL: & G ! westwood_sporting_goods & G ! gayley_&_lindbrook_apartments G ! victorias_secret
Out Ground LTL: & G ! westwood_sporting_goods & G ! gayley_&_lindbrook_apartments G ! victorias_secret
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Westwood Sporting Goods', 'Gayley & Lindbrook Apartments', "Victoria's Secret")
Out Lmks:["Victoria's Secret", 'Gayley & Lindbrook Apartments', 'Westwood Sporting Goods']
Out Grounds: {"Victoria's Secret", 'Gayley & Lindbrook Apartments', 'Westwood Sporting Goods'}
Placeholder Map: {"Victoria's Secret": 'a', 'Gayley & Lindbrook Apartments': 'b', 'Westwood Sporting Goods': 'c'}
True

144
global_avoidance ['a', 'b', 'c'] Input utterance: you have to avoid UTLA Beauty, Urban Outfitters, and Noah's Bagels, at all costs
True Ground LTL: & G ! utla_beauty & G ! urban_outfitters G ! noahs_bagels
Out Ground LTL: & G ! utla_beauty & G ! urban_outfitters G ! noahs_bagels
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('UTLA Beauty', 'Urban Outfitters', "Noah's Bagels")
Out Lmks:["Noah's Bagels", 'Urban Outfitters', 'UTLA Beauty']
Out Grounds: {'UTLA Beauty', 'Urban Outfitters', "Noah's Bagels"}
Placeholder Map: {'UTLA Beauty': 'a', 'Urban Outfitters': 'b', "Noah's Bagels": 'c'}
True

145
global_avoidance ['a', 'b', 'c'] Input utterance: you have to avoid UCLA Extension - Lindbrook Center, UCLA Extension - Westwood Village Center, and Mio Babbo's, at all costs
True Ground LTL: & G ! ucla_extension_lindbrook_center & G ! ucla_extension_westwood_village_center G ! mio_babbos
Out Ground LTL: & G ! ucla_extension_lindbrook_center & G ! ucla_extension_westwood_village_center G ! mio_babbos
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('UCLA Extension - Lindbrook Center', 'UCLA Extension - Westwood Village Center', "Mio Babbo's")
Out Lmks:['UCLA Extension - Lindbrook Center', 'UCLA Extension - Westwood Village Center', "Mio Babbo's"]
Out Grounds: {'UCLA Extension - Lindbrook Center', 'UCLA Extension - Westwood Village Center', "Mio Babbo's"}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'UCLA Extension - Westwood Village Center': 'b', "Mio Babbo's": 'c'}
True

146
global_avoidance ['a', 'b', 'c'] Input utterance: you can not visit Native Foods, U-Mini, or Urban Outfitters, at any time
True Ground LTL: & G ! native_foods & G ! u_mini G ! urban_outfitters
Out Ground LTL: & G ! native_foods & G ! u_mini G ! urban_outfitters
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Native Foods', 'U-Mini', 'Urban Outfitters')
Out Lmks:['Native Foods', 'Urban Outfitters', 'U-Mini']
Out Grounds: {'Native Foods', 'Urban Outfitters', 'U-Mini'}
Placeholder Map: {'Native Foods': 'a', 'Urban Outfitters': 'b', 'U-Mini': 'c'}
True

147
global_avoidance ['a', 'b', 'c'] Input utterance: you can not visit Poke Bar, Urban Outfitters, or Kinross Building South, at any time
True Ground LTL: & G ! poke_bar & G ! urban_outfitters G ! kinross_building_south
Out Ground LTL: & G ! poke_bar & G ! urban_outfitters G ! kinross_building_south
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Poke Bar', 'Urban Outfitters', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Urban Outfitters', 'Poke Bar']
Out Grounds: {'Kinross Building South', 'Poke Bar', 'Urban Outfitters'}
Placeholder Map: {'Kinross Building South': 'a', 'Poke Bar': 'b', 'Urban Outfitters': 'c'}
True

148
global_avoidance ['a', 'b', 'c'] Input utterance: make sure you never visit Peet's Coffee & Tea, Westwood Sporting Goods, or Westwood Wilshire
True Ground LTL: & G ! peets_coffee_&_tea & G ! westwood_sporting_goods G ! westwood_wilshire
Out Ground LTL: & G ! peets_coffee_&_tea & G ! westwood_sporting_goods G ! westwood_village
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ("Peet's Coffee & Tea", 'Westwood Sporting Goods', 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', "Peet's Coffee & Tea", 'Westwood Sporting Goods']
Out Grounds: {"Peet's Coffee & Tea", 'Westwood Village', 'Westwood Sporting Goods'}
Placeholder Map: {"Peet's Coffee & Tea": 'a', 'Westwood Village': 'b', 'Westwood Sporting Goods': 'c'}
False

149
global_avoidance ['a', 'b', 'c'] Input utterance: make sure you never visit Westwood Wilshire, Iso Fusion Café, or Occidental Petroleum Heliport
True Ground LTL: & G ! westwood_wilshire & G ! iso_fusion_café G ! occidental_petroleum_heliport
Out Ground LTL: & G ! westwood_village & G ! iso_fusion_café G ! occidental_petroleum_heliport
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Westwood Wilshire', 'Iso Fusion Café', 'Occidental Petroleum Heliport')
Out Lmks:['Occidental Petroleum Heliport', 'Westwood Wilshire', 'Iso Fusion Café']
Out Grounds: {'Occidental Petroleum Heliport', 'Westwood Village', 'Iso Fusion Café'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Westwood Village': 'b', 'Iso Fusion Café': 'c'}
RER or Grounding Error

150
global_avoidance ['a', 'b', 'c'] Input utterance: avoid going to Starbucks, Ike's Place, and Janss Dome
True Ground LTL: & G ! starbucks & G ! ikes_place G ! janss_dome
Out Ground LTL: & G ! ikes_place & G ! janss_dome G ! starbucks
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Starbucks', "Ike's Place", 'Janss Dome')
Out Lmks:['Janss Dome', 'Starbucks', "Ike's Place"]
Out Grounds: {'Janss Dome', 'Starbucks', "Ike's Place"}
Placeholder Map: {'Janss Dome': 'a', 'Starbucks': 'b', "Ike's Place": 'c'}
True

151
global_avoidance ['a', 'b', 'c'] Input utterance: avoid going to Veggie Grill, Westwood Sporting Goods, and Poke Bar
True Ground LTL: & G ! veggie_grill & G ! westwood_sporting_goods G ! poke_bar
Out Ground LTL: & G ! westwood_sporting_goods & G ! poke_bar G ! veggie_grill
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Veggie Grill', 'Westwood Sporting Goods', 'Poke Bar')
Out Lmks:['Veggie Grill', 'Poke Bar', 'Westwood Sporting Goods']
Out Grounds: {'Veggie Grill', 'Poke Bar', 'Westwood Sporting Goods'}
Placeholder Map: {'Veggie Grill': 'a', 'Poke Bar': 'b', 'Westwood Sporting Goods': 'c'}
True

152
global_avoidance ['a', 'b', 'c'] Input utterance: never visit either one among Urban Outfitters, Westwood Sporting Goods, and bibigo
True Ground LTL: & G ! urban_outfitters & G ! westwood_sporting_goods G ! bibigo
Out Ground LTL: & G ! urban_outfitters & G ! westwood_sporting_goods G ! bibigo
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Urban Outfitters', 'Westwood Sporting Goods', 'bibigo')
Out Lmks:['Westwood Sporting Goods', 'bibigo', 'Urban Outfitters']
Out Grounds: {'bibigo', 'Urban Outfitters', 'Westwood Sporting Goods'}
Placeholder Map: {'bibigo': 'a', 'Urban Outfitters': 'b', 'Westwood Sporting Goods': 'c'}
True

153
global_avoidance ['a', 'b', 'c'] Input utterance: never visit either one among Occidental Petroleum Heliport, Plaza la Reina, and Gayley & Lindbrook Apartments
True Ground LTL: & G ! occidental_petroleum_heliport & G ! plaza_la_reina G ! gayley_&_lindbrook_apartments
Out Ground LTL: & G ! occidental_petroleum_heliport & G ! plaza_la_reina G ! gayley_&_lindbrook_apartments
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Occidental Petroleum Heliport', 'Plaza la Reina', 'Gayley & Lindbrook Apartments')
Out Lmks:['Occidental Petroleum Heliport', 'Plaza la Reina', 'Gayley & Lindbrook Apartments']
Out Grounds: {'Occidental Petroleum Heliport', 'Plaza la Reina', 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Plaza la Reina': 'b', 'Gayley & Lindbrook Apartments': 'c'}
True

154
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach the locations Peet's Coffee & Tea, Noah's Bagels, and TCT Foods
True Ground LTL: & G ! peets_coffee_&_tea & G ! noahs_bagels G ! tct_foods
Out Ground LTL: & G ! peets_coffee_&_tea & G ! noahs_bagels G ! tct_foods
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ("Peet's Coffee & Tea", "Noah's Bagels", 'TCT Foods')
Out Lmks:['TCT Foods', "Peet's Coffee & Tea", "Noah's Bagels"]
Out Grounds: {'TCT Foods', "Peet's Coffee & Tea", "Noah's Bagels"}
Placeholder Map: {'TCT Foods': 'a', "Peet's Coffee & Tea": 'b', "Noah's Bagels": 'c'}
True

155
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach the locations UTLA Beauty, Noah's Bagels, and Westwood Sporting Goods
True Ground LTL: & G ! utla_beauty & G ! noahs_bagels G ! westwood_sporting_goods
Out Ground LTL: & G ! utla_beauty & G ! noahs_bagels G ! westwood_sporting_goods
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('UTLA Beauty', "Noah's Bagels", 'Westwood Sporting Goods')
Out Lmks:["Noah's Bagels", 'Westwood Sporting Goods', 'UTLA Beauty']
Out Grounds: {'UTLA Beauty', 'Westwood Sporting Goods', "Noah's Bagels"}
Placeholder Map: {'UTLA Beauty': 'a', 'Westwood Sporting Goods': 'b', "Noah's Bagels": 'c'}
True

156
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach U-Mini, ensure that you never reach TCT Foods, and ensure that you never reach Mongol BBQ
True Ground LTL: & G ! u_mini & G ! tct_foods G ! mongol_bbq
Out Ground LTL: & G ! u_mini & G ! tct_foods G ! mongol_bbq
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('U-Mini', 'TCT Foods', 'Mongol BBQ')
Out Lmks:['TCT Foods', 'Mongol BBQ', 'U-Mini']
Out Grounds: {'TCT Foods', 'Mongol BBQ', 'U-Mini'}
Placeholder Map: {'TCT Foods': 'a', 'Mongol BBQ': 'b', 'U-Mini': 'c'}
True

157
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach Parking 36, ensure that you never reach Kinross Building South, and ensure that you never reach Veggie Grill
True Ground LTL: & G ! parking_36 & G ! kinross_building_south G ! veggie_grill
Out Ground LTL: & G ! parking_36 & G ! kinross_building_south G ! veggie_grill
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Parking 36', 'Kinross Building South', 'Veggie Grill')
Out Lmks:['Kinross Building South', 'Parking 36', 'Veggie Grill']
Out Grounds: {'Kinross Building South', 'Parking 36', 'Veggie Grill'}
Placeholder Map: {'Kinross Building South': 'a', 'Parking 36': 'b', 'Veggie Grill': 'c'}
True

158
global_avoidance ['a', 'b', 'c'] Input utterance: Gayley Center, Mongol BBQ, and Poke Bar, should never be visited
True Ground LTL: & G ! gayley_center & G ! mongol_bbq G ! poke_bar
Out Ground LTL: & G ! gayley_center & G ! mongol_bbq G ! poke_bar
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Gayley Center', 'Mongol BBQ', 'Poke Bar')
Out Lmks:['Gayley Center', 'Mongol BBQ', 'Poke Bar']
Out Grounds: {'Gayley Center', 'Mongol BBQ', 'Poke Bar'}
Placeholder Map: {'Gayley Center': 'a', 'Mongol BBQ': 'b', 'Poke Bar': 'c'}
True

159
global_avoidance ['a', 'b', 'c'] Input utterance: Mongol BBQ, London Cleaners, and Parking 36, should never be visited
True Ground LTL: & G ! mongol_bbq & G ! london_cleaners G ! parking_36
Out Ground LTL: & G ! mongol_bbq & G ! london_cleaners G ! parking_36
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Mongol BBQ', 'London Cleaners', 'Parking 36')
Out Lmks:['Parking 36', 'Mongol BBQ', 'London Cleaners']
Out Grounds: {'Parking 36', 'Mongol BBQ', 'London Cleaners'}
Placeholder Map: {'Parking 36': 'a', 'Mongol BBQ': 'b', 'London Cleaners': 'c'}
True

160
global_avoidance ['a', 'b', 'c'] Input utterance: do not go to Iso Fusion Café, Westwood Sporting Goods, or 800 Degrees
True Ground LTL: & G ! iso_fusion_café & G ! westwood_sporting_goods G ! 800_degrees
Out Ground LTL: & G ! westwood_sporting_goods & G ! 800_degrees G ! iso_fusion_café
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Iso Fusion Café', 'Westwood Sporting Goods', '800 Degrees')
Out Lmks:['Westwood Sporting Goods', '800 Degrees', 'Iso Fusion Café']
Out Grounds: {'Iso Fusion Café', '800 Degrees', 'Westwood Sporting Goods'}
Placeholder Map: {'Iso Fusion Café': 'a', '800 Degrees': 'b', 'Westwood Sporting Goods': 'c'}
True

161
global_avoidance ['a', 'b', 'c'] Input utterance: do not go to Nature's Way Café, Starbucks, or U-Mini
True Ground LTL: & G ! natures_way_café & G ! starbucks G ! u_mini
Out Ground LTL: & G ! starbucks & G ! u_mini G ! natures_way_café
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ("Nature's Way Café", 'Starbucks', 'U-Mini')
Out Lmks:["Nature's Way Café", 'Starbucks', 'U-Mini']
Out Grounds: {"Nature's Way Café", 'Starbucks', 'U-Mini'}
Placeholder Map: {"Nature's Way Café": 'a', 'Starbucks': 'b', 'U-Mini': 'c'}
True

162
global_avoidance ['a', 'b', 'c'] Input utterance: you can go anywhere but Native Foods, Victoria's Secret, and Village Center Newsstand
True Ground LTL: & G ! native_foods & G ! victorias_secret G ! village_center_newsstand
Out Ground LTL: & G ! victorias_secret & G ! village_center_newsstand G ! native_foods
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Native Foods', "Victoria's Secret", 'Village Center Newsstand')
Out Lmks:['Native Foods', "Victoria's Secret", 'Village Center Newsstand']
Out Grounds: {'Native Foods', "Victoria's Secret", 'Village Center Newsstand'}
Placeholder Map: {'Native Foods': 'a', "Victoria's Secret": 'b', 'Village Center Newsstand': 'c'}
True

163
global_avoidance ['a', 'b', 'c'] Input utterance: you can go anywhere but Kinross Building South, UCLA Extension - Westwood Village Center, and U-Mini
True Ground LTL: & G ! kinross_building_south & G ! ucla_extension_westwood_village_center G ! u_mini
Out Ground LTL: & G ! ucla_extension_westwood_village_center & G ! u_mini G ! kinross_building_south
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Kinross Building South', 'UCLA Extension - Westwood Village Center', 'U-Mini')
Out Lmks:['Kinross Building South', 'UCLA Extension - Westwood Village Center', 'U-Mini']
Out Grounds: {'Kinross Building South', 'UCLA Extension - Westwood Village Center', 'U-Mini'}
Placeholder Map: {'Kinross Building South': 'a', 'UCLA Extension - Westwood Village Center': 'b', 'U-Mini': 'c'}
True

164
global_avoidance ['a', 'b', 'c'] Input utterance: Village Center Newsstand, Mio Babbo's, and Nature's Way Café, can not be visited at any time
True Ground LTL: & G ! village_center_newsstand & G ! mio_babbos G ! natures_way_café
Out Ground LTL: & G ! village_center_newsstand & G ! mio_babbos G ! natures_way_café
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Village Center Newsstand', "Mio Babbo's", "Nature's Way Café")
Out Lmks:["Nature's Way Café", "Mio Babbo's", 'Village Center Newsstand']
Out Grounds: {"Nature's Way Café", "Mio Babbo's", 'Village Center Newsstand'}
Placeholder Map: {"Nature's Way Café": 'a', "Mio Babbo's": 'b', 'Village Center Newsstand': 'c'}
True

165
global_avoidance ['a', 'b', 'c'] Input utterance: Iso Fusion Café, Occidental Petroleum Heliport, and Nature's Way Café, can not be visited at any time
True Ground LTL: & G ! iso_fusion_café & G ! occidental_petroleum_heliport G ! natures_way_café
Out Ground LTL: & G ! iso_fusion_café & G ! occidental_petroleum_heliport G ! natures_way_café
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Iso Fusion Café', 'Occidental Petroleum Heliport', "Nature's Way Café")
Out Lmks:["Nature's Way Café", 'Occidental Petroleum Heliport', 'Iso Fusion Café']
Out Grounds: {"Nature's Way Café", 'Occidental Petroleum Heliport', 'Iso Fusion Café'}
Placeholder Map: {"Nature's Way Café": 'a', 'Occidental Petroleum Heliport': 'b', 'Iso Fusion Café': 'c'}
True

166
global_avoidance ['a', 'b', 'c'] Input utterance: always keep away from Noah's Bagels, Occidental Petroleum Heliport, and bibigo
True Ground LTL: & G ! noahs_bagels & G ! occidental_petroleum_heliport G ! bibigo
Out Ground LTL: & G ! noahs_bagels & G ! occidental_petroleum_heliport G ! bibigo
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ("Noah's Bagels", 'Occidental Petroleum Heliport', 'bibigo')
Out Lmks:['Occidental Petroleum Heliport', 'bibigo', "Noah's Bagels"]
Out Grounds: {'Occidental Petroleum Heliport', 'bibigo', "Noah's Bagels"}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'bibigo': 'b', "Noah's Bagels": 'c'}
True

167
global_avoidance ['a', 'b', 'c'] Input utterance: always keep away from Village Center Newsstand, Native Foods, and Mongol BBQ
True Ground LTL: & G ! village_center_newsstand & G ! native_foods G ! mongol_bbq
Out Ground LTL: & G ! village_center_newsstand & G ! native_foods G ! mongol_bbq
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Village Center Newsstand', 'Native Foods', 'Mongol BBQ')
Out Lmks:['Native Foods', 'Mongol BBQ', 'Village Center Newsstand']
Out Grounds: {'Native Foods', 'Mongol BBQ', 'Village Center Newsstand'}
Placeholder Map: {'Native Foods': 'a', 'Mongol BBQ': 'b', 'Village Center Newsstand': 'c'}
True

168
global_avoidance ['a', 'b', 'c'] Input utterance: you must avoid Iso Fusion Café, Victoria's Secret, and Mio Babbo's, at all costs
True Ground LTL: & G ! iso_fusion_café & G ! victorias_secret G ! mio_babbos
Out Ground LTL: & G ! victorias_secret & G ! iso_fusion_café G ! mio_babbos
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Iso Fusion Café', "Victoria's Secret", "Mio Babbo's")
Out Lmks:["Mio Babbo's", "Victoria's Secret", 'Iso Fusion Café']
Out Grounds: {"Mio Babbo's", "Victoria's Secret", 'Iso Fusion Café'}
Placeholder Map: {"Mio Babbo's": 'a', "Victoria's Secret": 'b', 'Iso Fusion Café': 'c'}
True

169
global_avoidance ['a', 'b', 'c'] Input utterance: you must avoid Nature's Way Café, Peet's Coffee & Tea, and U-Mini, at all costs
True Ground LTL: & G ! natures_way_café & G ! peets_coffee_&_tea G ! u_mini
Out Ground LTL: & G ! peets_coffee_&_tea & G ! natures_way_café G ! u_mini
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ("Nature's Way Café", "Peet's Coffee & Tea", 'U-Mini')
Out Lmks:["Nature's Way Café", "Peet's Coffee & Tea", 'U-Mini']
Out Grounds: {"Nature's Way Café", "Peet's Coffee & Tea", 'U-Mini'}
Placeholder Map: {"Nature's Way Café": 'a', "Peet's Coffee & Tea": 'b', 'U-Mini': 'c'}
True

170
global_avoidance ['a', 'b', 'c'] Input utterance: you can not go to Poke Bar, Gayley Center, or Native Foods
True Ground LTL: & G ! poke_bar & G ! gayley_center G ! native_foods
Out Ground LTL: & G ! gayley_center & G ! poke_bar G ! native_foods
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Poke Bar', 'Gayley Center', 'Native Foods')
Out Lmks:['Native Foods', 'Gayley Center', 'Poke Bar']
Out Grounds: {'Native Foods', 'Gayley Center', 'Poke Bar'}
Placeholder Map: {'Native Foods': 'a', 'Gayley Center': 'b', 'Poke Bar': 'c'}
True

171
global_avoidance ['a', 'b', 'c'] Input utterance: you can not go to Peet's Coffee & Tea, bibigo, or U-Mini
True Ground LTL: & G ! peets_coffee_&_tea & G ! bibigo G ! u_mini
Out Ground LTL: & G ! bibigo & G ! peets_coffee_&_tea G ! u_mini
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ("Peet's Coffee & Tea", 'bibigo', 'U-Mini')
Out Lmks:["Peet's Coffee & Tea", 'bibigo', 'U-Mini']
Out Grounds: {"Peet's Coffee & Tea", 'bibigo', 'U-Mini'}
Placeholder Map: {"Peet's Coffee & Tea": 'a', 'bibigo': 'b', 'U-Mini': 'c'}
True

172
global_avoidance ['a', 'b', 'c'] Input utterance: avoid The Gayley Building, Yogurtland, and Nature's Way Café, forever
True Ground LTL: & G ! the_gayley_building & G ! yogurtland G ! natures_way_café
Out Ground LTL: & G F the_gayley_building & G F yogurtland G F natures_way_café
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G F c & G F b G F a
True Lmks: ('The Gayley Building', 'Yogurtland', "Nature's Way Café")
Out Lmks:["Nature's Way Café", 'Yogurtland', 'The Gayley Building']
Out Grounds: {"Nature's Way Café", 'Yogurtland', 'The Gayley Building'}
Placeholder Map: {"Nature's Way Café": 'a', 'Yogurtland': 'b', 'The Gayley Building': 'c'}
False

173
global_avoidance ['a', 'b', 'c'] Input utterance: avoid London Cleaners, Gayley Center, and Westwood Sporting Goods, forever
True Ground LTL: & G ! london_cleaners & G ! gayley_center G ! westwood_sporting_goods
Out Ground LTL: & G F london_cleaners & G F gayley_center G F westwood_sporting_goods
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G F b & G F a G F c
True Lmks: ('London Cleaners', 'Gayley Center', 'Westwood Sporting Goods')
Out Lmks:['Gayley Center', 'London Cleaners', 'Westwood Sporting Goods']
Out Grounds: {'Gayley Center', 'London Cleaners', 'Westwood Sporting Goods'}
Placeholder Map: {'Gayley Center': 'a', 'London Cleaners': 'b', 'Westwood Sporting Goods': 'c'}
False

174
global_avoidance ['a', 'b', 'c'] Input utterance: do not make any single visit to UCLA Extension - Westwood Village Center, Mio Babbo's, or Westwood Wilshire
True Ground LTL: & G ! ucla_extension_westwood_village_center & G ! mio_babbos G ! westwood_wilshire
Out Ground LTL: & G ! ucla_extension_westwood_village_center & G ! mio_babbos G ! westwood_village
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('UCLA Extension - Westwood Village Center', "Mio Babbo's", 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', 'UCLA Extension - Westwood Village Center', "Mio Babbo's"]
Out Grounds: {'UCLA Extension - Westwood Village Center', "Mio Babbo's", 'Westwood Village'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', "Mio Babbo's": 'b', 'Westwood Village': 'c'}
False

175
global_avoidance ['a', 'b', 'c'] Input utterance: do not make any single visit to Red Pelican Music, Plaza la Reina, or Village Center Newsstand
True Ground LTL: & G ! red_pelican_music & G ! plaza_la_reina G ! village_center_newsstand
Out Ground LTL: & G ! red_pelican_music & G ! plaza_la_reina G ! village_center_newsstand
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Red Pelican Music', 'Plaza la Reina', 'Village Center Newsstand')
Out Lmks:['Plaza la Reina', 'Red Pelican Music', 'Village Center Newsstand']
Out Grounds: {'Plaza la Reina', 'Red Pelican Music', 'Village Center Newsstand'}
Placeholder Map: {'Plaza la Reina': 'a', 'Red Pelican Music': 'b', 'Village Center Newsstand': 'c'}
True

176
global_avoidance ['a', 'b', 'c'] Input utterance: Parking 36, Gayley Center, or Iso Fusion Café, can never become true at any instant
True Ground LTL: & G ! parking_36 & G ! gayley_center G ! iso_fusion_café
Out Ground LTL: & G ! parking_36 & G ! gayley_center G ! iso_fusion_café
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Parking 36', 'Gayley Center', 'Iso Fusion Café')
Out Lmks:['Parking 36', 'Gayley Center', 'Iso Fusion Café']
Out Grounds: {'Parking 36', 'Gayley Center', 'Iso Fusion Café'}
Placeholder Map: {'Parking 36': 'a', 'Gayley Center': 'b', 'Iso Fusion Café': 'c'}
True

177
global_avoidance ['a', 'b', 'c'] Input utterance: Village Center Newsstand, Gayley & Lindbrook Apartments, or Parking 32, can never become true at any instant
True Ground LTL: & G ! village_center_newsstand & G ! gayley_&_lindbrook_apartments G ! parking_32
Out Ground LTL: & G ! village_center_newsstand & G ! gayley_&_lindbrook_apartments G ! parking_32
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Village Center Newsstand', 'Gayley & Lindbrook Apartments', 'Parking 32')
Out Lmks:['Parking 32', 'Gayley & Lindbrook Apartments', 'Village Center Newsstand']
Out Grounds: {'Parking 32', 'Gayley & Lindbrook Apartments', 'Village Center Newsstand'}
Placeholder Map: {'Parking 32': 'a', 'Gayley & Lindbrook Apartments': 'b', 'Village Center Newsstand': 'c'}
True

178
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that London Cleaners, UTLA Beauty, and Janss Dome, never hold true
True Ground LTL: & G ! london_cleaners & G ! utla_beauty G ! janss_dome
Out Ground LTL: & G ! london_cleaners & G ! utla_beauty G ! janss_dome
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('London Cleaners', 'UTLA Beauty', 'Janss Dome')
Out Lmks:['Janss Dome', 'London Cleaners', 'UTLA Beauty']
Out Grounds: {'Janss Dome', 'London Cleaners', 'UTLA Beauty'}
Placeholder Map: {'Janss Dome': 'a', 'London Cleaners': 'b', 'UTLA Beauty': 'c'}
True

179
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that Denny's, Gayley & Lindbrook Apartments, and Stone Canyon Creek (underground), never hold true
True Ground LTL: & G ! dennys & G ! gayley_&_lindbrook_apartments G ! stone_canyon_creek_underground
Out Ground LTL: & G ! dennys & G ! gayley_&_lindbrook_apartments G ! stone_canyon_creek_underground
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ("Denny's", 'Gayley & Lindbrook Apartments', 'Stone Canyon Creek (underground)')
Out Lmks:['Gayley & Lindbrook Apartments', 'Stone Canyon Creek (underground)', "Denny's"]
Out Grounds: {'Stone Canyon Creek (underground)', "Denny's", 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Denny's": 'b', 'Gayley & Lindbrook Apartments': 'c'}
True

180
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit The Gayley Building, U-Mini, Victoria's Secret, or Stone Canyon Creek (underground)
True Ground LTL: & G ! the_gayley_building & G ! u_mini & G ! victorias_secret G ! stone_canyon_creek_underground
Out Ground LTL: & G ! the_gayley_building & G ! u_mini & G ! victorias_secret G ! stone_canyon_creek_underground
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! b G ! a
True Lmks: ('The Gayley Building', 'U-Mini', "Victoria's Secret", 'Stone Canyon Creek (underground)')
Out Lmks:['Stone Canyon Creek (underground)', "Victoria's Secret", 'U-Mini', 'The Gayley Building']
Out Grounds: {'Stone Canyon Creek (underground)', "Victoria's Secret", 'U-Mini', 'The Gayley Building'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Victoria's Secret": 'b', 'U-Mini': 'c', 'The Gayley Building': 'd'}
True

181
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit UTLA Beauty, Westwood Sporting Goods, Parking 32, or 800 Degrees
True Ground LTL: & G ! utla_beauty & G ! westwood_sporting_goods & G ! parking_32 G ! 800_degrees
Out Ground LTL: & G ! utla_beauty & G ! westwood_sporting_goods & G ! parking_32 G ! 800_degrees
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! a G ! b
True Lmks: ('UTLA Beauty', 'Westwood Sporting Goods', 'Parking 32', '800 Degrees')
Out Lmks:['Parking 32', '800 Degrees', 'Westwood Sporting Goods', 'UTLA Beauty']
Out Grounds: {'Parking 32', '800 Degrees', 'Westwood Sporting Goods', 'UTLA Beauty'}
Placeholder Map: {'Parking 32': 'a', '800 Degrees': 'b', 'Westwood Sporting Goods': 'c', 'UTLA Beauty': 'd'}
True

182
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can never go to Veggie Grill, Stone Canyon Creek (underground), Victoria's Secret, or Native Foods
True Ground LTL: & G ! veggie_grill & G ! stone_canyon_creek_underground & G ! victorias_secret G ! native_foods
Out Ground LTL: & G ! veggie_grill & G ! stone_canyon_creek_underground & G ! victorias_secret G ! native_foods
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('Veggie Grill', 'Stone Canyon Creek (underground)', "Victoria's Secret", 'Native Foods')
Out Lmks:['Stone Canyon Creek (underground)', 'Native Foods', 'Veggie Grill', "Victoria's Secret"]
Out Grounds: {'Stone Canyon Creek (underground)', 'Native Foods', 'Veggie Grill', "Victoria's Secret"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Native Foods': 'b', 'Veggie Grill': 'c', "Victoria's Secret": 'd'}
True

183
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can never go to Gayley Center, Red Pelican Music, Stone Canyon Creek (underground), or Native Foods
True Ground LTL: & G ! gayley_center & G ! red_pelican_music & G ! stone_canyon_creek_underground G ! native_foods
Out Ground LTL: & G ! gayley_center & G ! red_pelican_music & G ! stone_canyon_creek_underground G ! native_foods
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! b G ! a
True Lmks: ('Gayley Center', 'Red Pelican Music', 'Stone Canyon Creek (underground)', 'Native Foods')
Out Lmks:['Native Foods', 'Stone Canyon Creek (underground)', 'Gayley Center', 'Red Pelican Music']
Out Grounds: {'Native Foods', 'Stone Canyon Creek (underground)', 'Gayley Center', 'Red Pelican Music'}
Placeholder Map: {'Native Foods': 'a', 'Stone Canyon Creek (underground)': 'b', 'Gayley Center': 'c', 'Red Pelican Music': 'd'}
True

184
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to UTLA Beauty, UCLA Extension - Lindbrook Center, The Gayley Building, or Nature's Way Café, at any time
True Ground LTL: & G ! utla_beauty & G ! ucla_extension_lindbrook_center & G ! the_gayley_building G ! natures_way_café
Out Ground LTL: & G ! utla_beauty & G ! ucla_extension_lindbrook_center & G ! the_gayley_building G ! natures_way_café
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('UTLA Beauty', 'UCLA Extension - Lindbrook Center', 'The Gayley Building', "Nature's Way Café")
Out Lmks:['UCLA Extension - Lindbrook Center', 'The Gayley Building', "Nature's Way Café", 'UTLA Beauty']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'UTLA Beauty', "Nature's Way Café", 'The Gayley Building'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'UTLA Beauty': 'b', "Nature's Way Café": 'c', 'The Gayley Building': 'd'}
True

185
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Parking 32, Yogurtland, Janss Dome, or UCLA Extension - Westwood Village Center, at any time
True Ground LTL: & G ! parking_32 & G ! yogurtland & G ! janss_dome G ! ucla_extension_westwood_village_center
Out Ground LTL: & G ! parking_32 & G ! yogurtland & G ! janss_dome G ! ucla_extension_westwood_village_center
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! a G ! b
True Lmks: ('Parking 32', 'Yogurtland', 'Janss Dome', 'UCLA Extension - Westwood Village Center')
Out Lmks:['Janss Dome', 'Parking 32', 'Yogurtland', 'UCLA Extension - Westwood Village Center']
Out Grounds: {'Janss Dome', 'UCLA Extension - Westwood Village Center', 'Parking 32', 'Yogurtland'}
Placeholder Map: {'Janss Dome': 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Parking 32': 'c', 'Yogurtland': 'd'}
True

186
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure you never visit Victoria's Secret, Stone Canyon Creek (underground), Ike's Place, or Gayley & Lindbrook Apartments
True Ground LTL: & G ! victorias_secret & G ! stone_canyon_creek_underground & G ! ikes_place G ! gayley_&_lindbrook_apartments
Out Ground LTL: & G ! victorias_secret & G ! stone_canyon_creek_underground & G ! ikes_place G ! gayley_&_lindbrook_apartments
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ("Victoria's Secret", 'Stone Canyon Creek (underground)', "Ike's Place", 'Gayley & Lindbrook Apartments')
Out Lmks:['Gayley & Lindbrook Apartments', 'Stone Canyon Creek (underground)', "Victoria's Secret", "Ike's Place"]
Out Grounds: {'Stone Canyon Creek (underground)', "Victoria's Secret", 'Gayley & Lindbrook Apartments', "Ike's Place"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Victoria's Secret": 'b', 'Gayley & Lindbrook Apartments': 'c', "Ike's Place": 'd'}
True

187
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure you never visit U-Mini, Nature's Way Café, Iso Fusion Café, or Poke Bar
True Ground LTL: & G ! u_mini & G ! natures_way_café & G ! iso_fusion_café G ! poke_bar
Out Ground LTL: & G ! u_mini & G ! natures_way_café & G ! iso_fusion_café G ! poke_bar
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! c G ! b
True Lmks: ('U-Mini', "Nature's Way Café", 'Iso Fusion Café', 'Poke Bar')
Out Lmks:["Nature's Way Café", 'Poke Bar', 'Iso Fusion Café', 'U-Mini']
Out Grounds: {"Nature's Way Café", 'Poke Bar', 'Iso Fusion Café', 'U-Mini'}
Placeholder Map: {"Nature's Way Café": 'a', 'Poke Bar': 'b', 'Iso Fusion Café': 'c', 'U-Mini': 'd'}
True

188
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always avoid going to Noah's Bagels, 800 Degrees, Stone Canyon Creek (underground), or Mongol BBQ
True Ground LTL: & G ! noahs_bagels & G ! 800_degrees & G ! stone_canyon_creek_underground G ! mongol_bbq
Out Ground LTL: & G ! noahs_bagels & G ! 800_degrees & G ! stone_canyon_creek_underground G ! mongol_bbq
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! a G ! b
True Lmks: ("Noah's Bagels", '800 Degrees', 'Stone Canyon Creek (underground)', 'Mongol BBQ')
Out Lmks:['Stone Canyon Creek (underground)', 'Mongol BBQ', '800 Degrees', "Noah's Bagels"]
Out Grounds: {'Stone Canyon Creek (underground)', 'Mongol BBQ', '800 Degrees', "Noah's Bagels"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Mongol BBQ': 'b', '800 Degrees': 'c', "Noah's Bagels": 'd'}
True

189
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always avoid going to 800 Degrees, Gayley Center, Westwood Wilshire, or Gayley & Lindbrook Apartments
True Ground LTL: & G ! 800_degrees & G ! gayley_center & G ! westwood_wilshire G ! gayley_&_lindbrook_apartments
Out Ground LTL: & G ! gayley_center & G ! westwood_village & G ! 800_degrees G ! gayley_&_lindbrook_apartments
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! a G ! d
True Lmks: ('800 Degrees', 'Gayley Center', 'Westwood Wilshire', 'Gayley & Lindbrook Apartments')
Out Lmks:['Westwood Wilshire', 'Gayley Center', 'Gayley & Lindbrook Apartments', '800 Degrees']
Out Grounds: {'800 Degrees', 'Gayley Center', 'Westwood Village', 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'800 Degrees': 'a', 'Gayley Center': 'b', 'Westwood Village': 'c', 'Gayley & Lindbrook Apartments': 'd'}
RER or Grounding Error

190
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always stay away from Janss Dome, Yogurtland, Native Foods, and Plaza la Reina
True Ground LTL: & G ! janss_dome & G ! yogurtland & G ! native_foods G ! plaza_la_reina
Out Ground LTL: & G ! janss_dome & G ! yogurtland & G ! native_foods G ! plaza_la_reina
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! a G ! b
True Lmks: ('Janss Dome', 'Yogurtland', 'Native Foods', 'Plaza la Reina')
Out Lmks:['Janss Dome', 'Native Foods', 'Yogurtland', 'Plaza la Reina']
Out Grounds: {'Native Foods', 'Plaza la Reina', 'Yogurtland', 'Janss Dome'}
Placeholder Map: {'Native Foods': 'a', 'Plaza la Reina': 'b', 'Yogurtland': 'c', 'Janss Dome': 'd'}
True

191
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always stay away from Westwood Sporting Goods, Mio Babbo's, Red Pelican Music, and Westwood Wilshire
True Ground LTL: & G ! westwood_sporting_goods & G ! mio_babbos & G ! red_pelican_music G ! westwood_wilshire
Out Ground LTL: & G ! westwood_sporting_goods & G ! mio_babbos & G ! red_pelican_music G ! westwood_village
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! c G ! b
True Lmks: ('Westwood Sporting Goods', "Mio Babbo's", 'Red Pelican Music', 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', "Mio Babbo's", 'Red Pelican Music', 'Westwood Sporting Goods']
Out Grounds: {"Mio Babbo's", 'Westwood Village', 'Red Pelican Music', 'Westwood Sporting Goods'}
Placeholder Map: {"Mio Babbo's": 'a', 'Westwood Village': 'b', 'Red Pelican Music': 'c', 'Westwood Sporting Goods': 'd'}
False

192
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you have to avoid Westwood Sporting Goods, Starbucks, Westwood's Village Square, and Parking 36, at all costs
True Ground LTL: & G ! westwood_sporting_goods & G ! starbucks & G ! westwoods_village_square G ! parking_36
Out Ground LTL: & G ! westwood_sporting_goods & G ! starbucks & G ! westwood_village G ! parking_36
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! b & G ! c G ! a
True Lmks: ('Westwood Sporting Goods', 'Starbucks', "Westwood's Village Square", 'Parking 36')
Out Lmks:['Parking 36', 'Starbucks', "Westwood's Village Square", 'Westwood Sporting Goods']
Out Grounds: {'Parking 36', 'Starbucks', 'Westwood Village', 'Westwood Sporting Goods'}
Placeholder Map: {'Parking 36': 'a', 'Starbucks': 'b', 'Westwood Village': 'c', 'Westwood Sporting Goods': 'd'}
False

193
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you have to avoid London Cleaners, Native Foods, Village Center Newsstand, and Westwood Wilshire, at all costs
True Ground LTL: & G ! london_cleaners & G ! native_foods & G ! village_center_newsstand G ! westwood_wilshire
Out Ground LTL: & G ! london_cleaners & G ! native_foods & G ! village_center_newsstand G ! westwood_village
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('London Cleaners', 'Native Foods', 'Village Center Newsstand', 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', 'Native Foods', 'London Cleaners', 'Village Center Newsstand']
Out Grounds: {'Native Foods', 'Westwood Village', 'London Cleaners', 'Village Center Newsstand'}
Placeholder Map: {'Native Foods': 'a', 'Westwood Village': 'b', 'London Cleaners': 'c', 'Village Center Newsstand': 'd'}
False

194
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit any locations among The Gayley Building, Gayley & Lindbrook Apartments, Ike's Place, Plaza la Reina
True Ground LTL: & G ! the_gayley_building & G ! gayley_&_lindbrook_apartments & G ! ikes_place G ! plaza_la_reina
Out Ground LTL: & G ! the_gayley_building & G ! gayley_&_lindbrook_apartments & G ! ikes_place G ! plaza_la_reina
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! a G ! b
True Lmks: ('The Gayley Building', 'Gayley & Lindbrook Apartments', "Ike's Place", 'Plaza la Reina')
Out Lmks:["Ike's Place", 'Plaza la Reina', 'Gayley & Lindbrook Apartments', 'The Gayley Building']
Out Grounds: {"Ike's Place", 'Plaza la Reina', 'Gayley & Lindbrook Apartments', 'The Gayley Building'}
Placeholder Map: {"Ike's Place": 'a', 'Plaza la Reina': 'b', 'Gayley & Lindbrook Apartments': 'c', 'The Gayley Building': 'd'}
True

195
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit any locations among Urban Outfitters, Iso Fusion Café, Gayley Center, Parking 36
True Ground LTL: & G ! urban_outfitters & G ! iso_fusion_café & G ! gayley_center G ! parking_36
Out Ground LTL: & G ! urban_outfitters & G ! iso_fusion_café & G ! gayley_center G ! parking_36
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! b G ! c
True Lmks: ('Urban Outfitters', 'Iso Fusion Café', 'Gayley Center', 'Parking 36')
Out Lmks:['Iso Fusion Café', 'Gayley Center', 'Parking 36', 'Urban Outfitters']
Out Grounds: {'Iso Fusion Café', 'Gayley Center', 'Parking 36', 'Urban Outfitters'}
Placeholder Map: {'Iso Fusion Café': 'a', 'Gayley Center': 'b', 'Parking 36': 'c', 'Urban Outfitters': 'd'}
True

196
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure to not reach any of Mio Babbo's, London Cleaners, Red Pelican Music, and bibigo
True Ground LTL: & G ! mio_babbos & G ! london_cleaners & G ! red_pelican_music G ! bibigo
Out Ground LTL: & G ! mio_babbos & G ! london_cleaners & G ! red_pelican_music G ! bibigo
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ("Mio Babbo's", 'London Cleaners', 'Red Pelican Music', 'bibigo')
Out Lmks:['bibigo', "Mio Babbo's", 'London Cleaners', 'Red Pelican Music']
Out Grounds: {'bibigo', "Mio Babbo's", 'London Cleaners', 'Red Pelican Music'}
Placeholder Map: {'bibigo': 'a', "Mio Babbo's": 'b', 'London Cleaners': 'c', 'Red Pelican Music': 'd'}
True

197
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure to not reach any of Plaza la Reina, Westwood Sporting Goods, Stone Canyon Creek (underground), and Kinross Building South
True Ground LTL: & G ! plaza_la_reina & G ! westwood_sporting_goods & G ! stone_canyon_creek_underground G ! kinross_building_south
Out Ground LTL: & G ! plaza_la_reina & G ! westwood_sporting_goods & G ! stone_canyon_creek_underground G ! kinross_building_south
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! b G ! a
True Lmks: ('Plaza la Reina', 'Westwood Sporting Goods', 'Stone Canyon Creek (underground)', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Stone Canyon Creek (underground)', 'Plaza la Reina', 'Westwood Sporting Goods']
Out Grounds: {'Kinross Building South', 'Stone Canyon Creek (underground)', 'Plaza la Reina', 'Westwood Sporting Goods'}
Placeholder Map: {'Kinross Building South': 'a', 'Stone Canyon Creek (underground)': 'b', 'Plaza la Reina': 'c', 'Westwood Sporting Goods': 'd'}
True

198
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid going to bibigo, Nature's Way Café, Gayley & Lindbrook Apartments, and Starbucks
True Ground LTL: & G ! bibigo & G ! natures_way_café & G ! gayley_&_lindbrook_apartments G ! starbucks
Out Ground LTL: & G ! bibigo & G ! natures_way_café & G ! gayley_&_lindbrook_apartments G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! c G ! b
True Lmks: ('bibigo', "Nature's Way Café", 'Gayley & Lindbrook Apartments', 'Starbucks')
Out Lmks:["Nature's Way Café", 'Starbucks', 'Gayley & Lindbrook Apartments', 'bibigo']
Out Grounds: {"Nature's Way Café", 'Starbucks', 'Gayley & Lindbrook Apartments', 'bibigo'}
Placeholder Map: {"Nature's Way Café": 'a', 'Starbucks': 'b', 'Gayley & Lindbrook Apartments': 'c', 'bibigo': 'd'}
True

199
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid going to Janss Dome, Kinross Building South, Urban Outfitters, and Starbucks
True Ground LTL: & G ! janss_dome & G ! kinross_building_south & G ! urban_outfitters G ! starbucks
Out Ground LTL: & G ! janss_dome & G ! kinross_building_south & G ! urban_outfitters G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('Janss Dome', 'Kinross Building South', 'Urban Outfitters', 'Starbucks')
Out Lmks:['Janss Dome', 'Starbucks', 'Kinross Building South', 'Urban Outfitters']
Out Grounds: {'Kinross Building South', 'Starbucks', 'Janss Dome', 'Urban Outfitters'}
Placeholder Map: {'Kinross Building South': 'a', 'Starbucks': 'b', 'Janss Dome': 'c', 'Urban Outfitters': 'd'}
True

200
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Plaza la Reina, Gayley & Lindbrook Apartments, Parking 32, and Native Foods, must never be visited
True Ground LTL: & G ! plaza_la_reina & G ! gayley_&_lindbrook_apartments & G ! parking_32 G ! native_foods
Out Ground LTL: & G ! plaza_la_reina & G ! gayley_&_lindbrook_apartments & G ! parking_32 G ! native_foods
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! b G ! a
True Lmks: ('Plaza la Reina', 'Gayley & Lindbrook Apartments', 'Parking 32', 'Native Foods')
Out Lmks:['Native Foods', 'Parking 32', 'Plaza la Reina', 'Gayley & Lindbrook Apartments']
Out Grounds: {'Native Foods', 'Parking 32', 'Plaza la Reina', 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'Native Foods': 'a', 'Parking 32': 'b', 'Plaza la Reina': 'c', 'Gayley & Lindbrook Apartments': 'd'}
True

201
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Mio Babbo's, Gayley Center, U-Mini, and Parking 32, must never be visited
True Ground LTL: & G ! mio_babbos & G ! gayley_center & G ! u_mini G ! parking_32
Out Ground LTL: & G ! mio_babbos & G ! gayley_center & G ! u_mini G ! parking_32
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ("Mio Babbo's", 'Gayley Center', 'U-Mini', 'Parking 32')
Out Lmks:['Parking 32', "Mio Babbo's", 'Gayley Center', 'U-Mini']
Out Grounds: {'Parking 32', 'Gayley Center', "Mio Babbo's", 'U-Mini'}
Placeholder Map: {'Parking 32': 'a', 'Gayley Center': 'b', "Mio Babbo's": 'c', 'U-Mini': 'd'}
True

202
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Denny's, never go to Occidental Petroleum Heliport, never go to Novel Cafe Westwood, and never go to Mongol BBQ
True Ground LTL: & G ! dennys & G ! occidental_petroleum_heliport & G ! novel_cafe_westwood G ! mongol_bbq
Out Ground LTL: & G ! dennys & G ! occidental_petroleum_heliport & G ! novel_cafe_westwood G ! mongol_bbq
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! b G ! c
True Lmks: ("Denny's", 'Occidental Petroleum Heliport', 'Novel Cafe Westwood', 'Mongol BBQ')
Out Lmks:['Occidental Petroleum Heliport', 'Novel Cafe Westwood', 'Mongol BBQ', "Denny's"]
Out Grounds: {'Occidental Petroleum Heliport', 'Novel Cafe Westwood', 'Mongol BBQ', "Denny's"}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Novel Cafe Westwood': 'b', 'Mongol BBQ': 'c', "Denny's": 'd'}
True

203
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Kinross Building South, never go to Occidental Petroleum Heliport, never go to Mongol BBQ, and never go to Subway
True Ground LTL: & G ! kinross_building_south & G ! occidental_petroleum_heliport & G ! mongol_bbq G ! subway
Out Ground LTL: & G ! kinross_building_south & G ! occidental_petroleum_heliport & G ! mongol_bbq G ! subway
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! b & G ! c G ! d
True Lmks: ('Kinross Building South', 'Occidental Petroleum Heliport', 'Mongol BBQ', 'Subway')
Out Lmks:['Kinross Building South', 'Occidental Petroleum Heliport', 'Mongol BBQ', 'Subway']
Out Grounds: {'Kinross Building South', 'Occidental Petroleum Heliport', 'Mongol BBQ', 'Subway'}
Placeholder Map: {'Kinross Building South': 'a', 'Occidental Petroleum Heliport': 'b', 'Mongol BBQ': 'c', 'Subway': 'd'}
True

204
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to UCLA Extension - Lindbrook Center, Poke Bar, Parking 36, or bibigo
True Ground LTL: & G ! ucla_extension_lindbrook_center & G ! poke_bar & G ! parking_36 G ! bibigo
Out Ground LTL: & G ! ucla_extension_lindbrook_center & G ! poke_bar & G ! parking_36 G ! bibigo
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! b G ! c
True Lmks: ('UCLA Extension - Lindbrook Center', 'Poke Bar', 'Parking 36', 'bibigo')
Out Lmks:['UCLA Extension - Lindbrook Center', 'Parking 36', 'bibigo', 'Poke Bar']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Parking 36', 'bibigo', 'Poke Bar'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Parking 36': 'b', 'bibigo': 'c', 'Poke Bar': 'd'}
True

205
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Plaza la Reina, Yogurtland, London Cleaners, or Westwood Wilshire
True Ground LTL: & G ! plaza_la_reina & G ! yogurtland & G ! london_cleaners G ! westwood_wilshire
Out Ground LTL: & G ! plaza_la_reina & G ! yogurtland & G ! london_cleaners G ! westwood_village
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('Plaza la Reina', 'Yogurtland', 'London Cleaners', 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', 'Plaza la Reina', 'Yogurtland', 'London Cleaners']
Out Grounds: {'Yogurtland', 'Plaza la Reina', 'Westwood Village', 'London Cleaners'}
Placeholder Map: {'Yogurtland': 'a', 'Plaza la Reina': 'b', 'Westwood Village': 'c', 'London Cleaners': 'd'}
False

206
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not go to UTLA Beauty, Native Foods, TCT Foods, or Novel Cafe Westwood
True Ground LTL: & G ! utla_beauty & G ! native_foods & G ! tct_foods G ! novel_cafe_westwood
Out Ground LTL: & G ! utla_beauty & G ! native_foods & G ! tct_foods G ! novel_cafe_westwood
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! c G ! b
True Lmks: ('UTLA Beauty', 'Native Foods', 'TCT Foods', 'Novel Cafe Westwood')
Out Lmks:['TCT Foods', 'Native Foods', 'Novel Cafe Westwood', 'UTLA Beauty']
Out Grounds: {'Native Foods', 'Novel Cafe Westwood', 'TCT Foods', 'UTLA Beauty'}
Placeholder Map: {'Native Foods': 'a', 'Novel Cafe Westwood': 'b', 'TCT Foods': 'c', 'UTLA Beauty': 'd'}
True

207
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not go to Nature's Way Café, Starbucks, Peet's Coffee & Tea, or Parking 32
True Ground LTL: & G ! natures_way_café & G ! starbucks & G ! peets_coffee_&_tea G ! parking_32
Out Ground LTL: & G ! natures_way_café & G ! starbucks & G ! peets_coffee_&_tea G ! parking_32
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ("Nature's Way Café", 'Starbucks', "Peet's Coffee & Tea", 'Parking 32')
Out Lmks:["Nature's Way Café", "Peet's Coffee & Tea", 'Starbucks', 'Parking 32']
Out Grounds: {"Nature's Way Café", 'Parking 32', "Peet's Coffee & Tea", 'Starbucks'}
Placeholder Map: {"Nature's Way Café": 'a', 'Parking 32': 'b', "Peet's Coffee & Tea": 'c', 'Starbucks': 'd'}
True

208
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can go anywhere but TCT Foods, Novel Cafe Westwood, Peet's Coffee & Tea, and Gayley & Lindbrook Apartments
True Ground LTL: & G ! tct_foods & G ! novel_cafe_westwood & G ! peets_coffee_&_tea G ! gayley_&_lindbrook_apartments
Out Ground LTL: & G ! tct_foods & G ! novel_cafe_westwood & G ! peets_coffee_&_tea G ! gayley_&_lindbrook_apartments
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! c & G ! b G ! d
True Lmks: ('TCT Foods', 'Novel Cafe Westwood', "Peet's Coffee & Tea", 'Gayley & Lindbrook Apartments')
Out Lmks:['TCT Foods', "Peet's Coffee & Tea", 'Novel Cafe Westwood', 'Gayley & Lindbrook Apartments']
Out Grounds: {'TCT Foods', "Peet's Coffee & Tea", 'Novel Cafe Westwood', 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'TCT Foods': 'a', "Peet's Coffee & Tea": 'b', 'Novel Cafe Westwood': 'c', 'Gayley & Lindbrook Apartments': 'd'}
True

209
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can go anywhere but Village Center Newsstand, UCLA Extension - Lindbrook Center, Plaza la Reina, and Westwood's Village Square
True Ground LTL: & G ! village_center_newsstand & G ! ucla_extension_lindbrook_center & G ! plaza_la_reina G ! westwoods_village_square
Out Ground LTL: & G ! village_center_newsstand & G ! ucla_extension_lindbrook_center & G ! plaza_la_reina G ! westwood_village
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! b G ! c
True Lmks: ('Village Center Newsstand', 'UCLA Extension - Lindbrook Center', 'Plaza la Reina', "Westwood's Village Square")
Out Lmks:['UCLA Extension - Lindbrook Center', 'Plaza la Reina', "Westwood's Village Square", 'Village Center Newsstand']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Plaza la Reina', 'Westwood Village', 'Village Center Newsstand'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Plaza la Reina': 'b', 'Westwood Village': 'c', 'Village Center Newsstand': 'd'}
False

210
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Ike's Place, Veggie Grill, 800 Degrees, and TCT Foods, can not be visited at any time
True Ground LTL: & G ! ikes_place & G ! veggie_grill & G ! 800_degrees G ! tct_foods
Out Ground LTL: & G ! ikes_place & G ! veggie_grill & G ! 800_degrees G ! tct_foods
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! b & G ! c G ! a
True Lmks: ("Ike's Place", 'Veggie Grill', '800 Degrees', 'TCT Foods')
Out Lmks:['TCT Foods', 'Veggie Grill', '800 Degrees', "Ike's Place"]
Out Grounds: {'TCT Foods', 'Veggie Grill', '800 Degrees', "Ike's Place"}
Placeholder Map: {'TCT Foods': 'a', 'Veggie Grill': 'b', '800 Degrees': 'c', "Ike's Place": 'd'}
True

211
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Noah's Bagels, London Cleaners, Yogurtland, and Kinross Building South, can not be visited at any time
True Ground LTL: & G ! noahs_bagels & G ! london_cleaners & G ! yogurtland G ! kinross_building_south
Out Ground LTL: & G ! noahs_bagels & G ! london_cleaners & G ! yogurtland G ! kinross_building_south
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! b G ! a
True Lmks: ("Noah's Bagels", 'London Cleaners', 'Yogurtland', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Yogurtland', 'London Cleaners', "Noah's Bagels"]
Out Grounds: {'Kinross Building South', 'Yogurtland', 'London Cleaners', "Noah's Bagels"}
Placeholder Map: {'Kinross Building South': 'a', 'Yogurtland': 'b', 'London Cleaners': 'c', "Noah's Bagels": 'd'}
True

212
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always keep away from Mio Babbo's, Red Pelican Music, UTLA Beauty, and London Cleaners
True Ground LTL: & G ! mio_babbos & G ! red_pelican_music & G ! utla_beauty G ! london_cleaners
Out Ground LTL: & G ! mio_babbos & G ! red_pelican_music & G ! utla_beauty G ! london_cleaners
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! c & G ! d G ! b
True Lmks: ("Mio Babbo's", 'Red Pelican Music', 'UTLA Beauty', 'London Cleaners')
Out Lmks:["Mio Babbo's", 'London Cleaners', 'Red Pelican Music', 'UTLA Beauty']
Out Grounds: {"Mio Babbo's", 'London Cleaners', 'Red Pelican Music', 'UTLA Beauty'}
Placeholder Map: {"Mio Babbo's": 'a', 'London Cleaners': 'b', 'Red Pelican Music': 'c', 'UTLA Beauty': 'd'}
True

213
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always keep away from Peet's Coffee & Tea, Occidental Petroleum Heliport, Kinross Building South, and Iso Fusion Café
True Ground LTL: & G ! peets_coffee_&_tea & G ! occidental_petroleum_heliport & G ! kinross_building_south G ! iso_fusion_café
Out Ground LTL: & G ! peets_coffee_&_tea & G ! occidental_petroleum_heliport & G ! kinross_building_south G ! iso_fusion_café
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! a G ! d
True Lmks: ("Peet's Coffee & Tea", 'Occidental Petroleum Heliport', 'Kinross Building South', 'Iso Fusion Café')
Out Lmks:['Kinross Building South', 'Occidental Petroleum Heliport', "Peet's Coffee & Tea", 'Iso Fusion Café']
Out Grounds: {'Kinross Building South', 'Occidental Petroleum Heliport', "Peet's Coffee & Tea", 'Iso Fusion Café'}
Placeholder Map: {'Kinross Building South': 'a', 'Occidental Petroleum Heliport': 'b', "Peet's Coffee & Tea": 'c', 'Iso Fusion Café': 'd'}
True

214
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you must avoid 800 Degrees, Denny's, Peet's Coffee & Tea, and Subway, at all costs
True Ground LTL: & G ! 800_degrees & G ! dennys & G ! peets_coffee_&_tea G ! subway
Out Ground LTL: & G ! 800_degrees & G ! dennys & G ! peets_coffee_&_tea G ! subway
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! b G ! a
True Lmks: ('800 Degrees', "Denny's", "Peet's Coffee & Tea", 'Subway')
Out Lmks:['Subway', "Peet's Coffee & Tea", "Denny's", '800 Degrees']
Out Grounds: {'Subway', "Peet's Coffee & Tea", "Denny's", '800 Degrees'}
Placeholder Map: {'Subway': 'a', "Peet's Coffee & Tea": 'b', "Denny's": 'c', '800 Degrees': 'd'}
True

215
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you must avoid Iso Fusion Café, U-Mini, Gayley Center, and Denny's, at all costs
True Ground LTL: & G ! iso_fusion_café & G ! u_mini & G ! gayley_center G ! dennys
Out Ground LTL: & G ! iso_fusion_café & G ! u_mini & G ! gayley_center G ! dennys
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! a G ! b
True Lmks: ('Iso Fusion Café', 'U-Mini', 'Gayley Center', "Denny's")
Out Lmks:['Gayley Center', "Denny's", 'Iso Fusion Café', 'U-Mini']
Out Grounds: {'Gayley Center', "Denny's", 'Iso Fusion Café', 'U-Mini'}
Placeholder Map: {'Gayley Center': 'a', "Denny's": 'b', 'Iso Fusion Café': 'c', 'U-Mini': 'd'}
True

216
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Noah's Bagels, London Cleaners, U-Mini, or Parking 32
True Ground LTL: & G ! noahs_bagels & G ! london_cleaners & G ! u_mini G ! parking_32
Out Ground LTL: & G ! london_cleaners & G ! u_mini & G ! noahs_bagels G ! parking_32
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ("Noah's Bagels", 'London Cleaners', 'U-Mini', 'Parking 32')
Out Lmks:['Parking 32', 'London Cleaners', 'U-Mini', "Noah's Bagels"]
Out Grounds: {'Parking 32', 'London Cleaners', 'U-Mini', "Noah's Bagels"}
Placeholder Map: {'Parking 32': 'a', 'London Cleaners': 'b', 'U-Mini': 'c', "Noah's Bagels": 'd'}
True

217
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to bibigo, Westwood Wilshire, Novel Cafe Westwood, or Subway
True Ground LTL: & G ! bibigo & G ! westwood_wilshire & G ! novel_cafe_westwood G ! subway
Out Ground LTL: & G ! westwood_village & G ! novel_cafe_westwood & G ! bibigo G ! subway
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('bibigo', 'Westwood Wilshire', 'Novel Cafe Westwood', 'Subway')
Out Lmks:['Subway', 'Westwood Wilshire', 'Novel Cafe Westwood', 'bibigo']
Out Grounds: {'Novel Cafe Westwood', 'Westwood Village', 'Subway', 'bibigo'}
Placeholder Map: {'Novel Cafe Westwood': 'a', 'Westwood Village': 'b', 'Subway': 'c', 'bibigo': 'd'}
False

218
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid Mongol BBQ, Denny's, Parking 32, and Kinross Building South, forever
True Ground LTL: & G ! mongol_bbq & G ! dennys & G ! parking_32 G ! kinross_building_south
Out Ground LTL: & G ! mongol_bbq & G ! dennys & G ! parking_32 G ! kinross_building_south
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! b G ! a
True Lmks: ('Mongol BBQ', "Denny's", 'Parking 32', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Parking 32', 'Mongol BBQ', "Denny's"]
Out Grounds: {'Kinross Building South', 'Parking 32', 'Mongol BBQ', "Denny's"}
Placeholder Map: {'Kinross Building South': 'a', 'Parking 32': 'b', 'Mongol BBQ': 'c', "Denny's": 'd'}
True

219
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid TCT Foods, Subway, Westwood Sporting Goods, and U-Mini, forever
True Ground LTL: & G ! tct_foods & G ! subway & G ! westwood_sporting_goods G ! u_mini
Out Ground LTL: & G ! tct_foods & G ! subway & G ! westwood_sporting_goods G ! u_mini
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! b & G ! c G ! d
True Lmks: ('TCT Foods', 'Subway', 'Westwood Sporting Goods', 'U-Mini')
Out Lmks:['TCT Foods', 'Subway', 'Westwood Sporting Goods', 'U-Mini']
Out Grounds: {'TCT Foods', 'Subway', 'Westwood Sporting Goods', 'U-Mini'}
Placeholder Map: {'TCT Foods': 'a', 'Subway': 'b', 'Westwood Sporting Goods': 'c', 'U-Mini': 'd'}
True

220
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not make any single visit to Novel Cafe Westwood, Urban Outfitters, Red Pelican Music, or Village Center Newsstand
True Ground LTL: & G ! novel_cafe_westwood & G ! urban_outfitters & G ! red_pelican_music G ! village_center_newsstand
Out Ground LTL: & G ! novel_cafe_westwood & G ! urban_outfitters & G ! red_pelican_music G ! village_center_newsstand
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! b & G ! c G ! d
True Lmks: ('Novel Cafe Westwood', 'Urban Outfitters', 'Red Pelican Music', 'Village Center Newsstand')
Out Lmks:['Novel Cafe Westwood', 'Red Pelican Music', 'Urban Outfitters', 'Village Center Newsstand']
Out Grounds: {'Novel Cafe Westwood', 'Urban Outfitters', 'Red Pelican Music', 'Village Center Newsstand'}
Placeholder Map: {'Novel Cafe Westwood': 'a', 'Urban Outfitters': 'b', 'Red Pelican Music': 'c', 'Village Center Newsstand': 'd'}
True

221
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not make any single visit to UCLA Extension - Lindbrook Center, Westwood Sporting Goods, Nature's Way Café, or Westwood Wilshire
True Ground LTL: & G ! ucla_extension_lindbrook_center & G ! westwood_sporting_goods & G ! natures_way_café G ! westwood_wilshire
Out Ground LTL: & G ! ucla_extension_lindbrook_center & G ! westwood_sporting_goods & G ! natures_way_café G ! westwood_village
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ('UCLA Extension - Lindbrook Center', 'Westwood Sporting Goods', "Nature's Way Café", 'Westwood Wilshire')
Out Lmks:['UCLA Extension - Lindbrook Center', 'Westwood Wilshire', "Nature's Way Café", 'Westwood Sporting Goods']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Westwood Village', "Nature's Way Café", 'Westwood Sporting Goods'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Westwood Village': 'b', "Nature's Way Café": 'c', 'Westwood Sporting Goods': 'd'}
RER or Grounding Error

222
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: 800 Degrees, Kinross Building South, Parking 36, and Starbucks, must never be allowed to be true
True Ground LTL: & G ! 800_degrees & G ! kinross_building_south & G ! parking_36 G ! starbucks
Out Ground LTL: & G ! 800_degrees & G ! kinross_building_south & G ! parking_36 G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! b G ! c
True Lmks: ('800 Degrees', 'Kinross Building South', 'Parking 36', 'Starbucks')
Out Lmks:['Kinross Building South', 'Parking 36', 'Starbucks', '800 Degrees']
Out Grounds: {'Kinross Building South', 'Parking 36', 'Starbucks', '800 Degrees'}
Placeholder Map: {'Kinross Building South': 'a', 'Parking 36': 'b', 'Starbucks': 'c', '800 Degrees': 'd'}
True

223
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Westwood Sporting Goods, Subway, Westwood's Village Square, and Plaza la Reina, must never be allowed to be true
True Ground LTL: & G ! westwood_sporting_goods & G ! subway & G ! westwoods_village_square G ! plaza_la_reina
Out Ground LTL: & G ! westwood_sporting_goods & G ! subway & G ! westwood_village G ! plaza_la_reina
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! b G ! a
True Lmks: ('Westwood Sporting Goods', 'Subway', "Westwood's Village Square", 'Plaza la Reina')
Out Lmks:["Westwood's Village Square", 'Subway', 'Westwood Sporting Goods', 'Plaza la Reina']
Out Grounds: {'Plaza la Reina', 'Westwood Village', 'Subway', 'Westwood Sporting Goods'}
Placeholder Map: {'Plaza la Reina': 'a', 'Westwood Village': 'b', 'Subway': 'c', 'Westwood Sporting Goods': 'd'}
False

224
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go through any of Kinross Building South, UTLA Beauty, Janss Dome, or Subway
True Ground LTL: & G ! kinross_building_south & G ! utla_beauty & G ! janss_dome G ! subway
Out Ground LTL: & G ! kinross_building_south & G ! utla_beauty & G ! janss_dome G ! subway
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! b G ! c
True Lmks: ('Kinross Building South', 'UTLA Beauty', 'Janss Dome', 'Subway')
Out Lmks:['Kinross Building South', 'Janss Dome', 'Subway', 'UTLA Beauty']
Out Grounds: {'Kinross Building South', 'Janss Dome', 'Subway', 'UTLA Beauty'}
Placeholder Map: {'Kinross Building South': 'a', 'Janss Dome': 'b', 'Subway': 'c', 'UTLA Beauty': 'd'}
True

225
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go through any of UCLA Extension - Westwood Village Center, bibigo, Gayley & Lindbrook Apartments, or The Gayley Building
True Ground LTL: & G ! ucla_extension_westwood_village_center & G ! bibigo & G ! gayley_&_lindbrook_apartments G ! the_gayley_building
Out Ground LTL: & G ! bibigo & G ! gayley_&_lindbrook_apartments & G ! the_gayley_building G ! ucla_extension_westwood_village_center
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ('UCLA Extension - Westwood Village Center', 'bibigo', 'Gayley & Lindbrook Apartments', 'The Gayley Building')
Out Lmks:['Gayley & Lindbrook Apartments', 'UCLA Extension - Westwood Village Center', 'bibigo', 'The Gayley Building']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Gayley & Lindbrook Apartments', 'bibigo', 'The Gayley Building'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Gayley & Lindbrook Apartments': 'b', 'bibigo': 'c', 'The Gayley Building': 'd'}
True

226
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never visit London Cleaners, Occidental Petroleum Heliport, Noah's Bagels, Janss Dome, or 800 Degrees
True Ground LTL: & G ! london_cleaners & G ! occidental_petroleum_heliport & G ! noahs_bagels & G ! janss_dome G ! 800_degrees
Out Ground LTL: & G ! london_cleaners & G ! occidental_petroleum_heliport & G ! noahs_bagels & G ! janss_dome G ! 800_degrees
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! d & G ! a G ! h
True Lmks: ('London Cleaners', 'Occidental Petroleum Heliport', "Noah's Bagels", 'Janss Dome', '800 Degrees')
Out Lmks:['Janss Dome', 'Occidental Petroleum Heliport', 'London Cleaners', "Noah's Bagels", '800 Degrees']
Out Grounds: {'Janss Dome', 'Occidental Petroleum Heliport', 'London Cleaners', "Noah's Bagels", '800 Degrees'}
Placeholder Map: {'Janss Dome': 'a', 'Occidental Petroleum Heliport': 'b', 'London Cleaners': 'c', "Noah's Bagels": 'd', '800 Degrees': 'h'}
True

227
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never visit bibigo, Plaza la Reina, Noah's Bagels, Janss Dome, or UTLA Beauty
True Ground LTL: & G ! bibigo & G ! plaza_la_reina & G ! noahs_bagels & G ! janss_dome G ! utla_beauty
Out Ground LTL: & G ! bibigo & G ! plaza_la_reina & G ! noahs_bagels & G ! janss_dome G ! utla_beauty
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! d & G ! a G ! h
True Lmks: ('bibigo', 'Plaza la Reina', "Noah's Bagels", 'Janss Dome', 'UTLA Beauty')
Out Lmks:['Janss Dome', 'Plaza la Reina', 'bibigo', "Noah's Bagels", 'UTLA Beauty']
Out Grounds: {'Janss Dome', 'Plaza la Reina', 'bibigo', "Noah's Bagels", 'UTLA Beauty'}
Placeholder Map: {'Janss Dome': 'a', 'Plaza la Reina': 'b', 'bibigo': 'c', "Noah's Bagels": 'd', 'UTLA Beauty': 'h'}
True

228
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can never go to Iso Fusion Café, Poke Bar, bibigo, Yogurtland, or Peet's Coffee & Tea
True Ground LTL: & G ! iso_fusion_café & G ! poke_bar & G ! bibigo & G ! yogurtland G ! peets_coffee_&_tea
Out Ground LTL: & G ! poke_bar & G ! bibigo & G ! yogurtland G ! iso_fusion_café
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! h
True Lmks: ('Iso Fusion Café', 'Poke Bar', 'bibigo', 'Yogurtland', "Peet's Coffee & Tea")
Out Lmks:['bibigo', "Peet's Coffee & Tea", 'Poke Bar', 'Yogurtland', 'Iso Fusion Café']
Out Grounds: {'bibigo', "Peet's Coffee & Tea", 'Poke Bar', 'Yogurtland', 'Iso Fusion Café'}
Placeholder Map: {'bibigo': 'a', "Peet's Coffee & Tea": 'b', 'Poke Bar': 'c', 'Yogurtland': 'd', 'Iso Fusion Café': 'h'}
False

229
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can never go to The Gayley Building, London Cleaners, 800 Degrees, Westwood Wilshire, or Parking 36
True Ground LTL: & G ! the_gayley_building & G ! london_cleaners & G ! 800_degrees & G ! westwood_wilshire G ! parking_36
Out Ground LTL: & G ! london_cleaners & G ! 800_degrees & G ! westwood_village G ! parking_36
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! h & G ! b G ! d
True Lmks: ('The Gayley Building', 'London Cleaners', '800 Degrees', 'Westwood Wilshire', 'Parking 36')
Out Lmks:['The Gayley Building', 'London Cleaners', 'Westwood Wilshire', 'Parking 36', '800 Degrees']
Out Grounds: {'The Gayley Building', 'Westwood Village', 'London Cleaners', 'Parking 36', '800 Degrees'}
Placeholder Map: {'The Gayley Building': 'a', 'Westwood Village': 'b', 'London Cleaners': 'c', 'Parking 36': 'd', '800 Degrees': 'h'}
RER or Grounding Error

230
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Village Center Newsstand, Stone Canyon Creek (underground), Occidental Petroleum Heliport, Victoria's Secret, or Mongol BBQ, at any time
True Ground LTL: & G ! village_center_newsstand & G ! stone_canyon_creek_underground & G ! occidental_petroleum_heliport & G ! victorias_secret G ! mongol_bbq
Out Ground LTL: & G ! stone_canyon_creek_underground & G ! occidental_petroleum_heliport & G ! victorias_secret G ! mongol_bbq
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! b & G ! d G ! c
True Lmks: ('Village Center Newsstand', 'Stone Canyon Creek (underground)', 'Occidental Petroleum Heliport', "Victoria's Secret", 'Mongol BBQ')
Out Lmks:['Stone Canyon Creek (underground)', 'Occidental Petroleum Heliport', 'Mongol BBQ', "Victoria's Secret", 'Village Center Newsstand']
Out Grounds: {'Stone Canyon Creek (underground)', 'Occidental Petroleum Heliport', 'Mongol BBQ', "Victoria's Secret", 'Village Center Newsstand'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Occidental Petroleum Heliport': 'b', 'Mongol BBQ': 'c', "Victoria's Secret": 'd', 'Village Center Newsstand': 'h'}
False

231
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Veggie Grill, U-Mini, Gayley Center, Iso Fusion Café, or Starbucks, at any time
True Ground LTL: & G ! veggie_grill & G ! u_mini & G ! gayley_center & G ! iso_fusion_café G ! starbucks
Out Ground LTL: & G ! veggie_grill & G ! u_mini & G ! gayley_center & G ! iso_fusion_café G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! h & G ! a & G ! d G ! c
True Lmks: ('Veggie Grill', 'U-Mini', 'Gayley Center', 'Iso Fusion Café', 'Starbucks')
Out Lmks:['Gayley Center', 'Veggie Grill', 'Starbucks', 'Iso Fusion Café', 'U-Mini']
Out Grounds: {'Gayley Center', 'Veggie Grill', 'Starbucks', 'Iso Fusion Café', 'U-Mini'}
Placeholder Map: {'Gayley Center': 'a', 'Veggie Grill': 'b', 'Starbucks': 'c', 'Iso Fusion Café': 'd', 'U-Mini': 'h'}
True

232
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never visit Westwood's Village Square, Mio Babbo's, Victoria's Secret, UTLA Beauty, or The Gayley Building
True Ground LTL: & G ! westwoods_village_square & G ! mio_babbos & G ! victorias_secret & G ! utla_beauty G ! the_gayley_building
Out Ground LTL: & G ! westwood_village & G ! mio_babbos & G ! victorias_secret & G ! utla_beauty G ! the_gayley_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! h & G ! c G ! a
True Lmks: ("Westwood's Village Square", "Mio Babbo's", "Victoria's Secret", 'UTLA Beauty', 'The Gayley Building')
Out Lmks:["Westwood's Village Square", 'The Gayley Building', 'UTLA Beauty', "Mio Babbo's", "Victoria's Secret"]
Out Grounds: {'The Gayley Building', 'Westwood Village', 'UTLA Beauty', "Mio Babbo's", "Victoria's Secret"}
Placeholder Map: {'The Gayley Building': 'a', 'Westwood Village': 'b', 'UTLA Beauty': 'c', "Mio Babbo's": 'd', "Victoria's Secret": 'h'}
False

233
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never visit Kinross Building South, U-Mini, Noah's Bagels, Plaza la Reina, or bibigo
True Ground LTL: & G ! kinross_building_south & G ! u_mini & G ! noahs_bagels & G ! plaza_la_reina G ! bibigo
Out Ground LTL: & G ! kinross_building_south & G ! u_mini & G ! noahs_bagels & G ! plaza_la_reina G ! bibigo
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! d & G ! c & G ! a G ! b
True Lmks: ('Kinross Building South', 'U-Mini', "Noah's Bagels", 'Plaza la Reina', 'bibigo')
Out Lmks:['Plaza la Reina', 'bibigo', "Noah's Bagels", 'U-Mini', 'Kinross Building South']
Out Grounds: {'Plaza la Reina', 'bibigo', "Noah's Bagels", 'U-Mini', 'Kinross Building South'}
Placeholder Map: {'Plaza la Reina': 'a', 'bibigo': 'b', "Noah's Bagels": 'c', 'U-Mini': 'd', 'Kinross Building South': 'h'}
True

234
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always avoid going to Red Pelican Music, UCLA Extension - Westwood Village Center, Victoria's Secret, Nature's Way Café, and Denny's
True Ground LTL: & G ! red_pelican_music & G ! ucla_extension_westwood_village_center & G ! victorias_secret & G ! natures_way_café G ! dennys
Out Ground LTL: & G ! red_pelican_music & G ! ucla_extension_westwood_village_center & G ! victorias_secret & G ! natures_way_café G ! dennys
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! b & G ! c & G ! a G ! h
True Lmks: ('Red Pelican Music', 'UCLA Extension - Westwood Village Center', "Victoria's Secret", "Nature's Way Café", "Denny's")
Out Lmks:["Nature's Way Café", 'UCLA Extension - Westwood Village Center', "Victoria's Secret", 'Red Pelican Music', "Denny's"]
Out Grounds: {"Nature's Way Café", 'UCLA Extension - Westwood Village Center', "Victoria's Secret", 'Red Pelican Music', "Denny's"}
Placeholder Map: {"Nature's Way Café": 'a', 'UCLA Extension - Westwood Village Center': 'b', "Victoria's Secret": 'c', 'Red Pelican Music': 'd', "Denny's": 'h'}
True

235
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always avoid going to Stone Canyon Creek (underground), bibigo, Nature's Way Café, Parking 36, and The Gayley Building
True Ground LTL: & G ! stone_canyon_creek_underground & G ! bibigo & G ! natures_way_café & G ! parking_36 G ! the_gayley_building
Out Ground LTL: & G ! stone_canyon_creek_underground & G ! bibigo & G ! natures_way_café & G ! parking_36 G ! the_gayley_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! a & G ! h G ! d
True Lmks: ('Stone Canyon Creek (underground)', 'bibigo', "Nature's Way Café", 'Parking 36', 'The Gayley Building')
Out Lmks:["Nature's Way Café", 'Stone Canyon Creek (underground)', 'bibigo', 'The Gayley Building', 'Parking 36']
Out Grounds: {"Nature's Way Café", 'Stone Canyon Creek (underground)', 'bibigo', 'The Gayley Building', 'Parking 36'}
Placeholder Map: {"Nature's Way Café": 'a', 'Stone Canyon Creek (underground)': 'b', 'bibigo': 'c', 'The Gayley Building': 'd', 'Parking 36': 'h'}
True

236
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always stay away from Urban Outfitters, Poke Bar, Mongol BBQ, London Cleaners, and Janss Dome
True Ground LTL: & G ! urban_outfitters & G ! poke_bar & G ! mongol_bbq & G ! london_cleaners G ! janss_dome
Out Ground LTL: & G ! urban_outfitters & G ! poke_bar & G ! mongol_bbq & G ! london_cleaners G ! janss_dome
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! d & G ! b & G ! c G ! a
True Lmks: ('Urban Outfitters', 'Poke Bar', 'Mongol BBQ', 'London Cleaners', 'Janss Dome')
Out Lmks:['Janss Dome', 'Mongol BBQ', 'London Cleaners', 'Poke Bar', 'Urban Outfitters']
Out Grounds: {'Janss Dome', 'Mongol BBQ', 'London Cleaners', 'Poke Bar', 'Urban Outfitters'}
Placeholder Map: {'Janss Dome': 'a', 'Mongol BBQ': 'b', 'London Cleaners': 'c', 'Poke Bar': 'd', 'Urban Outfitters': 'h'}
True

237
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always stay away from 800 Degrees, Janss Dome, Denny's, Mio Babbo's, and Urban Outfitters
True Ground LTL: & G ! 800_degrees & G ! janss_dome & G ! dennys & G ! mio_babbos G ! urban_outfitters
Out Ground LTL: & G ! 800_degrees & G ! janss_dome & G ! dennys & G ! mio_babbos G ! urban_outfitters
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! a & G ! h & G ! d G ! c
True Lmks: ('800 Degrees', 'Janss Dome', "Denny's", "Mio Babbo's", 'Urban Outfitters')
Out Lmks:['Janss Dome', '800 Degrees', 'Urban Outfitters', "Mio Babbo's", "Denny's"]
Out Grounds: {'Janss Dome', '800 Degrees', 'Urban Outfitters', "Mio Babbo's", "Denny's"}
Placeholder Map: {'Janss Dome': 'a', '800 Degrees': 'b', 'Urban Outfitters': 'c', "Mio Babbo's": 'd', "Denny's": 'h'}
True

238
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you have to avoid UCLA Extension - Westwood Village Center, Mio Babbo's, Village Center Newsstand, Nature's Way Café, and Iso Fusion Café, at all costs
True Ground LTL: & G ! ucla_extension_westwood_village_center & G ! mio_babbos & G ! village_center_newsstand & G ! natures_way_café G ! iso_fusion_café
Out Ground LTL: & G ! ucla_extension_westwood_village_center & G ! mio_babbos & G ! village_center_newsstand & G ! natures_way_café G ! iso_fusion_café
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! h & G ! a G ! c
True Lmks: ('UCLA Extension - Westwood Village Center', "Mio Babbo's", 'Village Center Newsstand', "Nature's Way Café", 'Iso Fusion Café')
Out Lmks:["Nature's Way Café", 'UCLA Extension - Westwood Village Center', 'Iso Fusion Café', "Mio Babbo's", 'Village Center Newsstand']
Out Grounds: {"Nature's Way Café", 'UCLA Extension - Westwood Village Center', 'Iso Fusion Café', "Mio Babbo's", 'Village Center Newsstand'}
Placeholder Map: {"Nature's Way Café": 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Iso Fusion Café': 'c', "Mio Babbo's": 'd', 'Village Center Newsstand': 'h'}
True

239
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you have to avoid TCT Foods, Iso Fusion Café, Janss Dome, Kinross Building South, and Poke Bar, at all costs
True Ground LTL: & G ! tct_foods & G ! iso_fusion_café & G ! janss_dome & G ! kinross_building_south G ! poke_bar
Out Ground LTL: & G ! tct_foods & G ! iso_fusion_café & G ! janss_dome & G ! kinross_building_south G ! poke_bar
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! d & G ! a & G ! h G ! b
True Lmks: ('TCT Foods', 'Iso Fusion Café', 'Janss Dome', 'Kinross Building South', 'Poke Bar')
Out Lmks:['Janss Dome', 'Poke Bar', 'TCT Foods', 'Iso Fusion Café', 'Kinross Building South']
Out Grounds: {'Janss Dome', 'Poke Bar', 'TCT Foods', 'Iso Fusion Café', 'Kinross Building South'}
Placeholder Map: {'Janss Dome': 'a', 'Poke Bar': 'b', 'TCT Foods': 'c', 'Iso Fusion Café': 'd', 'Kinross Building South': 'h'}
True

240
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Gayley & Lindbrook Apartments, never go to Westwood's Village Square, never go to Denny's, never reach Urban Outfitters, and never reach Nature's Way Café
True Ground LTL: & G ! gayley_&_lindbrook_apartments & G ! westwoods_village_square & G ! dennys & G ! urban_outfitters G ! natures_way_café
Out Ground LTL: & G ! gayley_&_lindbrook_apartments & G ! westwood_village & G ! dennys & G ! urban_outfitters G ! natures_way_café
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! h & G ! d G ! a
True Lmks: ('Gayley & Lindbrook Apartments', "Westwood's Village Square", "Denny's", 'Urban Outfitters', "Nature's Way Café")
Out Lmks:["Nature's Way Café", "Westwood's Village Square", 'Gayley & Lindbrook Apartments', 'Urban Outfitters', "Denny's"]
Out Grounds: {"Nature's Way Café", 'Westwood Village', 'Gayley & Lindbrook Apartments', 'Urban Outfitters', "Denny's"}
Placeholder Map: {"Nature's Way Café": 'a', 'Westwood Village': 'b', 'Gayley & Lindbrook Apartments': 'c', 'Urban Outfitters': 'd', "Denny's": 'h'}
RER or Grounding Error

241
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Victoria's Secret, never go to Westwood Wilshire, never go to Parking 36, never reach Ike's Place, and never reach Parking 32
True Ground LTL: & G ! victorias_secret & G ! westwood_wilshire & G ! parking_36 & G ! ikes_place G ! parking_32
Out Ground LTL: & G ! victorias_secret & G ! westwood_village & G ! parking_36 & G ! ikes_place G ! parking_32
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! b & G ! c & G ! a G ! d
True Lmks: ("Victoria's Secret", 'Westwood Wilshire', 'Parking 36', "Ike's Place", 'Parking 32')
Out Lmks:['Parking 32', "Ike's Place", 'Westwood Wilshire', 'Parking 36', "Victoria's Secret"]
Out Grounds: {"Ike's Place", 'Westwood Village', 'Parking 36', 'Parking 32', "Victoria's Secret"}
Placeholder Map: {"Ike's Place": 'a', 'Westwood Village': 'b', 'Parking 36': 'c', 'Parking 32': 'd', "Victoria's Secret": 'h'}
False

242
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never reach the following locations U-Mini, Denny's, Yogurtland, Stone Canyon Creek (underground), and Plaza la Reina
True Ground LTL: & G ! u_mini & G ! dennys & G ! yogurtland & G ! stone_canyon_creek_underground G ! plaza_la_reina
Out Ground LTL: & G ! u_mini & G ! dennys & G ! yogurtland & G ! stone_canyon_creek_underground G ! plaza_la_reina
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! h & G ! c & G ! a G ! b
True Lmks: ('U-Mini', "Denny's", 'Yogurtland', 'Stone Canyon Creek (underground)', 'Plaza la Reina')
Out Lmks:['Stone Canyon Creek (underground)', 'Plaza la Reina', 'Yogurtland', 'U-Mini', "Denny's"]
Out Grounds: {'Stone Canyon Creek (underground)', 'Plaza la Reina', 'Yogurtland', 'U-Mini', "Denny's"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Plaza la Reina': 'b', 'Yogurtland': 'c', 'U-Mini': 'd', "Denny's": 'h'}
True

243
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never reach the following locations Stone Canyon Creek (underground), Denny's, Ike's Place, Gayley Center, and Urban Outfitters
True Ground LTL: & G ! stone_canyon_creek_underground & G ! dennys & G ! ikes_place & G ! gayley_center G ! urban_outfitters
Out Ground LTL: & G ! stone_canyon_creek_underground & G ! dennys & G ! ikes_place & G ! gayley_center G ! urban_outfitters
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! b & G ! c G ! d
True Lmks: ('Stone Canyon Creek (underground)', "Denny's", "Ike's Place", 'Gayley Center', 'Urban Outfitters')
Out Lmks:['Stone Canyon Creek (underground)', "Ike's Place", 'Gayley Center', 'Urban Outfitters', "Denny's"]
Out Grounds: {'Stone Canyon Creek (underground)', "Ike's Place", 'Gayley Center', 'Urban Outfitters', "Denny's"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Ike's Place": 'b', 'Gayley Center': 'c', 'Urban Outfitters': 'd', "Denny's": 'h'}
True

244
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that Ike's Place, Westwood's Village Square, Janss Dome, Urban Outfitters, and Subway, are never visited
True Ground LTL: & G ! ikes_place & G ! westwoods_village_square & G ! janss_dome & G ! urban_outfitters G ! subway
Out Ground LTL: & G ! ikes_place & G ! westwood_village & G ! janss_dome & G ! urban_outfitters G ! subway
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! a & G ! h G ! d
True Lmks: ("Ike's Place", "Westwood's Village Square", 'Janss Dome', 'Urban Outfitters', 'Subway')
Out Lmks:['Janss Dome', "Westwood's Village Square", "Ike's Place", 'Subway', 'Urban Outfitters']
Out Grounds: {'Janss Dome', "Ike's Place", 'Westwood Village', 'Subway', 'Urban Outfitters'}
Placeholder Map: {'Janss Dome': 'a', "Ike's Place": 'b', 'Westwood Village': 'c', 'Subway': 'd', 'Urban Outfitters': 'h'}
False

245
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that TCT Foods, Kinross Building South, Native Foods, Starbucks, and U-Mini, are never visited
True Ground LTL: & G ! tct_foods & G ! kinross_building_south & G ! native_foods & G ! starbucks G ! u_mini
Out Ground LTL: & G ! tct_foods & G ! kinross_building_south & G ! native_foods & G ! starbucks G ! u_mini
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! h & G ! a & G ! c G ! d
True Lmks: ('TCT Foods', 'Kinross Building South', 'Native Foods', 'Starbucks', 'U-Mini')
Out Lmks:['Native Foods', 'TCT Foods', 'Starbucks', 'U-Mini', 'Kinross Building South']
Out Grounds: {'Native Foods', 'TCT Foods', 'Starbucks', 'U-Mini', 'Kinross Building South'}
Placeholder Map: {'Native Foods': 'a', 'TCT Foods': 'b', 'Starbucks': 'c', 'U-Mini': 'd', 'Kinross Building South': 'h'}
True

246
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Parking 36, Victoria's Secret, Veggie Grill, Westwood Sporting Goods, and Village Center Newsstand, should never be reached
True Ground LTL: & G ! parking_36 & G ! victorias_secret & G ! veggie_grill & G ! westwood_sporting_goods G ! village_center_newsstand
Out Ground LTL: & G ! parking_36 & G ! victorias_secret & G ! veggie_grill & G ! westwood_sporting_goods G ! village_center_newsstand
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! a & G ! d G ! h
True Lmks: ('Parking 36', "Victoria's Secret", 'Veggie Grill', 'Westwood Sporting Goods', 'Village Center Newsstand')
Out Lmks:['Veggie Grill', 'Parking 36', "Victoria's Secret", 'Westwood Sporting Goods', 'Village Center Newsstand']
Out Grounds: {'Veggie Grill', 'Parking 36', "Victoria's Secret", 'Westwood Sporting Goods', 'Village Center Newsstand'}
Placeholder Map: {'Veggie Grill': 'a', 'Parking 36': 'b', "Victoria's Secret": 'c', 'Westwood Sporting Goods': 'd', 'Village Center Newsstand': 'h'}
True

247
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Parking 32, UCLA Extension - Westwood Village Center, Occidental Petroleum Heliport, Westwood's Village Square, and Noah's Bagels, should never be reached
True Ground LTL: & G ! parking_32 & G ! ucla_extension_westwood_village_center & G ! occidental_petroleum_heliport & G ! westwoods_village_square G ! noahs_bagels
Out Ground LTL: & G ! parking_32 & G ! ucla_extension_westwood_village_center & G ! occidental_petroleum_heliport & G ! westwood_village G ! noahs_bagels
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! b & G ! a & G ! c G ! d
True Lmks: ('Parking 32', 'UCLA Extension - Westwood Village Center', 'Occidental Petroleum Heliport', "Westwood's Village Square", "Noah's Bagels")
Out Lmks:['Occidental Petroleum Heliport', "Westwood's Village Square", 'UCLA Extension - Westwood Village Center', "Noah's Bagels", 'Parking 32']
Out Grounds: {'Occidental Petroleum Heliport', 'UCLA Extension - Westwood Village Center', 'Westwood Village', "Noah's Bagels", 'Parking 32'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'UCLA Extension - Westwood Village Center': 'b', 'Westwood Village': 'c', "Noah's Bagels": 'd', 'Parking 32': 'h'}
False

248
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to London Cleaners, Noah's Bagels, Westwood Sporting Goods, Mio Babbo's, or bibigo
True Ground LTL: & G ! london_cleaners & G ! noahs_bagels & G ! westwood_sporting_goods & G ! mio_babbos G ! bibigo
Out Ground LTL: & G ! noahs_bagels & G ! westwood_sporting_goods & G ! mio_babbos G ! bibigo
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! h & G ! d G ! a
True Lmks: ('London Cleaners', "Noah's Bagels", 'Westwood Sporting Goods', "Mio Babbo's", 'bibigo')
Out Lmks:['bibigo', 'London Cleaners', "Noah's Bagels", "Mio Babbo's", 'Westwood Sporting Goods']
Out Grounds: {'bibigo', 'London Cleaners', "Noah's Bagels", "Mio Babbo's", 'Westwood Sporting Goods'}
Placeholder Map: {'bibigo': 'a', 'London Cleaners': 'b', "Noah's Bagels": 'c', "Mio Babbo's": 'd', 'Westwood Sporting Goods': 'h'}
False

249
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Victoria's Secret, The Gayley Building, Gayley & Lindbrook Apartments, Westwood's Village Square, or Native Foods
True Ground LTL: & G ! victorias_secret & G ! the_gayley_building & G ! gayley_&_lindbrook_apartments & G ! westwoods_village_square G ! native_foods
Out Ground LTL: & G ! the_gayley_building & G ! gayley_&_lindbrook_apartments & G ! westwood_village G ! native_foods
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! c G ! a
True Lmks: ("Victoria's Secret", 'The Gayley Building', 'Gayley & Lindbrook Apartments', "Westwood's Village Square", 'Native Foods')
Out Lmks:['Native Foods', "Westwood's Village Square", 'The Gayley Building', 'Gayley & Lindbrook Apartments', "Victoria's Secret"]
Out Grounds: {'Native Foods', 'The Gayley Building', 'Westwood Village', 'Gayley & Lindbrook Apartments', "Victoria's Secret"}
Placeholder Map: {'Native Foods': 'a', 'The Gayley Building': 'b', 'Westwood Village': 'c', 'Gayley & Lindbrook Apartments': 'd', "Victoria's Secret": 'h'}
False

250
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not go to Veggie Grill, Occidental Petroleum Heliport, Ike's Place, Nature's Way Café, or Parking 32
True Ground LTL: & G ! veggie_grill & G ! occidental_petroleum_heliport & G ! ikes_place & G ! natures_way_café G ! parking_32
Out Ground LTL: & G ! occidental_petroleum_heliport & G ! ikes_place & G ! natures_way_café G ! parking_32
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! a G ! h
True Lmks: ('Veggie Grill', 'Occidental Petroleum Heliport', "Ike's Place", "Nature's Way Café", 'Parking 32')
Out Lmks:["Nature's Way Café", 'Occidental Petroleum Heliport', "Ike's Place", 'Veggie Grill', 'Parking 32']
Out Grounds: {"Nature's Way Café", 'Occidental Petroleum Heliport', "Ike's Place", 'Veggie Grill', 'Parking 32'}
Placeholder Map: {"Nature's Way Café": 'a', 'Occidental Petroleum Heliport': 'b', "Ike's Place": 'c', 'Veggie Grill': 'd', 'Parking 32': 'h'}
False

251
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not go to Gayley Center, Peet's Coffee & Tea, Parking 36, Veggie Grill, or Stone Canyon Creek (underground)
True Ground LTL: & G ! gayley_center & G ! peets_coffee_&_tea & G ! parking_36 & G ! veggie_grill G ! stone_canyon_creek_underground
Out Ground LTL: & G ! peets_coffee_&_tea & G ! parking_36 & G ! veggie_grill G ! stone_canyon_creek_underground
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! h & G ! c G ! a
True Lmks: ('Gayley Center', "Peet's Coffee & Tea", 'Parking 36', 'Veggie Grill', 'Stone Canyon Creek (underground)')
Out Lmks:['Stone Canyon Creek (underground)', "Peet's Coffee & Tea", 'Gayley Center', 'Veggie Grill', 'Parking 36']
Out Grounds: {'Stone Canyon Creek (underground)', "Peet's Coffee & Tea", 'Veggie Grill', 'Gayley Center', 'Parking 36'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Peet's Coffee & Tea": 'b', 'Veggie Grill': 'c', 'Gayley Center': 'd', 'Parking 36': 'h'}
False

252
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can go anywhere but Denny's, Westwood's Village Square, Yogurtland, Iso Fusion Café, and Gayley Center
True Ground LTL: & G ! dennys & G ! westwoods_village_square & G ! yogurtland & G ! iso_fusion_café G ! gayley_center
Out Ground LTL: & G ! dennys & G ! westwood_village & G ! yogurtland & G ! iso_fusion_café G ! gayley_center
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! b & G ! c & G ! d G ! a
True Lmks: ("Denny's", "Westwood's Village Square", 'Yogurtland', 'Iso Fusion Café', 'Gayley Center')
Out Lmks:["Westwood's Village Square", 'Gayley Center', 'Yogurtland', 'Iso Fusion Café', "Denny's"]
Out Grounds: {'Gayley Center', 'Westwood Village', 'Yogurtland', 'Iso Fusion Café', "Denny's"}
Placeholder Map: {'Gayley Center': 'a', 'Westwood Village': 'b', 'Yogurtland': 'c', 'Iso Fusion Café': 'd', "Denny's": 'h'}
RER or Grounding Error

253
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can go anywhere but Victoria's Secret, Occidental Petroleum Heliport, Veggie Grill, Starbucks, and The Gayley Building
True Ground LTL: & G ! victorias_secret & G ! occidental_petroleum_heliport & G ! veggie_grill & G ! starbucks G ! the_gayley_building
Out Ground LTL: & G ! victorias_secret & G ! occidental_petroleum_heliport & G ! veggie_grill & G ! starbucks G ! the_gayley_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! a & G ! c & G ! d G ! b
True Lmks: ("Victoria's Secret", 'Occidental Petroleum Heliport', 'Veggie Grill', 'Starbucks', 'The Gayley Building')
Out Lmks:['Occidental Petroleum Heliport', 'The Gayley Building', 'Veggie Grill', 'Starbucks', "Victoria's Secret"]
Out Grounds: {'Occidental Petroleum Heliport', 'The Gayley Building', 'Veggie Grill', 'Starbucks', "Victoria's Secret"}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'The Gayley Building': 'b', 'Veggie Grill': 'c', 'Starbucks': 'd', "Victoria's Secret": 'h'}
True

254
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Mongol BBQ, Parking 36, Ike's Place, Starbucks, and Iso Fusion Café, can not be visited at any time
True Ground LTL: & G ! mongol_bbq & G ! parking_36 & G ! ikes_place & G ! starbucks G ! iso_fusion_café
Out Ground LTL: & G ! mongol_bbq & G ! parking_36 & G ! ikes_place & G ! starbucks G ! iso_fusion_café
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! h & G ! a & G ! c G ! d
True Lmks: ('Mongol BBQ', 'Parking 36', "Ike's Place", 'Starbucks', 'Iso Fusion Café')
Out Lmks:["Ike's Place", 'Mongol BBQ', 'Starbucks', 'Iso Fusion Café', 'Parking 36']
Out Grounds: {"Ike's Place", 'Mongol BBQ', 'Starbucks', 'Iso Fusion Café', 'Parking 36'}
Placeholder Map: {"Ike's Place": 'a', 'Mongol BBQ': 'b', 'Starbucks': 'c', 'Iso Fusion Café': 'd', 'Parking 36': 'h'}
True

255
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Nature's Way Café, Yogurtland, Veggie Grill, Red Pelican Music, and Poke Bar, can not be visited at any time
True Ground LTL: & G ! natures_way_café & G ! yogurtland & G ! veggie_grill & G ! red_pelican_music G ! poke_bar
Out Ground LTL: & G ! natures_way_café & G ! yogurtland & G ! veggie_grill & G ! red_pelican_music G ! poke_bar
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! b & G ! d G ! c
True Lmks: ("Nature's Way Café", 'Yogurtland', 'Veggie Grill', 'Red Pelican Music', 'Poke Bar')
Out Lmks:["Nature's Way Café", 'Veggie Grill', 'Poke Bar', 'Red Pelican Music', 'Yogurtland']
Out Grounds: {"Nature's Way Café", 'Veggie Grill', 'Poke Bar', 'Red Pelican Music', 'Yogurtland'}
Placeholder Map: {"Nature's Way Café": 'a', 'Veggie Grill': 'b', 'Poke Bar': 'c', 'Red Pelican Music': 'd', 'Yogurtland': 'h'}
True

256
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always keep away from Native Foods, Subway, Parking 36, Janss Dome, and UCLA Extension - Westwood Village Center
True Ground LTL: & G ! native_foods & G ! subway & G ! parking_36 & G ! janss_dome G ! ucla_extension_westwood_village_center
Out Ground LTL: & G ! native_foods & G ! subway & G ! parking_36 & G ! janss_dome G ! ucla_extension_westwood_village_center
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! h & G ! a G ! c
True Lmks: ('Native Foods', 'Subway', 'Parking 36', 'Janss Dome', 'UCLA Extension - Westwood Village Center')
Out Lmks:['Janss Dome', 'Native Foods', 'UCLA Extension - Westwood Village Center', 'Subway', 'Parking 36']
Out Grounds: {'Janss Dome', 'Native Foods', 'UCLA Extension - Westwood Village Center', 'Subway', 'Parking 36'}
Placeholder Map: {'Janss Dome': 'a', 'Native Foods': 'b', 'UCLA Extension - Westwood Village Center': 'c', 'Subway': 'd', 'Parking 36': 'h'}
True

257
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always keep away from U-Mini, Nature's Way Café, Westwood's Village Square, UCLA Extension - Westwood Village Center, and Janss Dome
True Ground LTL: & G ! u_mini & G ! natures_way_café & G ! westwoods_village_square & G ! ucla_extension_westwood_village_center G ! janss_dome
Out Ground LTL: & G ! u_mini & G ! natures_way_café & G ! westwood_village & G ! ucla_extension_westwood_village_center G ! janss_dome
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! a & G ! d & G ! c G ! b
True Lmks: ('U-Mini', "Nature's Way Café", "Westwood's Village Square", 'UCLA Extension - Westwood Village Center', 'Janss Dome')
Out Lmks:["Nature's Way Café", 'Janss Dome', "Westwood's Village Square", 'UCLA Extension - Westwood Village Center', 'U-Mini']
Out Grounds: {"Nature's Way Café", 'Janss Dome', 'UCLA Extension - Westwood Village Center', 'Westwood Village', 'U-Mini'}
Placeholder Map: {"Nature's Way Café": 'a', 'Janss Dome': 'b', 'UCLA Extension - Westwood Village Center': 'c', 'Westwood Village': 'd', 'U-Mini': 'h'}
RER or Grounding Error

258
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you must avoid Westwood Wilshire, Subway, The Gayley Building, Gayley & Lindbrook Apartments, and 800 Degrees, at all costs
True Ground LTL: & G ! westwood_wilshire & G ! subway & G ! the_gayley_building & G ! gayley_&_lindbrook_apartments G ! 800_degrees
Out Ground LTL: & G ! westwood_village & G ! subway & G ! the_gayley_building & G ! gayley_&_lindbrook_apartments G ! 800_degrees
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! a & G ! d G ! h
True Lmks: ('Westwood Wilshire', 'Subway', 'The Gayley Building', 'Gayley & Lindbrook Apartments', '800 Degrees')
Out Lmks:['The Gayley Building', 'Gayley & Lindbrook Apartments', 'Subway', 'Westwood Wilshire', '800 Degrees']
Out Grounds: {'The Gayley Building', 'Westwood Village', 'Subway', 'Gayley & Lindbrook Apartments', '800 Degrees'}
Placeholder Map: {'The Gayley Building': 'a', 'Westwood Village': 'b', 'Subway': 'c', 'Gayley & Lindbrook Apartments': 'd', '800 Degrees': 'h'}
RER or Grounding Error

259
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you must avoid Mongol BBQ, Plaza la Reina, Native Foods, Yogurtland, and Starbucks, at all costs
True Ground LTL: & G ! mongol_bbq & G ! plaza_la_reina & G ! native_foods & G ! yogurtland G ! starbucks
Out Ground LTL: & G ! mongol_bbq & G ! plaza_la_reina & G ! native_foods & G ! yogurtland G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! a & G ! h G ! d
True Lmks: ('Mongol BBQ', 'Plaza la Reina', 'Native Foods', 'Yogurtland', 'Starbucks')
Out Lmks:['Native Foods', 'Plaza la Reina', 'Mongol BBQ', 'Starbucks', 'Yogurtland']
Out Grounds: {'Native Foods', 'Plaza la Reina', 'Mongol BBQ', 'Starbucks', 'Yogurtland'}
Placeholder Map: {'Native Foods': 'a', 'Plaza la Reina': 'b', 'Mongol BBQ': 'c', 'Starbucks': 'd', 'Yogurtland': 'h'}
True

260
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Plaza la Reina, Urban Outfitters, Starbucks, UTLA Beauty, or Stone Canyon Creek (underground)
True Ground LTL: & G ! plaza_la_reina & G ! urban_outfitters & G ! starbucks & G ! utla_beauty G ! stone_canyon_creek_underground
Out Ground LTL: & G ! urban_outfitters & G ! starbucks & G ! utla_beauty G ! stone_canyon_creek_underground
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! c & G ! h G ! a
True Lmks: ('Plaza la Reina', 'Urban Outfitters', 'Starbucks', 'UTLA Beauty', 'Stone Canyon Creek (underground)')
Out Lmks:['Stone Canyon Creek (underground)', 'Plaza la Reina', 'Starbucks', 'Urban Outfitters', 'UTLA Beauty']
Out Grounds: {'Stone Canyon Creek (underground)', 'Plaza la Reina', 'Starbucks', 'Urban Outfitters', 'UTLA Beauty'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Plaza la Reina': 'b', 'Starbucks': 'c', 'Urban Outfitters': 'd', 'UTLA Beauty': 'h'}
False

261
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Parking 36, bibigo, London Cleaners, Kinross Building South, or Occidental Petroleum Heliport
True Ground LTL: & G ! parking_36 & G ! bibigo & G ! london_cleaners & G ! kinross_building_south G ! occidental_petroleum_heliport
Out Ground LTL: & G ! bibigo & G ! london_cleaners & G ! kinross_building_south G ! parking_36
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! h
True Lmks: ('Parking 36', 'bibigo', 'London Cleaners', 'Kinross Building South', 'Occidental Petroleum Heliport')
Out Lmks:['Occidental Petroleum Heliport', 'bibigo', 'London Cleaners', 'Kinross Building South', 'Parking 36']
Out Grounds: {'Occidental Petroleum Heliport', 'bibigo', 'London Cleaners', 'Kinross Building South', 'Parking 36'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'bibigo': 'b', 'London Cleaners': 'c', 'Kinross Building South': 'd', 'Parking 36': 'h'}
False

262
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: avoid Westwood Sporting Goods, bibigo, Westwood Wilshire, Ike's Place, and The Gayley Building, forever
True Ground LTL: & G ! westwood_sporting_goods & G ! bibigo & G ! westwood_wilshire & G ! ikes_place G ! the_gayley_building
Out Ground LTL: & G F westwood_sporting_goods & G F bibigo & G F westwood_village & G F ikes_place G F the_gayley_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G F h & G F a & G F d & G F b G F c
True Lmks: ('Westwood Sporting Goods', 'bibigo', 'Westwood Wilshire', "Ike's Place", 'The Gayley Building')
Out Lmks:['bibigo', 'The Gayley Building', "Ike's Place", 'Westwood Wilshire', 'Westwood Sporting Goods']
Out Grounds: {'bibigo', "Ike's Place", 'The Gayley Building', 'Westwood Village', 'Westwood Sporting Goods'}
Placeholder Map: {'bibigo': 'a', "Ike's Place": 'b', 'The Gayley Building': 'c', 'Westwood Village': 'd', 'Westwood Sporting Goods': 'h'}
False

263
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: avoid UTLA Beauty, Ike's Place, Westwood Sporting Goods, Urban Outfitters, and Mongol BBQ, forever
True Ground LTL: & G ! utla_beauty & G ! ikes_place & G ! westwood_sporting_goods & G ! urban_outfitters G ! mongol_bbq
Out Ground LTL: & G ! utla_beauty & G ! ikes_place & G ! westwood_sporting_goods & G ! urban_outfitters G ! mongol_bbq
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! a & G ! h & G ! c G ! b
True Lmks: ('UTLA Beauty', "Ike's Place", 'Westwood Sporting Goods', 'Urban Outfitters', 'Mongol BBQ')
Out Lmks:["Ike's Place", 'Mongol BBQ', 'Urban Outfitters', 'UTLA Beauty', 'Westwood Sporting Goods']
Out Grounds: {"Ike's Place", 'Mongol BBQ', 'Urban Outfitters', 'UTLA Beauty', 'Westwood Sporting Goods'}
Placeholder Map: {"Ike's Place": 'a', 'Mongol BBQ': 'b', 'Urban Outfitters': 'c', 'UTLA Beauty': 'd', 'Westwood Sporting Goods': 'h'}
True

264
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not make any single visit to Occidental Petroleum Heliport, Veggie Grill, Westwood Sporting Goods, Red Pelican Music, or Plaza la Reina
True Ground LTL: & G ! occidental_petroleum_heliport & G ! veggie_grill & G ! westwood_sporting_goods & G ! red_pelican_music G ! plaza_la_reina
Out Ground LTL: & G ! occidental_petroleum_heliport & G ! veggie_grill & G ! westwood_sporting_goods & G ! red_pelican_music G ! plaza_la_reina
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! c & G ! h & G ! d G ! b
True Lmks: ('Occidental Petroleum Heliport', 'Veggie Grill', 'Westwood Sporting Goods', 'Red Pelican Music', 'Plaza la Reina')
Out Lmks:['Occidental Petroleum Heliport', 'Plaza la Reina', 'Veggie Grill', 'Red Pelican Music', 'Westwood Sporting Goods']
Out Grounds: {'Occidental Petroleum Heliport', 'Plaza la Reina', 'Veggie Grill', 'Red Pelican Music', 'Westwood Sporting Goods'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Plaza la Reina': 'b', 'Veggie Grill': 'c', 'Red Pelican Music': 'd', 'Westwood Sporting Goods': 'h'}
True

265
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not make any single visit to Peet's Coffee & Tea, UCLA Extension - Westwood Village Center, Iso Fusion Café, The Gayley Building, or Urban Outfitters
True Ground LTL: & G ! peets_coffee_&_tea & G ! ucla_extension_westwood_village_center & G ! iso_fusion_café & G ! the_gayley_building G ! urban_outfitters
Out Ground LTL: & G ! peets_coffee_&_tea & G ! ucla_extension_westwood_village_center & G ! iso_fusion_café & G ! the_gayley_building G ! urban_outfitters
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! d & G ! a G ! h
True Lmks: ("Peet's Coffee & Tea", 'UCLA Extension - Westwood Village Center', 'Iso Fusion Café', 'The Gayley Building', 'Urban Outfitters')
Out Lmks:['The Gayley Building', 'UCLA Extension - Westwood Village Center', "Peet's Coffee & Tea", 'Urban Outfitters', 'Iso Fusion Café']
Out Grounds: {'The Gayley Building', 'UCLA Extension - Westwood Village Center', "Peet's Coffee & Tea", 'Iso Fusion Café', 'Urban Outfitters'}
Placeholder Map: {'The Gayley Building': 'a', 'UCLA Extension - Westwood Village Center': 'b', "Peet's Coffee & Tea": 'c', 'Iso Fusion Café': 'd', 'Urban Outfitters': 'h'}
True

266
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that none among Village Center Newsstand, Urban Outfitters, Noah's Bagels, UTLA Beauty, and Victoria's Secret, are ever visited
True Ground LTL: & G ! village_center_newsstand & G ! urban_outfitters & G ! noahs_bagels & G ! utla_beauty G ! victorias_secret
Out Ground LTL: & G ! village_center_newsstand & G ! urban_outfitters & G ! noahs_bagels & G ! utla_beauty G ! victorias_secret
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! b & G ! a & G ! c G ! d
True Lmks: ('Village Center Newsstand', 'Urban Outfitters', "Noah's Bagels", 'UTLA Beauty', "Victoria's Secret")
Out Lmks:["Noah's Bagels", 'Urban Outfitters', 'UTLA Beauty', "Victoria's Secret", 'Village Center Newsstand']
Out Grounds: {"Noah's Bagels", 'Urban Outfitters', 'UTLA Beauty', "Victoria's Secret", 'Village Center Newsstand'}
Placeholder Map: {"Noah's Bagels": 'a', 'Urban Outfitters': 'b', 'UTLA Beauty': 'c', "Victoria's Secret": 'd', 'Village Center Newsstand': 'h'}
True

267
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that none among Village Center Newsstand, Veggie Grill, Nature's Way Café, Stone Canyon Creek (underground), and Parking 36, are ever visited
True Ground LTL: & G ! village_center_newsstand & G ! veggie_grill & G ! natures_way_café & G ! stone_canyon_creek_underground G ! parking_36
Out Ground LTL: & G ! village_center_newsstand & G ! veggie_grill & G ! natures_way_café & G ! stone_canyon_creek_underground G ! parking_36
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! c & G ! a & G ! b G ! d
True Lmks: ('Village Center Newsstand', 'Veggie Grill', "Nature's Way Café", 'Stone Canyon Creek (underground)', 'Parking 36')
Out Lmks:["Nature's Way Café", 'Stone Canyon Creek (underground)', 'Veggie Grill', 'Parking 36', 'Village Center Newsstand']
Out Grounds: {"Nature's Way Café", 'Stone Canyon Creek (underground)', 'Veggie Grill', 'Parking 36', 'Village Center Newsstand'}
Placeholder Map: {"Nature's Way Café": 'a', 'Stone Canyon Creek (underground)': 'b', 'Veggie Grill': 'c', 'Parking 36': 'd', 'Village Center Newsstand': 'h'}
True

268
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Urban Outfitters, Victoria's Secret, Native Foods, Noah's Bagels, and Plaza la Reina, must never be allowed to hold true
True Ground LTL: & G ! urban_outfitters & G ! victorias_secret & G ! native_foods & G ! noahs_bagels G ! plaza_la_reina
Out Ground LTL: & G ! urban_outfitters & G ! victorias_secret & G ! native_foods & G ! noahs_bagels G ! plaza_la_reina
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! h & G ! a & G ! c G ! b
True Lmks: ('Urban Outfitters', "Victoria's Secret", 'Native Foods', "Noah's Bagels", 'Plaza la Reina')
Out Lmks:['Plaza la Reina', 'Native Foods', "Noah's Bagels", 'Urban Outfitters', "Victoria's Secret"]
Out Grounds: {'Native Foods', 'Plaza la Reina', "Noah's Bagels", 'Urban Outfitters', "Victoria's Secret"}
Placeholder Map: {'Native Foods': 'a', 'Plaza la Reina': 'b', "Noah's Bagels": 'c', 'Urban Outfitters': 'd', "Victoria's Secret": 'h'}
True

269
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: London Cleaners, Janss Dome, Veggie Grill, TCT Foods, and Starbucks, must never be allowed to hold true
True Ground LTL: & G ! london_cleaners & G ! janss_dome & G ! veggie_grill & G ! tct_foods G ! starbucks
Out Ground LTL: & G ! london_cleaners & G ! janss_dome & G ! veggie_grill & G ! tct_foods G ! starbucks
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! a & G ! b & G ! d G ! h
True Lmks: ('London Cleaners', 'Janss Dome', 'Veggie Grill', 'TCT Foods', 'Starbucks')
Out Lmks:['Janss Dome', 'Veggie Grill', 'London Cleaners', 'TCT Foods', 'Starbucks']
Out Grounds: {'Janss Dome', 'Veggie Grill', 'London Cleaners', 'TCT Foods', 'Starbucks'}
Placeholder Map: {'Janss Dome': 'a', 'Veggie Grill': 'b', 'London Cleaners': 'c', 'TCT Foods': 'd', 'Starbucks': 'h'}
True

270
past_avoidance ['a', 'b'] Input utterance: do not go to Peet's Coffee & Tea, until you see Native Foods
True Ground LTL: U ! peets_coffee_&_tea native_foods
Out Ground LTL: U peets_coffee_&_tea native_foods
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ("Peet's Coffee & Tea", 'Native Foods')
Out Lmks:['Native Foods', "Peet's Coffee & Tea"]
Out Grounds: {'Native Foods', "Peet's Coffee & Tea"}
Placeholder Map: {'Native Foods': 'a', "Peet's Coffee & Tea": 'b'}
False

271
past_avoidance ['a', 'b'] Input utterance: do not go to Subway, until you see Kinross Building South
True Ground LTL: U ! subway kinross_building_south
Out Ground LTL: U subway kinross_building_south
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Subway', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Subway']
Out Grounds: {'Kinross Building South', 'Subway'}
Placeholder Map: {'Kinross Building South': 'a', 'Subway': 'b'}
False

272
past_avoidance ['a', 'b'] Input utterance: avoid visiting Novel Cafe Westwood, till you observe The Gayley Building
True Ground LTL: U ! novel_cafe_westwood the_gayley_building
Out Ground LTL: U novel_cafe_westwood the_gayley_building
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Novel Cafe Westwood', 'The Gayley Building')
Out Lmks:['Novel Cafe Westwood', 'The Gayley Building']
Out Grounds: {'Novel Cafe Westwood', 'The Gayley Building'}
Placeholder Map: {'Novel Cafe Westwood': 'a', 'The Gayley Building': 'b'}
False

273
past_avoidance ['a', 'b'] Input utterance: avoid visiting Gayley Center, till you observe Parking 36
True Ground LTL: U ! gayley_center parking_36
Out Ground LTL: U gayley_center parking_36
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Gayley Center', 'Parking 36')
Out Lmks:['Parking 36', 'Gayley Center']
Out Grounds: {'Parking 36', 'Gayley Center'}
Placeholder Map: {'Parking 36': 'a', 'Gayley Center': 'b'}
False

274
past_avoidance ['a', 'b'] Input utterance: do not go to UCLA Extension - Lindbrook Center, until Mio Babbo's, has occured
True Ground LTL: U ! ucla_extension_lindbrook_center mio_babbos
Out Ground LTL: & U ! ucla_extension_lindbrook_center mio_babbos F ucla_extension_lindbrook_center
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('UCLA Extension - Lindbrook Center', "Mio Babbo's")
Out Lmks:['UCLA Extension - Lindbrook Center', "Mio Babbo's"]
Out Grounds: {'UCLA Extension - Lindbrook Center', "Mio Babbo's"}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', "Mio Babbo's": 'b'}
False

275
past_avoidance ['a', 'b'] Input utterance: do not go to Janss Dome, until UCLA Extension - Lindbrook Center, has occured
True Ground LTL: U ! janss_dome ucla_extension_lindbrook_center
Out Ground LTL: & U ! janss_dome ucla_extension_lindbrook_center F janss_dome
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Janss Dome', 'UCLA Extension - Lindbrook Center')
Out Lmks:['Janss Dome', 'UCLA Extension - Lindbrook Center']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Janss Dome'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Janss Dome': 'b'}
False

276
past_avoidance ['a', 'b'] Input utterance: once you observe bibigo, only then are you allowed to go to Starbucks
True Ground LTL: U ! starbucks bibigo
Out Ground LTL: & U ! starbucks bibigo F starbucks
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Starbucks', 'bibigo')
Out Lmks:['Starbucks', 'bibigo']
Out Grounds: {'Starbucks', 'bibigo'}
Placeholder Map: {'Starbucks': 'a', 'bibigo': 'b'}
False

277
past_avoidance ['a', 'b'] Input utterance: once you observe Parking 36, only then are you allowed to go to The Gayley Building
True Ground LTL: U ! the_gayley_building parking_36
Out Ground LTL: U the_gayley_building parking_36
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('The Gayley Building', 'Parking 36')
Out Lmks:['Parking 36', 'The Gayley Building']
Out Grounds: {'Parking 36', 'The Gayley Building'}
Placeholder Map: {'Parking 36': 'a', 'The Gayley Building': 'b'}
False

278
past_avoidance ['a', 'b'] Input utterance: you can visit Novel Cafe Westwood, only after seeing UCLA Extension - Lindbrook Center
True Ground LTL: U ! novel_cafe_westwood ucla_extension_lindbrook_center
Out Ground LTL: & U ! novel_cafe_westwood ucla_extension_lindbrook_center F novel_cafe_westwood
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Novel Cafe Westwood', 'UCLA Extension - Lindbrook Center')
Out Lmks:['UCLA Extension - Lindbrook Center', 'Novel Cafe Westwood']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Novel Cafe Westwood'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Novel Cafe Westwood': 'b'}
False

279
past_avoidance ['a', 'b'] Input utterance: you can visit Gayley & Lindbrook Apartments, only after seeing Westwood Sporting Goods
True Ground LTL: U ! gayley_&_lindbrook_apartments westwood_sporting_goods
Out Ground LTL: & U ! gayley_&_lindbrook_apartments westwood_sporting_goods F gayley_&_lindbrook_apartments
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Gayley & Lindbrook Apartments', 'Westwood Sporting Goods')
Out Lmks:['Gayley & Lindbrook Apartments', 'Westwood Sporting Goods']
Out Grounds: {'Gayley & Lindbrook Apartments', 'Westwood Sporting Goods'}
Placeholder Map: {'Gayley & Lindbrook Apartments': 'a', 'Westwood Sporting Goods': 'b'}
False

280
past_avoidance ['a', 'b'] Input utterance: do not go to Parking 32, until you go to The Gayley Building
True Ground LTL: U ! parking_32 the_gayley_building
Out Ground LTL: & U ! parking_32 the_gayley_building F parking_32
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Parking 32', 'The Gayley Building')
Out Lmks:['Parking 32', 'The Gayley Building']
Out Grounds: {'Parking 32', 'The Gayley Building'}
Placeholder Map: {'Parking 32': 'a', 'The Gayley Building': 'b'}
False

281
past_avoidance ['a', 'b'] Input utterance: do not go to Janss Dome, until you go to Occidental Petroleum Heliport
True Ground LTL: U ! janss_dome occidental_petroleum_heliport
Out Ground LTL: & U ! janss_dome occidental_petroleum_heliport F janss_dome
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Janss Dome', 'Occidental Petroleum Heliport')
Out Lmks:['Janss Dome', 'Occidental Petroleum Heliport']
Out Grounds: {'Janss Dome', 'Occidental Petroleum Heliport'}
Placeholder Map: {'Janss Dome': 'a', 'Occidental Petroleum Heliport': 'b'}
False

282
past_avoidance ['a', 'b'] Input utterance: avoid TCT Foods, until you reach Native Foods
True Ground LTL: U ! tct_foods native_foods
Out Ground LTL: U tct_foods native_foods
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('TCT Foods', 'Native Foods')
Out Lmks:['TCT Foods', 'Native Foods']
Out Grounds: {'TCT Foods', 'Native Foods'}
Placeholder Map: {'TCT Foods': 'a', 'Native Foods': 'b'}
False

283
past_avoidance ['a', 'b'] Input utterance: avoid Red Pelican Music, until you reach Poke Bar
True Ground LTL: U ! red_pelican_music poke_bar
Out Ground LTL: U red_pelican_music poke_bar
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Red Pelican Music', 'Poke Bar')
Out Lmks:['Poke Bar', 'Red Pelican Music']
Out Grounds: {'Poke Bar', 'Red Pelican Music'}
Placeholder Map: {'Poke Bar': 'a', 'Red Pelican Music': 'b'}
False

284
past_avoidance ['a', 'b'] Input utterance: stay away from Iso Fusion Café, until you move to Occidental Petroleum Heliport
True Ground LTL: U ! iso_fusion_café occidental_petroleum_heliport
Out Ground LTL: U iso_fusion_café occidental_petroleum_heliport
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Iso Fusion Café', 'Occidental Petroleum Heliport')
Out Lmks:['Occidental Petroleum Heliport', 'Iso Fusion Café']
Out Grounds: {'Occidental Petroleum Heliport', 'Iso Fusion Café'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Iso Fusion Café': 'b'}
False

285
past_avoidance ['a', 'b'] Input utterance: stay away from Native Foods, until you move to Starbucks
True Ground LTL: U ! native_foods starbucks
Out Ground LTL: U native_foods starbucks
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Native Foods', 'Starbucks')
Out Lmks:['Starbucks', 'Native Foods']
Out Grounds: {'Starbucks', 'Native Foods'}
Placeholder Map: {'Starbucks': 'a', 'Native Foods': 'b'}
False

286
past_avoidance ['a', 'b'] Input utterance: do not move to Yogurtland, until you arrive at 800 Degrees
True Ground LTL: U ! yogurtland 800_degrees
Out Ground LTL: & U ! yogurtland 800_degrees F yogurtland
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Yogurtland', '800 Degrees')
Out Lmks:['Yogurtland', '800 Degrees']
Out Grounds: {'Yogurtland', '800 Degrees'}
Placeholder Map: {'Yogurtland': 'a', '800 Degrees': 'b'}
False

287
past_avoidance ['a', 'b'] Input utterance: do not move to Westwood's Village Square, until you arrive at UTLA Beauty
True Ground LTL: U ! westwoods_village_square utla_beauty
Out Ground LTL: & U ! westwood_village utla_beauty F westwood_village
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ("Westwood's Village Square", 'UTLA Beauty')
Out Lmks:["Westwood's Village Square", 'UTLA Beauty']
Out Grounds: {'Westwood Village', 'UTLA Beauty'}
Placeholder Map: {'Westwood Village': 'a', 'UTLA Beauty': 'b'}
False

288
past_avoidance ['a', 'b'] Input utterance: do not go to Village Center Newsstand, until you have gone to Janss Dome
True Ground LTL: U ! village_center_newsstand janss_dome
Out Ground LTL: & U ! village_center_newsstand janss_dome F village_center_newsstand
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Village Center Newsstand', 'Janss Dome')
Out Lmks:['Janss Dome', 'Village Center Newsstand']
Out Grounds: {'Janss Dome', 'Village Center Newsstand'}
Placeholder Map: {'Janss Dome': 'a', 'Village Center Newsstand': 'b'}
False

289
past_avoidance ['a', 'b'] Input utterance: do not go to Kinross Building South, until you have gone to Parking 36
True Ground LTL: U ! kinross_building_south parking_36
Out Ground LTL: & U ! kinross_building_south parking_36 F kinross_building_south
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Kinross Building South', 'Parking 36')
Out Lmks:['Kinross Building South', 'Parking 36']
Out Grounds: {'Kinross Building South', 'Parking 36'}
Placeholder Map: {'Kinross Building South': 'a', 'Parking 36': 'b'}
False

290
past_avoidance ['a', 'b'] Input utterance: avoid Novel Cafe Westwood, at all costs until you reach TCT Foods, first
True Ground LTL: U ! novel_cafe_westwood tct_foods
Out Ground LTL: U novel_cafe_westwood tct_foods
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Novel Cafe Westwood', 'TCT Foods')
Out Lmks:['TCT Foods', 'Novel Cafe Westwood']
Out Grounds: {'TCT Foods', 'Novel Cafe Westwood'}
Placeholder Map: {'TCT Foods': 'a', 'Novel Cafe Westwood': 'b'}
False

291
past_avoidance ['a', 'b'] Input utterance: avoid Westwood Wilshire, at all costs until you reach Gayley Center, first
True Ground LTL: U ! westwood_wilshire gayley_center
Out Ground LTL: U westwood_village gayley_center
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Westwood Wilshire', 'Gayley Center')
Out Lmks:['Westwood Wilshire', 'Gayley Center']
Out Grounds: {'Gayley Center', 'Westwood Village'}
Placeholder Map: {'Gayley Center': 'a', 'Westwood Village': 'b'}
False

292
past_avoidance ['a', 'b'] Input utterance: until you have gone to Westwood's Village Square, you can not go to 800 Degrees
True Ground LTL: U ! 800_degrees westwoods_village_square
Out Ground LTL: U westwood_village 800_degrees
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('800 Degrees', "Westwood's Village Square")
Out Lmks:['800 Degrees', "Westwood's Village Square"]
Out Grounds: {'Westwood Village', '800 Degrees'}
Placeholder Map: {'Westwood Village': 'a', '800 Degrees': 'b'}
RER or Grounding Error

293
past_avoidance ['a', 'b'] Input utterance: until you have gone to bibigo, you can not go to Poke Bar
True Ground LTL: U ! poke_bar bibigo
Out Ground LTL: U bibigo poke_bar
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Poke Bar', 'bibigo')
Out Lmks:['bibigo', 'Poke Bar']
Out Grounds: {'bibigo', 'Poke Bar'}
Placeholder Map: {'bibigo': 'a', 'Poke Bar': 'b'}
False

294
past_avoidance ['a', 'b'] Input utterance: you can not go to Gayley & Lindbrook Apartments, until you go to Janss Dome
True Ground LTL: U ! gayley_&_lindbrook_apartments janss_dome
Out Ground LTL: & U ! gayley_&_lindbrook_apartments janss_dome F gayley_&_lindbrook_apartments
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Gayley & Lindbrook Apartments', 'Janss Dome')
Out Lmks:['Janss Dome', 'Gayley & Lindbrook Apartments']
Out Grounds: {'Janss Dome', 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'Janss Dome': 'a', 'Gayley & Lindbrook Apartments': 'b'}
False

295
past_avoidance ['a', 'b'] Input utterance: you can not go to Denny's, until you go to Ike's Place
True Ground LTL: U ! dennys ikes_place
Out Ground LTL: & U ! dennys ikes_place F dennys
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ("Denny's", "Ike's Place")
Out Lmks:["Denny's", "Ike's Place"]
Out Grounds: {"Denny's", "Ike's Place"}
Placeholder Map: {"Denny's": 'a', "Ike's Place": 'b'}
False

296
past_avoidance ['a', 'b'] Input utterance: never go to Stone Canyon Creek (underground), until you see Village Center Newsstand
True Ground LTL: U ! stone_canyon_creek_underground village_center_newsstand
Out Ground LTL: U stone_canyon_creek_underground village_center_newsstand
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Stone Canyon Creek (underground)', 'Village Center Newsstand')
Out Lmks:['Stone Canyon Creek (underground)', 'Village Center Newsstand']
Out Grounds: {'Stone Canyon Creek (underground)', 'Village Center Newsstand'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Village Center Newsstand': 'b'}
False

297
past_avoidance ['a', 'b'] Input utterance: never go to Mio Babbo's, until you see bibigo
True Ground LTL: U ! mio_babbos bibigo
Out Ground LTL: U mio_babbos bibigo
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ("Mio Babbo's", 'bibigo')
Out Lmks:["Mio Babbo's", 'bibigo']
Out Grounds: {"Mio Babbo's", 'bibigo'}
Placeholder Map: {"Mio Babbo's": 'a', 'bibigo': 'b'}
False

298
past_avoidance ['a', 'b'] Input utterance: you can not go to U-Mini, before Ike's Place, happens
True Ground LTL: U ! u_mini ikes_place
Out Ground LTL: U ikes_place u_mini
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('U-Mini', "Ike's Place")
Out Lmks:["Ike's Place", 'U-Mini']
Out Grounds: {'U-Mini', "Ike's Place"}
Placeholder Map: {'U-Mini': 'a', "Ike's Place": 'b'}
False

299
past_avoidance ['a', 'b'] Input utterance: you can not go to Kinross Building South, before Iso Fusion Café, happens
True Ground LTL: U ! kinross_building_south iso_fusion_café
Out Ground LTL: U iso_fusion_café kinross_building_south
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Kinross Building South', 'Iso Fusion Café')
Out Lmks:['Kinross Building South', 'Iso Fusion Café']
Out Grounds: {'Kinross Building South', 'Iso Fusion Café'}
Placeholder Map: {'Kinross Building South': 'a', 'Iso Fusion Café': 'b'}
False

300
past_avoidance ['a', 'b'] Input utterance: you can only go to Plaza la Reina, after Starbucks, is seen
True Ground LTL: U ! plaza_la_reina starbucks
Out Ground LTL: G i starbucks X plaza_la_reina
True Symbolic LTL: U ! a b
Out Symbolic LTL: G i a X b
True Lmks: ('Plaza la Reina', 'Starbucks')
Out Lmks:['Starbucks', 'Plaza la Reina']
Out Grounds: {'Starbucks', 'Plaza la Reina'}
Placeholder Map: {'Starbucks': 'a', 'Plaza la Reina': 'b'}
False

301
past_avoidance ['a', 'b'] Input utterance: you can only go to Peet's Coffee & Tea, after Stone Canyon Creek (underground), is seen
True Ground LTL: U ! peets_coffee_&_tea stone_canyon_creek_underground
Out Ground LTL: G i stone_canyon_creek_underground X peets_coffee_&_tea
True Symbolic LTL: U ! a b
Out Symbolic LTL: G i a X b
True Lmks: ("Peet's Coffee & Tea", 'Stone Canyon Creek (underground)')
Out Lmks:['Stone Canyon Creek (underground)', "Peet's Coffee & Tea"]
Out Grounds: {'Stone Canyon Creek (underground)', "Peet's Coffee & Tea"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Peet's Coffee & Tea": 'b'}
False

302
past_avoidance ['a', 'b'] Input utterance: UCLA Extension - Lindbrook Center, must be observed before visiting Westwood's Village Square
True Ground LTL: U ! westwoods_village_square ucla_extension_lindbrook_center
Out Ground LTL: & U ! westwood_village ucla_extension_lindbrook_center F westwood_village
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("Westwood's Village Square", 'UCLA Extension - Lindbrook Center')
Out Lmks:['UCLA Extension - Lindbrook Center', "Westwood's Village Square"]
Out Grounds: {'UCLA Extension - Lindbrook Center', 'Westwood Village'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'Westwood Village': 'b'}
False

303
past_avoidance ['a', 'b'] Input utterance: Urban Outfitters, must be observed before visiting Victoria's Secret
True Ground LTL: U ! victorias_secret urban_outfitters
Out Ground LTL: & U ! victorias_secret urban_outfitters F victorias_secret
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ("Victoria's Secret", 'Urban Outfitters')
Out Lmks:["Victoria's Secret", 'Urban Outfitters']
Out Grounds: {"Victoria's Secret", 'Urban Outfitters'}
Placeholder Map: {"Victoria's Secret": 'a', 'Urban Outfitters': 'b'}
False

304
past_avoidance ['a', 'b'] Input utterance: you can visit Yogurtland, but only after you see Starbucks
True Ground LTL: U ! yogurtland starbucks
Out Ground LTL: & U ! yogurtland starbucks F yogurtland
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Yogurtland', 'Starbucks')
Out Lmks:['Starbucks', 'Yogurtland']
Out Grounds: {'Starbucks', 'Yogurtland'}
Placeholder Map: {'Starbucks': 'a', 'Yogurtland': 'b'}
False

305
past_avoidance ['a', 'b'] Input utterance: you can visit Stone Canyon Creek (underground), but only after you see Kinross Building South
True Ground LTL: U ! stone_canyon_creek_underground kinross_building_south
Out Ground LTL: & U ! stone_canyon_creek_underground kinross_building_south F stone_canyon_creek_underground
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Stone Canyon Creek (underground)', 'Kinross Building South')
Out Lmks:['Kinross Building South', 'Stone Canyon Creek (underground)']
Out Grounds: {'Kinross Building South', 'Stone Canyon Creek (underground)'}
Placeholder Map: {'Kinross Building South': 'a', 'Stone Canyon Creek (underground)': 'b'}
False

306
past_avoidance ['a', 'b'] Input utterance: Subway, has to be observed prior to any visit to Janss Dome
True Ground LTL: U ! janss_dome subway
Out Ground LTL: & U ! janss_dome subway F janss_dome
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Janss Dome', 'Subway')
Out Lmks:['Janss Dome', 'Subway']
Out Grounds: {'Janss Dome', 'Subway'}
Placeholder Map: {'Janss Dome': 'a', 'Subway': 'b'}
False

307
past_avoidance ['a', 'b'] Input utterance: Peet's Coffee & Tea, has to be observed prior to any visit to Stone Canyon Creek (underground)
True Ground LTL: U ! stone_canyon_creek_underground peets_coffee_&_tea
Out Ground LTL: & U ! stone_canyon_creek_underground peets_coffee_&_tea F stone_canyon_creek_underground
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Stone Canyon Creek (underground)', "Peet's Coffee & Tea")
Out Lmks:['Stone Canyon Creek (underground)', "Peet's Coffee & Tea"]
Out Grounds: {'Stone Canyon Creek (underground)', "Peet's Coffee & Tea"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Peet's Coffee & Tea": 'b'}
False

308
past_avoidance ['a', 'b'] Input utterance: make sure you see Starbucks, before going to TCT Foods
True Ground LTL: U ! tct_foods starbucks
Out Ground LTL: & U ! tct_foods starbucks F tct_foods
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('TCT Foods', 'Starbucks')
Out Lmks:['TCT Foods', 'Starbucks']
Out Grounds: {'TCT Foods', 'Starbucks'}
Placeholder Map: {'TCT Foods': 'a', 'Starbucks': 'b'}
False

309
past_avoidance ['a', 'b'] Input utterance: make sure you see Victoria's Secret, before going to Westwood's Village Square
True Ground LTL: U ! westwoods_village_square victorias_secret
Out Ground LTL: & U ! westwood_village victorias_secret F westwood_village
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ("Westwood's Village Square", "Victoria's Secret")
Out Lmks:["Westwood's Village Square", "Victoria's Secret"]
Out Grounds: {'Westwood Village', "Victoria's Secret"}
Placeholder Map: {'Westwood Village': 'a', "Victoria's Secret": 'b'}
False

310
past_avoidance ['a', 'b'] Input utterance: you can not make any visit to Starbucks, when Subway, remains unseen
True Ground LTL: U ! starbucks subway
Out Ground LTL: U starbucks subway
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Starbucks', 'Subway')
Out Lmks:['Starbucks', 'Subway']
Out Grounds: {'Starbucks', 'Subway'}
Placeholder Map: {'Starbucks': 'a', 'Subway': 'b'}
False

311
past_avoidance ['a', 'b'] Input utterance: you can not make any visit to Nature's Way Café, when bibigo, remains unseen
True Ground LTL: U ! natures_way_café bibigo
Out Ground LTL: U natures_way_café bibigo
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ("Nature's Way Café", 'bibigo')
Out Lmks:["Nature's Way Café", 'bibigo']
Out Grounds: {"Nature's Way Café", 'bibigo'}
Placeholder Map: {"Nature's Way Café": 'a', 'bibigo': 'b'}
False

312
past_avoidance ['a', 'b'] Input utterance: do not visit Westwood Wilshire, till you observe Novel Cafe Westwood
True Ground LTL: U ! westwood_wilshire novel_cafe_westwood
Out Ground LTL: U westwood_village novel_cafe_westwood
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Westwood Wilshire', 'Novel Cafe Westwood')
Out Lmks:['Westwood Wilshire', 'Novel Cafe Westwood']
Out Grounds: {'Novel Cafe Westwood', 'Westwood Village'}
Placeholder Map: {'Novel Cafe Westwood': 'a', 'Westwood Village': 'b'}
False

313
past_avoidance ['a', 'b'] Input utterance: do not visit 800 Degrees, till you observe Village Center Newsstand
True Ground LTL: U ! 800_degrees village_center_newsstand
Out Ground LTL: U 800_degrees village_center_newsstand
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('800 Degrees', 'Village Center Newsstand')
Out Lmks:['800 Degrees', 'Village Center Newsstand']
Out Grounds: {'800 Degrees', 'Village Center Newsstand'}
Placeholder Map: {'800 Degrees': 'a', 'Village Center Newsstand': 'b'}
False

314
past_avoidance ['a', 'b'] Input utterance: seeing Parking 36, unlocks Noah's Bagels
True Ground LTL: U ! noahs_bagels parking_36
Out Ground LTL: U noahs_bagels parking_36
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ("Noah's Bagels", 'Parking 36')
Out Lmks:['Parking 36', "Noah's Bagels"]
Out Grounds: {'Parking 36', "Noah's Bagels"}
Placeholder Map: {'Parking 36': 'a', "Noah's Bagels": 'b'}
False

315
past_avoidance ['a', 'b'] Input utterance: seeing Veggie Grill, unlocks TCT Foods
True Ground LTL: U ! tct_foods veggie_grill
Out Ground LTL: U tct_foods veggie_grill
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('TCT Foods', 'Veggie Grill')
Out Lmks:['TCT Foods', 'Veggie Grill']
Out Grounds: {'TCT Foods', 'Veggie Grill'}
Placeholder Map: {'TCT Foods': 'a', 'Veggie Grill': 'b'}
False

316
lower_restricted_avoidance ['h'] Input utterance: visit Mio Babbo's, at least five times
True Ground LTL: F & mio_babbos U mio_babbos & ! mio_babbos U ! mio_babbos F & mio_babbos U mio_babbos & ! mio_babbos U ! mio_babbos F & mio_babbos U mio_babbos & ! mio_babbos U ! mio_babbos F & mio_babbos U mio_babbos & ! mio_babbos U ! mio_babbos F mio_babbos
Out Ground LTL: F & mio_babbos U mio_babbos & ! mio_babbos U ! mio_babbos F & mio_babbos U mio_babbos & ! mio_babbos U ! mio_babbos F & mio_babbos U mio_babbos & ! mio_babbos U ! mio_babbos F & mio_babbos U mio_babbos & ! mio_babbos U ! mio_babbos F mio_babbos
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Mio Babbo's",)
Out Lmks:["Mio Babbo's"]
Out Grounds: {"Mio Babbo's"}
Placeholder Map: {"Mio Babbo's": 'a'}
True

317
lower_restricted_avoidance ['h'] Input utterance: visit Westwood's Village Square, at least five times
True Ground LTL: F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F westwoods_village_square
Out Ground LTL: F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F westwood_village
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Westwood's Village Square",)
Out Lmks:["Westwood's Village Square"]
Out Grounds: {'Westwood Village'}
Placeholder Map: {'Westwood Village': 'a'}
False

318
lower_restricted_avoidance ['h'] Input utterance: go to Denny's, at least five times
True Ground LTL: F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F dennys
Out Ground LTL: F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F dennys
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Denny's",)
Out Lmks:["Denny's"]
Out Grounds: {"Denny's"}
Placeholder Map: {"Denny's": 'a'}
True

319
lower_restricted_avoidance ['h'] Input utterance: go to Kinross Building South, at least five times
True Ground LTL: F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F kinross_building_south
Out Ground LTL: F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F kinross_building_south
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Kinross Building South',)
Out Lmks:['Kinross Building South']
Out Grounds: {'Kinross Building South'}
Placeholder Map: {'Kinross Building South': 'a'}
True

320
lower_restricted_avoidance ['h'] Input utterance: make your way to U-Mini, at least five times
True Ground LTL: F & u_mini U u_mini & ! u_mini U ! u_mini F & u_mini U u_mini & ! u_mini U ! u_mini F & u_mini U u_mini & ! u_mini U ! u_mini F & u_mini U u_mini & ! u_mini U ! u_mini F u_mini
Out Ground LTL: F & u_mini U u_mini & ! u_mini U ! u_mini F & u_mini U u_mini & ! u_mini U ! u_mini F & u_mini U u_mini & ! u_mini U ! u_mini F & u_mini U u_mini & ! u_mini U ! u_mini F u_mini
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('U-Mini',)
Out Lmks:['U-Mini']
Out Grounds: {'U-Mini'}
Placeholder Map: {'U-Mini': 'a'}
True

321
lower_restricted_avoidance ['h'] Input utterance: make your way to Westwood's Village Square, at least five times
True Ground LTL: F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F westwoods_village_square
Out Ground LTL: F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F westwood_village
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Westwood's Village Square",)
Out Lmks:["Westwood's Village Square"]
Out Grounds: {'Westwood Village'}
Placeholder Map: {'Westwood Village': 'a'}
False

322
lower_restricted_avoidance ['h'] Input utterance: you have to visit Kinross Building South, at least five times
True Ground LTL: F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F kinross_building_south
Out Ground LTL: F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F kinross_building_south
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Kinross Building South',)
Out Lmks:['Kinross Building South']
Out Grounds: {'Kinross Building South'}
Placeholder Map: {'Kinross Building South': 'a'}
True

323
lower_restricted_avoidance ['h'] Input utterance: you have to visit Peet's Coffee & Tea, at least five times
True Ground LTL: F & peets_coffee_&_tea U peets_coffee_&_tea & ! peets_coffee_&_tea U ! peets_coffee_&_tea F & peets_coffee_&_tea U peets_coffee_&_tea & ! peets_coffee_&_tea U ! peets_coffee_&_tea F & peets_coffee_&_tea U peets_coffee_&_tea & ! peets_coffee_&_tea U ! peets_coffee_&_tea F & peets_coffee_&_tea U peets_coffee_&_tea & ! peets_coffee_&_tea U ! peets_coffee_&_tea F peets_coffee_&_tea
Out Ground LTL: F & peets_coffee_&_tea U peets_coffee_&_tea & ! peets_coffee_&_tea U ! peets_coffee_&_tea F & peets_coffee_&_tea U peets_coffee_&_tea & ! peets_coffee_&_tea U ! peets_coffee_&_tea F & peets_coffee_&_tea U peets_coffee_&_tea & ! peets_coffee_&_tea U ! peets_coffee_&_tea F & peets_coffee_&_tea U peets_coffee_&_tea & ! peets_coffee_&_tea U ! peets_coffee_&_tea F peets_coffee_&_tea
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Peet's Coffee & Tea",)
Out Lmks:["Peet's Coffee & Tea"]
Out Grounds: {"Peet's Coffee & Tea"}
Placeholder Map: {"Peet's Coffee & Tea": 'a'}
True

324
lower_restricted_avoidance ['h'] Input utterance: visit Iso Fusion Café, at least five times or more
True Ground LTL: F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F iso_fusion_café
Out Ground LTL: F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F iso_fusion_café
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Iso Fusion Café',)
Out Lmks:['Iso Fusion Café']
Out Grounds: {'Iso Fusion Café'}
Placeholder Map: {'Iso Fusion Café': 'a'}
True

325
lower_restricted_avoidance ['h'] Input utterance: visit Veggie Grill, at least five times or more
True Ground LTL: F & veggie_grill U veggie_grill & ! veggie_grill U ! veggie_grill F & veggie_grill U veggie_grill & ! veggie_grill U ! veggie_grill F & veggie_grill U veggie_grill & ! veggie_grill U ! veggie_grill F & veggie_grill U veggie_grill & ! veggie_grill U ! veggie_grill F veggie_grill
Out Ground LTL: F & veggie_grill U veggie_grill & ! veggie_grill U ! veggie_grill F & veggie_grill U veggie_grill & ! veggie_grill U ! veggie_grill F & veggie_grill U veggie_grill & ! veggie_grill U ! veggie_grill F & veggie_grill U veggie_grill & ! veggie_grill U ! veggie_grill F veggie_grill
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Veggie Grill',)
Out Lmks:['Veggie Grill']
Out Grounds: {'Veggie Grill'}
Placeholder Map: {'Veggie Grill': 'a'}
True

326
lower_restricted_avoidance ['h'] Input utterance: you can not visit Nature's Way Café, less than five times
True Ground LTL: F & natures_way_café U natures_way_café & ! natures_way_café U ! natures_way_café F & natures_way_café U natures_way_café & ! natures_way_café U ! natures_way_café F & natures_way_café U natures_way_café & ! natures_way_café U ! natures_way_café F & natures_way_café U natures_way_café & ! natures_way_café U ! natures_way_café F natures_way_café
Out Ground LTL: F & natures_way_café U natures_way_café & ! natures_way_café U ! natures_way_café F & natures_way_café U natures_way_café & ! natures_way_café U ! natures_way_café F & natures_way_café U natures_way_café & ! natures_way_café U ! natures_way_café F & natures_way_café U natures_way_café & ! natures_way_café U ! natures_way_café F natures_way_café
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Nature's Way Café",)
Out Lmks:["Nature's Way Café"]
Out Grounds: {"Nature's Way Café"}
Placeholder Map: {"Nature's Way Café": 'a'}
True

327
lower_restricted_avoidance ['h'] Input utterance: you can not visit 800 Degrees, less than five times
True Ground LTL: F & 800_degrees U 800_degrees & ! 800_degrees U ! 800_degrees F & 800_degrees U 800_degrees & ! 800_degrees U ! 800_degrees F & 800_degrees U 800_degrees & ! 800_degrees U ! 800_degrees F & 800_degrees U 800_degrees & ! 800_degrees U ! 800_degrees F 800_degrees
Out Ground LTL: F & 800_degrees U 800_degrees & ! 800_degrees U ! 800_degrees F & 800_degrees U 800_degrees & ! 800_degrees U ! 800_degrees F & 800_degrees U 800_degrees & ! 800_degrees U ! 800_degrees F & 800_degrees U 800_degrees & ! 800_degrees U ! 800_degrees F 800_degrees
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('800 Degrees',)
Out Lmks:['800 Degrees']
Out Grounds: {'800 Degrees'}
Placeholder Map: {'800 Degrees': 'a'}
True

328
lower_restricted_avoidance ['h'] Input utterance: never go to Urban Outfitters, less than five times
True Ground LTL: F & urban_outfitters U urban_outfitters & ! urban_outfitters U ! urban_outfitters F & urban_outfitters U urban_outfitters & ! urban_outfitters U ! urban_outfitters F & urban_outfitters U urban_outfitters & ! urban_outfitters U ! urban_outfitters F & urban_outfitters U urban_outfitters & ! urban_outfitters U ! urban_outfitters F urban_outfitters
Out Ground LTL: F & urban_outfitters U urban_outfitters & ! urban_outfitters U ! urban_outfitters F & urban_outfitters U urban_outfitters & ! urban_outfitters U ! urban_outfitters F & urban_outfitters U urban_outfitters & ! urban_outfitters U ! urban_outfitters F & urban_outfitters U urban_outfitters & ! urban_outfitters U ! urban_outfitters F urban_outfitters
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Urban Outfitters',)
Out Lmks:['Urban Outfitters']
Out Grounds: {'Urban Outfitters'}
Placeholder Map: {'Urban Outfitters': 'a'}
True

329
lower_restricted_avoidance ['h'] Input utterance: never go to Subway, less than five times
True Ground LTL: F & subway U subway & ! subway U ! subway F & subway U subway & ! subway U ! subway F & subway U subway & ! subway U ! subway F & subway U subway & ! subway U ! subway F subway
Out Ground LTL: F & subway U subway & ! subway U ! subway F & subway U subway & ! subway U ! subway F & subway U subway & ! subway U ! subway F & subway U subway & ! subway U ! subway F subway
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Subway',)
Out Lmks:['Subway']
Out Grounds: {'Subway'}
Placeholder Map: {'Subway': 'a'}
True

330
lower_restricted_avoidance ['h'] Input utterance: you have to visit Plaza la Reina, five or more than five times
True Ground LTL: F & plaza_la_reina U plaza_la_reina & ! plaza_la_reina U ! plaza_la_reina F & plaza_la_reina U plaza_la_reina & ! plaza_la_reina U ! plaza_la_reina F & plaza_la_reina U plaza_la_reina & ! plaza_la_reina U ! plaza_la_reina F & plaza_la_reina U plaza_la_reina & ! plaza_la_reina U ! plaza_la_reina F plaza_la_reina
Out Ground LTL: F & plaza_la_reina U plaza_la_reina & ! plaza_la_reina U ! plaza_la_reina F & plaza_la_reina U plaza_la_reina & ! plaza_la_reina U ! plaza_la_reina F & plaza_la_reina U plaza_la_reina & ! plaza_la_reina U ! plaza_la_reina F & plaza_la_reina U plaza_la_reina & ! plaza_la_reina U ! plaza_la_reina F plaza_la_reina
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Plaza la Reina',)
Out Lmks:['Plaza la Reina']
Out Grounds: {'Plaza la Reina'}
Placeholder Map: {'Plaza la Reina': 'a'}
True

331
lower_restricted_avoidance ['h'] Input utterance: you have to visit Westwood's Village Square, five or more than five times
True Ground LTL: F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F & westwoods_village_square U westwoods_village_square & ! westwoods_village_square U ! westwoods_village_square F westwoods_village_square
Out Ground LTL: F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F westwood_village
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Westwood's Village Square",)
Out Lmks:["Westwood's Village Square"]
Out Grounds: {'Westwood Village'}
Placeholder Map: {'Westwood Village': 'a'}
False

332
lower_restricted_avoidance ['h'] Input utterance: your task is to go to Stone Canyon Creek (underground), five or more times
True Ground LTL: F & stone_canyon_creek_underground U stone_canyon_creek_underground & ! stone_canyon_creek_underground U ! stone_canyon_creek_underground F & stone_canyon_creek_underground U stone_canyon_creek_underground & ! stone_canyon_creek_underground U ! stone_canyon_creek_underground F & stone_canyon_creek_underground U stone_canyon_creek_underground & ! stone_canyon_creek_underground U ! stone_canyon_creek_underground F & stone_canyon_creek_underground U stone_canyon_creek_underground & ! stone_canyon_creek_underground U ! stone_canyon_creek_underground F stone_canyon_creek_underground
Out Ground LTL: F & stone_canyon_creek_underground U stone_canyon_creek_underground & ! stone_canyon_creek_underground U ! stone_canyon_creek_underground F & stone_canyon_creek_underground U stone_canyon_creek_underground & ! stone_canyon_creek_underground U ! stone_canyon_creek_underground F & stone_canyon_creek_underground U stone_canyon_creek_underground & ! stone_canyon_creek_underground U ! stone_canyon_creek_underground F & stone_canyon_creek_underground U stone_canyon_creek_underground & ! stone_canyon_creek_underground U ! stone_canyon_creek_underground F stone_canyon_creek_underground
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Stone Canyon Creek (underground)',)
Out Lmks:['Stone Canyon Creek (underground)']
Out Grounds: {'Stone Canyon Creek (underground)'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a'}
True

333
lower_restricted_avoidance ['h'] Input utterance: your task is to go to Westwood Wilshire, five or more times
True Ground LTL: F & westwood_wilshire U westwood_wilshire & ! westwood_wilshire U ! westwood_wilshire F & westwood_wilshire U westwood_wilshire & ! westwood_wilshire U ! westwood_wilshire F & westwood_wilshire U westwood_wilshire & ! westwood_wilshire U ! westwood_wilshire F & westwood_wilshire U westwood_wilshire & ! westwood_wilshire U ! westwood_wilshire F westwood_wilshire
Out Ground LTL: F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F & westwood_village U westwood_village & ! westwood_village U ! westwood_village F westwood_village
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Westwood Wilshire',)
Out Lmks:['Westwood Wilshire']
Out Grounds: {'Westwood Village'}
Placeholder Map: {'Westwood Village': 'a'}
False

334
lower_restricted_avoidance ['h'] Input utterance: do not visit UTLA Beauty, less than five times
True Ground LTL: F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F utla_beauty
Out Ground LTL: F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F utla_beauty
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('UTLA Beauty',)
Out Lmks:['UTLA Beauty']
Out Grounds: {'UTLA Beauty'}
Placeholder Map: {'UTLA Beauty': 'a'}
True

335
lower_restricted_avoidance ['h'] Input utterance: do not visit London Cleaners, less than five times
True Ground LTL: F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F london_cleaners
Out Ground LTL: F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F london_cleaners
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('London Cleaners',)
Out Lmks:['London Cleaners']
Out Grounds: {'London Cleaners'}
Placeholder Map: {'London Cleaners': 'a'}
True

336
lower_restricted_avoidance ['h'] Input utterance: make sure you visit Village Center Newsstand, five or more times
True Ground LTL: F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F village_center_newsstand
Out Ground LTL: F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F village_center_newsstand
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Village Center Newsstand',)
Out Lmks:['Village Center Newsstand']
Out Grounds: {'Village Center Newsstand'}
Placeholder Map: {'Village Center Newsstand': 'a'}
True

337
lower_restricted_avoidance ['h'] Input utterance: make sure you visit Red Pelican Music, five or more times
True Ground LTL: F & red_pelican_music U red_pelican_music & ! red_pelican_music U ! red_pelican_music F & red_pelican_music U red_pelican_music & ! red_pelican_music U ! red_pelican_music F & red_pelican_music U red_pelican_music & ! red_pelican_music U ! red_pelican_music F & red_pelican_music U red_pelican_music & ! red_pelican_music U ! red_pelican_music F red_pelican_music
Out Ground LTL: F & red_pelican_music U red_pelican_music & ! red_pelican_music U ! red_pelican_music F & red_pelican_music U red_pelican_music & ! red_pelican_music U ! red_pelican_music F & red_pelican_music U red_pelican_music & ! red_pelican_music U ! red_pelican_music F & red_pelican_music U red_pelican_music & ! red_pelican_music U ! red_pelican_music F red_pelican_music
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Red Pelican Music',)
Out Lmks:['Red Pelican Music']
Out Grounds: {'Red Pelican Music'}
Placeholder Map: {'Red Pelican Music': 'a'}
True

338
lower_restricted_avoidance ['h'] Input utterance: you have to reach Starbucks, at least five times
True Ground LTL: F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F starbucks
Out Ground LTL: F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F & starbucks U starbucks & ! starbucks U ! starbucks F starbucks
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

339
lower_restricted_avoidance ['h'] Input utterance: you have to reach Noah's Bagels, at least five times
True Ground LTL: F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F noahs_bagels
Out Ground LTL: F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F noahs_bagels
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Noah's Bagels",)
Out Lmks:["Noah's Bagels"]
Out Grounds: {"Noah's Bagels"}
Placeholder Map: {"Noah's Bagels": 'a'}
True

340
lower_restricted_avoidance ['h'] Input utterance: visit UTLA Beauty, equal or more than five times
True Ground LTL: F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F utla_beauty
Out Ground LTL: F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F utla_beauty
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('UTLA Beauty',)
Out Lmks:['UTLA Beauty']
Out Grounds: {'UTLA Beauty'}
Placeholder Map: {'UTLA Beauty': 'a'}
True

341
lower_restricted_avoidance ['h'] Input utterance: visit Iso Fusion Café, equal or more than five times
True Ground LTL: F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F iso_fusion_café
Out Ground LTL: F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F iso_fusion_café
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Iso Fusion Café',)
Out Lmks:['Iso Fusion Café']
Out Grounds: {'Iso Fusion Café'}
Placeholder Map: {'Iso Fusion Café': 'a'}
True

342
lower_restricted_avoidance ['h'] Input utterance: you have to go to Noah's Bagels, five or more than five times
True Ground LTL: F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F noahs_bagels
Out Ground LTL: F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F & noahs_bagels U noahs_bagels & ! noahs_bagels U ! noahs_bagels F noahs_bagels
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Noah's Bagels",)
Out Lmks:["Noah's Bagels"]
Out Grounds: {"Noah's Bagels"}
Placeholder Map: {"Noah's Bagels": 'a'}
True

343
lower_restricted_avoidance ['h'] Input utterance: you have to go to Iso Fusion Café, five or more than five times
True Ground LTL: F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F iso_fusion_café
Out Ground LTL: F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F iso_fusion_café
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Iso Fusion Café',)
Out Lmks:['Iso Fusion Café']
Out Grounds: {'Iso Fusion Café'}
Placeholder Map: {'Iso Fusion Café': 'a'}
True

344
lower_restricted_avoidance ['h'] Input utterance: Kinross Building South, has to be visited at least five times
True Ground LTL: F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F kinross_building_south
Out Ground LTL: F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F & kinross_building_south U kinross_building_south & ! kinross_building_south U ! kinross_building_south F kinross_building_south
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Kinross Building South',)
Out Lmks:['Kinross Building South']
Out Grounds: {'Kinross Building South'}
Placeholder Map: {'Kinross Building South': 'a'}
True

345
lower_restricted_avoidance ['h'] Input utterance: London Cleaners, has to be visited at least five times
True Ground LTL: F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F london_cleaners
Out Ground LTL: F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F & london_cleaners U london_cleaners & ! london_cleaners U ! london_cleaners F london_cleaners
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('London Cleaners',)
Out Lmks:['London Cleaners']
Out Grounds: {'London Cleaners'}
Placeholder Map: {'London Cleaners': 'a'}
True

346
lower_restricted_avoidance ['h'] Input utterance: you must visit and then leave Novel Cafe Westwood, at least five times
True Ground LTL: F & novel_cafe_westwood U novel_cafe_westwood & ! novel_cafe_westwood U ! novel_cafe_westwood F & novel_cafe_westwood U novel_cafe_westwood & ! novel_cafe_westwood U ! novel_cafe_westwood F & novel_cafe_westwood U novel_cafe_westwood & ! novel_cafe_westwood U ! novel_cafe_westwood F & novel_cafe_westwood U novel_cafe_westwood & ! novel_cafe_westwood U ! novel_cafe_westwood F novel_cafe_westwood
Out Ground LTL: F & novel_cafe_westwood U novel_cafe_westwood & ! novel_cafe_westwood U ! novel_cafe_westwood F & novel_cafe_westwood U novel_cafe_westwood & ! novel_cafe_westwood U ! novel_cafe_westwood F & novel_cafe_westwood U novel_cafe_westwood & ! novel_cafe_westwood U ! novel_cafe_westwood F & novel_cafe_westwood U novel_cafe_westwood & ! novel_cafe_westwood U ! novel_cafe_westwood F novel_cafe_westwood
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Novel Cafe Westwood',)
Out Lmks:['Novel Cafe Westwood']
Out Grounds: {'Novel Cafe Westwood'}
Placeholder Map: {'Novel Cafe Westwood': 'a'}
True

347
lower_restricted_avoidance ['h'] Input utterance: you must visit and then leave Denny's, at least five times
True Ground LTL: F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F dennys
Out Ground LTL: F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F dennys
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Denny's",)
Out Lmks:["Denny's"]
Out Grounds: {"Denny's"}
Placeholder Map: {"Denny's": 'a'}
True

348
lower_restricted_avoidance ['h'] Input utterance: go to Gayley & Lindbrook Apartments, then leave Gayley & Lindbrook Apartments, at least five times
True Ground LTL: F & gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments & ! gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments F & gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments & ! gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments F & gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments & ! gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments F & gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments & ! gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments F gayley_&_lindbrook_apartments
Out Ground LTL: F & gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments & ! gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments F & gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments & ! gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments F & gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments & ! gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments F & gayley_&_lindbrook_apartments U gayley_&_lindbrook_apartments & ! gayley_&_lindbrook_apartments U ! gayley_&_lindbrook_apartments F gayley_&_lindbrook_apartments
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Gayley & Lindbrook Apartments',)
Out Lmks:['Gayley & Lindbrook Apartments']
Out Grounds: {'Gayley & Lindbrook Apartments'}
Placeholder Map: {'Gayley & Lindbrook Apartments': 'a'}
True

349
lower_restricted_avoidance ['h'] Input utterance: go to UTLA Beauty, then leave UTLA Beauty, at least five times
True Ground LTL: F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F utla_beauty
Out Ground LTL: F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F utla_beauty
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('UTLA Beauty',)
Out Lmks:['UTLA Beauty']
Out Grounds: {'UTLA Beauty'}
Placeholder Map: {'UTLA Beauty': 'a'}
True

350
lower_restricted_avoidance ['h'] Input utterance: you must pass through Victoria's Secret, on at least five separate occasions
True Ground LTL: F & victorias_secret U victorias_secret & ! victorias_secret U ! victorias_secret F & victorias_secret U victorias_secret & ! victorias_secret U ! victorias_secret F & victorias_secret U victorias_secret & ! victorias_secret U ! victorias_secret F & victorias_secret U victorias_secret & ! victorias_secret U ! victorias_secret F victorias_secret
Out Ground LTL: F & victorias_secret U victorias_secret & ! victorias_secret U ! victorias_secret F & victorias_secret U victorias_secret & ! victorias_secret U ! victorias_secret F & victorias_secret U victorias_secret & ! victorias_secret U ! victorias_secret F & victorias_secret U victorias_secret & ! victorias_secret U ! victorias_secret F victorias_secret
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Victoria's Secret",)
Out Lmks:["Victoria's Secret"]
Out Grounds: {"Victoria's Secret"}
Placeholder Map: {"Victoria's Secret": 'a'}
True

351
lower_restricted_avoidance ['h'] Input utterance: you must pass through Village Center Newsstand, on at least five separate occasions
True Ground LTL: F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F village_center_newsstand
Out Ground LTL: F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F & village_center_newsstand U village_center_newsstand & ! village_center_newsstand U ! village_center_newsstand F village_center_newsstand
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Village Center Newsstand',)
Out Lmks:['Village Center Newsstand']
Out Grounds: {'Village Center Newsstand'}
Placeholder Map: {'Village Center Newsstand': 'a'}
True

352
lower_restricted_avoidance ['h'] Input utterance: the minimum number of times you must visit Ike's Place, is five
True Ground LTL: F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F ikes_place
Out Ground LTL: F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F ikes_place
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Ike's Place",)
Out Lmks:["Ike's Place"]
Out Grounds: {"Ike's Place"}
Placeholder Map: {"Ike's Place": 'a'}
True

353
lower_restricted_avoidance ['h'] Input utterance: the minimum number of times you must visit Denny's, is five
True Ground LTL: F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F dennys
Out Ground LTL: F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F & dennys U dennys & ! dennys U ! dennys F dennys
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Denny's",)
Out Lmks:["Denny's"]
Out Grounds: {"Denny's"}
Placeholder Map: {"Denny's": 'a'}
True

354
lower_restricted_avoidance ['h'] Input utterance: reach Yogurtland, then leave Yogurtland, and repeat this at least four more times
True Ground LTL: F & yogurtland U yogurtland & ! yogurtland U ! yogurtland F & yogurtland U yogurtland & ! yogurtland U ! yogurtland F & yogurtland U yogurtland & ! yogurtland U ! yogurtland F & yogurtland U yogurtland & ! yogurtland U ! yogurtland F yogurtland
Out Ground LTL: F & yogurtland U yogurtland & ! yogurtland U ! yogurtland F & yogurtland U yogurtland & ! yogurtland U ! yogurtland F & yogurtland U yogurtland & ! yogurtland U ! yogurtland F yogurtland
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Yogurtland',)
Out Lmks:['Yogurtland']
Out Grounds: {'Yogurtland'}
Placeholder Map: {'Yogurtland': 'a'}
False

355
lower_restricted_avoidance ['h'] Input utterance: reach Ike's Place, then leave Ike's Place, and repeat this at least four more times
True Ground LTL: F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F ikes_place
Out Ground LTL: F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F ikes_place
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Ike's Place",)
Out Lmks:["Ike's Place"]
Out Grounds: {"Ike's Place"}
Placeholder Map: {"Ike's Place": 'a'}
False

356
lower_restricted_avoidance ['h'] Input utterance: you can not complete the task without visiting Iso Fusion Café, on five separate occasions
True Ground LTL: F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F iso_fusion_café
Out Ground LTL: F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F & iso_fusion_café U iso_fusion_café & ! iso_fusion_café U ! iso_fusion_café F iso_fusion_café
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Iso Fusion Café',)
Out Lmks:['Iso Fusion Café']
Out Grounds: {'Iso Fusion Café'}
Placeholder Map: {'Iso Fusion Café': 'a'}
True

357
lower_restricted_avoidance ['h'] Input utterance: you can not complete the task without visiting Ike's Place, on five separate occasions
True Ground LTL: F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F ikes_place
Out Ground LTL: F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F ikes_place
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Ike's Place",)
Out Lmks:["Ike's Place"]
Out Grounds: {"Ike's Place"}
Placeholder Map: {"Ike's Place": 'a'}
True

358
lower_restricted_avoidance ['h'] Input utterance: do not visit Parking 32, any fewer than five separate times
True Ground LTL: F & parking_32 U parking_32 & ! parking_32 U ! parking_32 F & parking_32 U parking_32 & ! parking_32 U ! parking_32 F & parking_32 U parking_32 & ! parking_32 U ! parking_32 F & parking_32 U parking_32 & ! parking_32 U ! parking_32 F parking_32
Out Ground LTL: F & parking_32 U parking_32 & ! parking_32 U ! parking_32 F & parking_32 U parking_32 & ! parking_32 U ! parking_32 F & parking_32 U parking_32 & ! parking_32 U ! parking_32 F & parking_32 U parking_32 & ! parking_32 U ! parking_32 F parking_32
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Parking 32',)
Out Lmks:['Parking 32']
Out Grounds: {'Parking 32'}
Placeholder Map: {'Parking 32': 'a'}
True

359
lower_restricted_avoidance ['h'] Input utterance: do not visit UTLA Beauty, any fewer than five separate times
True Ground LTL: F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F utla_beauty
Out Ground LTL: F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F & utla_beauty U utla_beauty & ! utla_beauty U ! utla_beauty F utla_beauty
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('UTLA Beauty',)
Out Lmks:['UTLA Beauty']
Out Grounds: {'UTLA Beauty'}
Placeholder Map: {'UTLA Beauty': 'a'}
True

360
lower_restricted_avoidance ['h'] Input utterance: ensure that you have at least five separate times where you reach UCLA Extension - Westwood Village Center
True Ground LTL: F & ucla_extension_westwood_village_center U ucla_extension_westwood_village_center & ! ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center U ucla_extension_westwood_village_center & ! ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center U ucla_extension_westwood_village_center & ! ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center U ucla_extension_westwood_village_center & ! ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center F ucla_extension_westwood_village_center
Out Ground LTL: F & ucla_extension_westwood_village_center U ucla_extension_westwood_village_center & ! ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center U ucla_extension_westwood_village_center & ! ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center U ucla_extension_westwood_village_center & ! ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center U ucla_extension_westwood_village_center & ! ucla_extension_westwood_village_center U ! ucla_extension_westwood_village_center F ucla_extension_westwood_village_center
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('UCLA Extension - Westwood Village Center',)
Out Lmks:['UCLA Extension - Westwood Village Center']
Out Grounds: {'UCLA Extension - Westwood Village Center'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a'}
True

361
lower_restricted_avoidance ['h'] Input utterance: ensure that you have at least five separate times where you reach Ike's Place
True Ground LTL: F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F ikes_place
Out Ground LTL: F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F & ikes_place U ikes_place & ! ikes_place U ! ikes_place F ikes_place
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Ike's Place",)
Out Lmks:["Ike's Place"]
Out Grounds: {"Ike's Place"}
Placeholder Map: {"Ike's Place": 'a'}
True

362
exact_restricted_avoidance ['c'] Input utterance: visit Red Pelican Music, exactly three times
True Ground LTL: M & red_pelican_music F & ! red_pelican_music F & red_pelican_music F & ! red_pelican_music F red_pelican_music | ! red_pelican_music G | red_pelican_music G | ! red_pelican_music G | red_pelican_music G | ! red_pelican_music G | red_pelican_music G ! red_pelican_music
Out Ground LTL: M & red_pelican_music F & ! red_pelican_music F & red_pelican_music F & ! red_pelican_music F red_pelican_music | ! red_pelican_music G | red_pelican_music G | ! red_pelican_music G | red_pelican_music G | ! red_pelican_music G | red_pelican_music G ! red_pelican_music
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Red Pelican Music',)
Out Lmks:['Red Pelican Music']
Out Grounds: {'Red Pelican Music'}
Placeholder Map: {'Red Pelican Music': 'a'}
True

363
exact_restricted_avoidance ['c'] Input utterance: visit Starbucks, exactly three times
True Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
Out Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

364
exact_restricted_avoidance ['c'] Input utterance: go to Urban Outfitters, exactly three times
True Ground LTL: M & urban_outfitters F & ! urban_outfitters F & urban_outfitters F & ! urban_outfitters F urban_outfitters | ! urban_outfitters G | urban_outfitters G | ! urban_outfitters G | urban_outfitters G | ! urban_outfitters G | urban_outfitters G ! urban_outfitters
Out Ground LTL: M & urban_outfitters F & ! urban_outfitters F & urban_outfitters F & ! urban_outfitters F urban_outfitters | ! urban_outfitters G | urban_outfitters G | ! urban_outfitters G | urban_outfitters G | ! urban_outfitters G | urban_outfitters G ! urban_outfitters
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Urban Outfitters',)
Out Lmks:['Urban Outfitters']
Out Grounds: {'Urban Outfitters'}
Placeholder Map: {'Urban Outfitters': 'a'}
True

365
exact_restricted_avoidance ['c'] Input utterance: go to bibigo, exactly three times
True Ground LTL: M & bibigo F & ! bibigo F & bibigo F & ! bibigo F bibigo | ! bibigo G | bibigo G | ! bibigo G | bibigo G | ! bibigo G | bibigo G ! bibigo
Out Ground LTL: M & bibigo F & ! bibigo F & bibigo F & ! bibigo F bibigo | ! bibigo G | bibigo G | ! bibigo G | bibigo G | ! bibigo G | bibigo G ! bibigo
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('bibigo',)
Out Lmks:['bibigo']
Out Grounds: {'bibigo'}
Placeholder Map: {'bibigo': 'a'}
True

366
exact_restricted_avoidance ['c'] Input utterance: make your way to Nature's Way Café, exactly three times
True Ground LTL: M & natures_way_café F & ! natures_way_café F & natures_way_café F & ! natures_way_café F natures_way_café | ! natures_way_café G | natures_way_café G | ! natures_way_café G | natures_way_café G | ! natures_way_café G | natures_way_café G ! natures_way_café
Out Ground LTL: M & natures_way_café F & ! natures_way_café F & natures_way_café F & ! natures_way_café F natures_way_café | ! natures_way_café G | natures_way_café G | ! natures_way_café G | natures_way_café G | ! natures_way_café G | natures_way_café G ! natures_way_café
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Nature's Way Café",)
Out Lmks:["Nature's Way Café"]
Out Grounds: {"Nature's Way Café"}
Placeholder Map: {"Nature's Way Café": 'a'}
True

367
exact_restricted_avoidance ['c'] Input utterance: make your way to Poke Bar, exactly three times
True Ground LTL: M & poke_bar F & ! poke_bar F & poke_bar F & ! poke_bar F poke_bar | ! poke_bar G | poke_bar G | ! poke_bar G | poke_bar G | ! poke_bar G | poke_bar G ! poke_bar
Out Ground LTL: M & poke_bar F & ! poke_bar F & poke_bar F & ! poke_bar F poke_bar | ! poke_bar G | poke_bar G | ! poke_bar G | poke_bar G | ! poke_bar G | poke_bar G ! poke_bar
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Poke Bar',)
Out Lmks:['Poke Bar']
Out Grounds: {'Poke Bar'}
Placeholder Map: {'Poke Bar': 'a'}
True

368
exact_restricted_avoidance ['c'] Input utterance: you have to visit London Cleaners, exactly three times
True Ground LTL: M & london_cleaners F & ! london_cleaners F & london_cleaners F & ! london_cleaners F london_cleaners | ! london_cleaners G | london_cleaners G | ! london_cleaners G | london_cleaners G | ! london_cleaners G | london_cleaners G ! london_cleaners
Out Ground LTL: M & london_cleaners F & ! london_cleaners F & london_cleaners F & ! london_cleaners F london_cleaners | ! london_cleaners G | london_cleaners G | ! london_cleaners G | london_cleaners G | ! london_cleaners G | london_cleaners G ! london_cleaners
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('London Cleaners',)
Out Lmks:['London Cleaners']
Out Grounds: {'London Cleaners'}
Placeholder Map: {'London Cleaners': 'a'}
True

369
exact_restricted_avoidance ['c'] Input utterance: you have to visit Westwood's Village Square, exactly three times
True Ground LTL: M & westwoods_village_square F & ! westwoods_village_square F & westwoods_village_square F & ! westwoods_village_square F westwoods_village_square | ! westwoods_village_square G | westwoods_village_square G | ! westwoods_village_square G | westwoods_village_square G | ! westwoods_village_square G | westwoods_village_square G ! westwoods_village_square
Out Ground LTL: M & westwood_village F & ! westwood_village F & westwood_village F & ! westwood_village F westwood_village | ! westwood_village G | westwood_village G | ! westwood_village G | westwood_village G | ! westwood_village G | westwood_village G ! westwood_village
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Westwood's Village Square",)
Out Lmks:["Westwood's Village Square"]
Out Grounds: {'Westwood Village'}
Placeholder Map: {'Westwood Village': 'a'}
False

370
exact_restricted_avoidance ['c'] Input utterance: you must reach Mio Babbo's, exactly three times
True Ground LTL: M & mio_babbos F & ! mio_babbos F & mio_babbos F & ! mio_babbos F mio_babbos | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G ! mio_babbos
Out Ground LTL: M & mio_babbos F & ! mio_babbos F & mio_babbos F & ! mio_babbos F mio_babbos | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G ! mio_babbos
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Mio Babbo's",)
Out Lmks:["Mio Babbo's"]
Out Grounds: {"Mio Babbo's"}
Placeholder Map: {"Mio Babbo's": 'a'}
True

371
exact_restricted_avoidance ['c'] Input utterance: you must reach Starbucks, exactly three times
True Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
Out Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

372
exact_restricted_avoidance ['c'] Input utterance: navigate to The Gayley Building, exactly three times
True Ground LTL: M & the_gayley_building F & ! the_gayley_building F & the_gayley_building F & ! the_gayley_building F the_gayley_building | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G ! the_gayley_building
Out Ground LTL: M & the_gayley_building F & ! the_gayley_building F & the_gayley_building F & ! the_gayley_building F the_gayley_building | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G ! the_gayley_building
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('The Gayley Building',)
Out Lmks:['The Gayley Building']
Out Grounds: {'The Gayley Building'}
Placeholder Map: {'The Gayley Building': 'a'}
True

373
exact_restricted_avoidance ['c'] Input utterance: navigate to bibigo, exactly three times
True Ground LTL: M & bibigo F & ! bibigo F & bibigo F & ! bibigo F bibigo | ! bibigo G | bibigo G | ! bibigo G | bibigo G | ! bibigo G | bibigo G ! bibigo
Out Ground LTL: M & bibigo F & ! bibigo F & bibigo F & ! bibigo F bibigo | ! bibigo G | bibigo G | ! bibigo G | bibigo G | ! bibigo G | bibigo G ! bibigo
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('bibigo',)
Out Lmks:['bibigo']
Out Grounds: {'bibigo'}
Placeholder Map: {'bibigo': 'a'}
True

374
exact_restricted_avoidance ['c'] Input utterance: visit Yogurtland, exactly three times no more no less
True Ground LTL: M & yogurtland F & ! yogurtland F & yogurtland F & ! yogurtland F yogurtland | ! yogurtland G | yogurtland G | ! yogurtland G | yogurtland G | ! yogurtland G | yogurtland G ! yogurtland
Out Ground LTL: M & yogurtland F & ! yogurtland F & yogurtland F & ! yogurtland F yogurtland | ! yogurtland G | yogurtland G | ! yogurtland G | yogurtland G | ! yogurtland G | yogurtland G ! yogurtland
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Yogurtland',)
Out Lmks:['Yogurtland']
Out Grounds: {'Yogurtland'}
Placeholder Map: {'Yogurtland': 'a'}
True

375
exact_restricted_avoidance ['c'] Input utterance: visit Village Center Newsstand, exactly three times no more no less
True Ground LTL: M & village_center_newsstand F & ! village_center_newsstand F & village_center_newsstand F & ! village_center_newsstand F village_center_newsstand | ! village_center_newsstand G | village_center_newsstand G | ! village_center_newsstand G | village_center_newsstand G | ! village_center_newsstand G | village_center_newsstand G ! village_center_newsstand
Out Ground LTL: M & village_center_newsstand F & ! village_center_newsstand F & village_center_newsstand F & ! village_center_newsstand F village_center_newsstand | ! village_center_newsstand G | village_center_newsstand G | ! village_center_newsstand G | village_center_newsstand G | ! village_center_newsstand G | village_center_newsstand G ! village_center_newsstand
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Village Center Newsstand',)
Out Lmks:['Village Center Newsstand']
Out Grounds: {'Village Center Newsstand'}
Placeholder Map: {'Village Center Newsstand': 'a'}
True

376
exact_restricted_avoidance ['c'] Input utterance: you have to go to UCLA Extension - Westwood Village Center, and you can not go there more or less than three times
True Ground LTL: M & ucla_extension_westwood_village_center F & ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center F & ! ucla_extension_westwood_village_center F ucla_extension_westwood_village_center | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G ! ucla_extension_westwood_village_center
Out Ground LTL: M & ucla_extension_westwood_village_center F & ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center F & ! ucla_extension_westwood_village_center F ucla_extension_westwood_village_center | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G ! ucla_extension_westwood_village_center
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('UCLA Extension - Westwood Village Center',)
Out Lmks:['UCLA Extension - Westwood Village Center']
Out Grounds: {'UCLA Extension - Westwood Village Center'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a'}
True

377
exact_restricted_avoidance ['c'] Input utterance: you have to go to London Cleaners, and you can not go there more or less than three times
True Ground LTL: M & london_cleaners F & ! london_cleaners F & london_cleaners F & ! london_cleaners F london_cleaners | ! london_cleaners G | london_cleaners G | ! london_cleaners G | london_cleaners G | ! london_cleaners G | london_cleaners G ! london_cleaners
Out Ground LTL: M & london_cleaners F & ! london_cleaners F & london_cleaners F & ! london_cleaners F london_cleaners | ! london_cleaners G | london_cleaners G | ! london_cleaners G | london_cleaners G | ! london_cleaners G | london_cleaners G ! london_cleaners
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('London Cleaners',)
Out Lmks:['London Cleaners']
Out Grounds: {'London Cleaners'}
Placeholder Map: {'London Cleaners': 'a'}
True

378
exact_restricted_avoidance ['c'] Input utterance: go to Kinross Building South, more or less than three times is prohibited
True Ground LTL: M & kinross_building_south F & ! kinross_building_south F & kinross_building_south F & ! kinross_building_south F kinross_building_south | ! kinross_building_south G | kinross_building_south G | ! kinross_building_south G | kinross_building_south G | ! kinross_building_south G | kinross_building_south G ! kinross_building_south
Out Ground LTL: M & kinross_building_south F & ! kinross_building_south F & kinross_building_south F & ! kinross_building_south F kinross_building_south | ! kinross_building_south G | kinross_building_south G | ! kinross_building_south G | kinross_building_south G | ! kinross_building_south G | kinross_building_south G ! kinross_building_south
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Kinross Building South',)
Out Lmks:['Kinross Building South']
Out Grounds: {'Kinross Building South'}
Placeholder Map: {'Kinross Building South': 'a'}
True

379
exact_restricted_avoidance ['c'] Input utterance: go to Gayley Center, more or less than three times is prohibited
True Ground LTL: M & gayley_center F & ! gayley_center F & gayley_center F & ! gayley_center F gayley_center | ! gayley_center G | gayley_center G | ! gayley_center G | gayley_center G | ! gayley_center G | gayley_center G ! gayley_center
Out Ground LTL: M & gayley_center F & ! gayley_center F & gayley_center F & ! gayley_center F gayley_center | ! gayley_center G | gayley_center G | ! gayley_center G | gayley_center G | ! gayley_center G | gayley_center G ! gayley_center
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Gayley Center',)
Out Lmks:['Gayley Center']
Out Grounds: {'Gayley Center'}
Placeholder Map: {'Gayley Center': 'a'}
True

380
exact_restricted_avoidance ['c'] Input utterance: go to Noah's Bagels, three times and do not visit it anymore
True Ground LTL: M & noahs_bagels F & ! noahs_bagels F & noahs_bagels F & ! noahs_bagels F noahs_bagels | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G ! noahs_bagels
Out Ground LTL: M & noahs_bagels F & ! noahs_bagels F & noahs_bagels F & ! noahs_bagels F noahs_bagels | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G ! noahs_bagels
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Noah's Bagels",)
Out Lmks:["Noah's Bagels"]
Out Grounds: {"Noah's Bagels"}
Placeholder Map: {"Noah's Bagels": 'a'}
True

381
exact_restricted_avoidance ['c'] Input utterance: go to The Gayley Building, three times and do not visit it anymore
True Ground LTL: M & the_gayley_building F & ! the_gayley_building F & the_gayley_building F & ! the_gayley_building F the_gayley_building | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G ! the_gayley_building
Out Ground LTL: M & the_gayley_building F & ! the_gayley_building F & the_gayley_building F & ! the_gayley_building F the_gayley_building | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G ! the_gayley_building
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('The Gayley Building',)
Out Lmks:['The Gayley Building']
Out Grounds: {'The Gayley Building'}
Placeholder Map: {'The Gayley Building': 'a'}
True

382
exact_restricted_avoidance ['c'] Input utterance: you must visit Red Pelican Music, exactly three times
True Ground LTL: M & red_pelican_music F & ! red_pelican_music F & red_pelican_music F & ! red_pelican_music F red_pelican_music | ! red_pelican_music G | red_pelican_music G | ! red_pelican_music G | red_pelican_music G | ! red_pelican_music G | red_pelican_music G ! red_pelican_music
Out Ground LTL: M & red_pelican_music F & ! red_pelican_music F & red_pelican_music F & ! red_pelican_music F red_pelican_music | ! red_pelican_music G | red_pelican_music G | ! red_pelican_music G | red_pelican_music G | ! red_pelican_music G | red_pelican_music G ! red_pelican_music
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Red Pelican Music',)
Out Lmks:['Red Pelican Music']
Out Grounds: {'Red Pelican Music'}
Placeholder Map: {'Red Pelican Music': 'a'}
True

383
exact_restricted_avoidance ['c'] Input utterance: you must visit 800 Degrees, exactly three times
True Ground LTL: M & 800_degrees F & ! 800_degrees F & 800_degrees F & ! 800_degrees F 800_degrees | ! 800_degrees G | 800_degrees G | ! 800_degrees G | 800_degrees G | ! 800_degrees G | 800_degrees G ! 800_degrees
Out Ground LTL: M & 800_degrees F & ! 800_degrees F & 800_degrees F & ! 800_degrees F 800_degrees | ! 800_degrees G | 800_degrees G | ! 800_degrees G | 800_degrees G | ! 800_degrees G | 800_degrees G ! 800_degrees
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('800 Degrees',)
Out Lmks:['800 Degrees']
Out Grounds: {'800 Degrees'}
Placeholder Map: {'800 Degrees': 'a'}
True

384
exact_restricted_avoidance ['c'] Input utterance: visit Westwood's Village Square, three times and never revisit it again
True Ground LTL: M & westwoods_village_square F & ! westwoods_village_square F & westwoods_village_square F & ! westwoods_village_square F westwoods_village_square | ! westwoods_village_square G | westwoods_village_square G | ! westwoods_village_square G | westwoods_village_square G | ! westwoods_village_square G | westwoods_village_square G ! westwoods_village_square
Out Ground LTL: M & westwood_village F & ! westwood_village F & westwood_village F & ! westwood_village F westwood_village | ! westwood_village G | westwood_village G | ! westwood_village G | westwood_village G | ! westwood_village G | westwood_village G ! westwood_village
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Westwood's Village Square",)
Out Lmks:["Westwood's Village Square"]
Out Grounds: {'Westwood Village'}
Placeholder Map: {'Westwood Village': 'a'}
False

385
exact_restricted_avoidance ['c'] Input utterance: visit UCLA Extension - Westwood Village Center, three times and never revisit it again
True Ground LTL: M & ucla_extension_westwood_village_center F & ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center F & ! ucla_extension_westwood_village_center F ucla_extension_westwood_village_center | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G ! ucla_extension_westwood_village_center
Out Ground LTL: M & ucla_extension_westwood_village_center F & ! ucla_extension_westwood_village_center F & ucla_extension_westwood_village_center F & ! ucla_extension_westwood_village_center F ucla_extension_westwood_village_center | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G | ! ucla_extension_westwood_village_center G | ucla_extension_westwood_village_center G ! ucla_extension_westwood_village_center
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('UCLA Extension - Westwood Village Center',)
Out Lmks:['UCLA Extension - Westwood Village Center']
Out Grounds: {'UCLA Extension - Westwood Village Center'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a'}
True

386
exact_restricted_avoidance ['c'] Input utterance: you must go to Nature's Way Café, exactly three times
True Ground LTL: M & natures_way_café F & ! natures_way_café F & natures_way_café F & ! natures_way_café F natures_way_café | ! natures_way_café G | natures_way_café G | ! natures_way_café G | natures_way_café G | ! natures_way_café G | natures_way_café G ! natures_way_café
Out Ground LTL: M & natures_way_café F & ! natures_way_café F & natures_way_café F & ! natures_way_café F natures_way_café | ! natures_way_café G | natures_way_café G | ! natures_way_café G | natures_way_café G | ! natures_way_café G | natures_way_café G ! natures_way_café
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Nature's Way Café",)
Out Lmks:["Nature's Way Café"]
Out Grounds: {"Nature's Way Café"}
Placeholder Map: {"Nature's Way Café": 'a'}
True

387
exact_restricted_avoidance ['c'] Input utterance: you must go to UTLA Beauty, exactly three times
True Ground LTL: M & utla_beauty F & ! utla_beauty F & utla_beauty F & ! utla_beauty F utla_beauty | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G ! utla_beauty
Out Ground LTL: M & utla_beauty F & ! utla_beauty F & utla_beauty F & ! utla_beauty F utla_beauty | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G ! utla_beauty
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('UTLA Beauty',)
Out Lmks:['UTLA Beauty']
Out Grounds: {'UTLA Beauty'}
Placeholder Map: {'UTLA Beauty': 'a'}
True

388
exact_restricted_avoidance ['c'] Input utterance: visit Starbucks, three times and then stop visiting it anymore
True Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
Out Ground LTL: M & starbucks F & ! starbucks F & starbucks F & ! starbucks F starbucks | ! starbucks G | starbucks G | ! starbucks G | starbucks G | ! starbucks G | starbucks G ! starbucks
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Starbucks',)
Out Lmks:['Starbucks']
Out Grounds: {'Starbucks'}
Placeholder Map: {'Starbucks': 'a'}
True

389
exact_restricted_avoidance ['c'] Input utterance: visit The Gayley Building, three times and then stop visiting it anymore
True Ground LTL: M & the_gayley_building F & ! the_gayley_building F & the_gayley_building F & ! the_gayley_building F the_gayley_building | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G ! the_gayley_building
Out Ground LTL: M & the_gayley_building F & ! the_gayley_building F & the_gayley_building F & ! the_gayley_building F the_gayley_building | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G | ! the_gayley_building G | the_gayley_building G ! the_gayley_building
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('The Gayley Building',)
Out Lmks:['The Gayley Building']
Out Grounds: {'The Gayley Building'}
Placeholder Map: {'The Gayley Building': 'a'}
True

390
exact_restricted_avoidance ['c'] Input utterance: you are required to visit Victoria's Secret, on exactly three separate instances
True Ground LTL: M & victorias_secret F & ! victorias_secret F & victorias_secret F & ! victorias_secret F victorias_secret | ! victorias_secret G | victorias_secret G | ! victorias_secret G | victorias_secret G | ! victorias_secret G | victorias_secret G ! victorias_secret
Out Ground LTL: M & victorias_secret F & ! victorias_secret F & victorias_secret F victorias_secret | ! victorias_secret G | victorias_secret G | ! victorias_secret G | victorias_secret G | ! victorias_secret G | victorias_secret G ! victorias_secret
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Victoria's Secret",)
Out Lmks:["Victoria's Secret"]
Out Grounds: {"Victoria's Secret"}
Placeholder Map: {"Victoria's Secret": 'a'}
False

391
exact_restricted_avoidance ['c'] Input utterance: you are required to visit UCLA Extension - Lindbrook Center, on exactly three separate instances
True Ground LTL: M & ucla_extension_lindbrook_center F & ! ucla_extension_lindbrook_center F & ucla_extension_lindbrook_center F & ! ucla_extension_lindbrook_center F ucla_extension_lindbrook_center | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G ! ucla_extension_lindbrook_center
Out Ground LTL: M & ucla_extension_lindbrook_center F & ! ucla_extension_lindbrook_center F & ucla_extension_lindbrook_center F ucla_extension_lindbrook_center | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G ! ucla_extension_lindbrook_center
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('UCLA Extension - Lindbrook Center',)
Out Lmks:['UCLA Extension - Lindbrook Center']
Out Grounds: {'UCLA Extension - Lindbrook Center'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a'}
False

392
exact_restricted_avoidance ['c'] Input utterance: the required number of separate visits to Native Foods, is exactly three
True Ground LTL: M & native_foods F & ! native_foods F & native_foods F & ! native_foods F native_foods | ! native_foods G | native_foods G | ! native_foods G | native_foods G | ! native_foods G | native_foods G ! native_foods
Out Ground LTL: M & native_foods F & ! native_foods F & native_foods F & ! native_foods F native_foods | ! native_foods G | native_foods G | ! native_foods G | native_foods G | ! native_foods G | native_foods G ! native_foods
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Native Foods',)
Out Lmks:['Native Foods']
Out Grounds: {'Native Foods'}
Placeholder Map: {'Native Foods': 'a'}
True

393
exact_restricted_avoidance ['c'] Input utterance: the required number of separate visits to Plaza la Reina, is exactly three
True Ground LTL: M & plaza_la_reina F & ! plaza_la_reina F & plaza_la_reina F & ! plaza_la_reina F plaza_la_reina | ! plaza_la_reina G | plaza_la_reina G | ! plaza_la_reina G | plaza_la_reina G | ! plaza_la_reina G | plaza_la_reina G ! plaza_la_reina
Out Ground LTL: M & plaza_la_reina F & ! plaza_la_reina F & plaza_la_reina F & ! plaza_la_reina F plaza_la_reina | ! plaza_la_reina G | plaza_la_reina G | ! plaza_la_reina G | plaza_la_reina G | ! plaza_la_reina G | plaza_la_reina G ! plaza_la_reina
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Plaza la Reina',)
Out Lmks:['Plaza la Reina']
Out Grounds: {'Plaza la Reina'}
Placeholder Map: {'Plaza la Reina': 'a'}
True

394
exact_restricted_avoidance ['c'] Input utterance: visit Westwood Sporting Goods, exactly three separate times
True Ground LTL: M & westwood_sporting_goods F & ! westwood_sporting_goods F & westwood_sporting_goods F & ! westwood_sporting_goods F westwood_sporting_goods | ! westwood_sporting_goods G | westwood_sporting_goods G | ! westwood_sporting_goods G | westwood_sporting_goods G | ! westwood_sporting_goods G | westwood_sporting_goods G ! westwood_sporting_goods
Out Ground LTL: M & westwood_sporting_goods F & ! westwood_sporting_goods F & westwood_sporting_goods F & ! westwood_sporting_goods F westwood_sporting_goods | ! westwood_sporting_goods G | westwood_sporting_goods G | ! westwood_sporting_goods G | westwood_sporting_goods G | ! westwood_sporting_goods G | westwood_sporting_goods G ! westwood_sporting_goods
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Westwood Sporting Goods',)
Out Lmks:['Westwood Sporting Goods']
Out Grounds: {'Westwood Sporting Goods'}
Placeholder Map: {'Westwood Sporting Goods': 'a'}
True

395
exact_restricted_avoidance ['c'] Input utterance: visit Mio Babbo's, exactly three separate times
True Ground LTL: M & mio_babbos F & ! mio_babbos F & mio_babbos F & ! mio_babbos F mio_babbos | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G ! mio_babbos
Out Ground LTL: M & mio_babbos F & ! mio_babbos F & mio_babbos F & ! mio_babbos F mio_babbos | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G ! mio_babbos
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Mio Babbo's",)
Out Lmks:["Mio Babbo's"]
Out Grounds: {"Mio Babbo's"}
Placeholder Map: {"Mio Babbo's": 'a'}
True

396
exact_restricted_avoidance ['c'] Input utterance: pass through Mio Babbo's, exactly three times
True Ground LTL: M & mio_babbos F & ! mio_babbos F & mio_babbos F & ! mio_babbos F mio_babbos | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G ! mio_babbos
Out Ground LTL: M & mio_babbos F & ! mio_babbos F & mio_babbos F & ! mio_babbos F mio_babbos | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G | ! mio_babbos G | mio_babbos G ! mio_babbos
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Mio Babbo's",)
Out Lmks:["Mio Babbo's"]
Out Grounds: {"Mio Babbo's"}
Placeholder Map: {"Mio Babbo's": 'a'}
True

397
exact_restricted_avoidance ['c'] Input utterance: pass through Kinross Building South, exactly three times
True Ground LTL: M & kinross_building_south F & ! kinross_building_south F & kinross_building_south F & ! kinross_building_south F kinross_building_south | ! kinross_building_south G | kinross_building_south G | ! kinross_building_south G | kinross_building_south G | ! kinross_building_south G | kinross_building_south G ! kinross_building_south
Out Ground LTL: M & kinross_building_south F & ! kinross_building_south F & kinross_building_south F & ! kinross_building_south F kinross_building_south | ! kinross_building_south G | kinross_building_south G | ! kinross_building_south G | kinross_building_south G | ! kinross_building_south G | kinross_building_south G ! kinross_building_south
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Kinross Building South',)
Out Lmks:['Kinross Building South']
Out Grounds: {'Kinross Building South'}
Placeholder Map: {'Kinross Building South': 'a'}
True

398
exact_restricted_avoidance ['c'] Input utterance: go to UTLA Beauty, then leave UTLA Beauty, and then repeat this exactly two more times
True Ground LTL: M & utla_beauty F & ! utla_beauty F & utla_beauty F & ! utla_beauty F utla_beauty | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G ! utla_beauty
Out Ground LTL: M & utla_beauty F & ! utla_beauty F & utla_beauty F & ! utla_beauty F & utla_beauty F & ! utla_beauty F utla_beauty | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G | ! utla_beauty G | utla_beauty G ! utla_beauty
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('UTLA Beauty',)
Out Lmks:['UTLA Beauty']
Out Grounds: {'UTLA Beauty'}
Placeholder Map: {'UTLA Beauty': 'a'}
False

399
exact_restricted_avoidance ['c'] Input utterance: go to Noah's Bagels, then leave Noah's Bagels, and then repeat this exactly two more times
True Ground LTL: M & noahs_bagels F & ! noahs_bagels F & noahs_bagels F & ! noahs_bagels F noahs_bagels | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G ! noahs_bagels
Out Ground LTL: M & noahs_bagels F & ! noahs_bagels F & noahs_bagels F & ! noahs_bagels F & noahs_bagels F & ! noahs_bagels F noahs_bagels | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G | ! noahs_bagels G | noahs_bagels G ! noahs_bagels
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Noah's Bagels",)
Out Lmks:["Noah's Bagels"]
Out Grounds: {"Noah's Bagels"}
Placeholder Map: {"Noah's Bagels": 'a'}
False

400
exact_restricted_avoidance ['c'] Input utterance: make sure that you have exactly three separate visits to Peet's Coffee & Tea
True Ground LTL: M & peets_coffee_&_tea F & ! peets_coffee_&_tea F & peets_coffee_&_tea F & ! peets_coffee_&_tea F peets_coffee_&_tea | ! peets_coffee_&_tea G | peets_coffee_&_tea G | ! peets_coffee_&_tea G | peets_coffee_&_tea G | ! peets_coffee_&_tea G | peets_coffee_&_tea G ! peets_coffee_&_tea
Out Ground LTL: M & peets_coffee_&_tea F & ! peets_coffee_&_tea F & peets_coffee_&_tea F & ! peets_coffee_&_tea F peets_coffee_&_tea | ! peets_coffee_&_tea G | peets_coffee_&_tea G | ! peets_coffee_&_tea G | peets_coffee_&_tea G | ! peets_coffee_&_tea G | peets_coffee_&_tea G ! peets_coffee_&_tea
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Peet's Coffee & Tea",)
Out Lmks:["Peet's Coffee & Tea"]
Out Grounds: {"Peet's Coffee & Tea"}
Placeholder Map: {"Peet's Coffee & Tea": 'a'}
True

401
exact_restricted_avoidance ['c'] Input utterance: make sure that you have exactly three separate visits to Native Foods
True Ground LTL: M & native_foods F & ! native_foods F & native_foods F & ! native_foods F native_foods | ! native_foods G | native_foods G | ! native_foods G | native_foods G | ! native_foods G | native_foods G ! native_foods
Out Ground LTL: M & native_foods F & ! native_foods F & native_foods F & ! native_foods F native_foods | ! native_foods G | native_foods G | ! native_foods G | native_foods G | ! native_foods G | native_foods G ! native_foods
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Native Foods',)
Out Lmks:['Native Foods']
Out Grounds: {'Native Foods'}
Placeholder Map: {'Native Foods': 'a'}
True

402
exact_restricted_avoidance ['c'] Input utterance: do not exceed or fall short on three separate visits to UCLA Extension - Lindbrook Center
True Ground LTL: M & ucla_extension_lindbrook_center F & ! ucla_extension_lindbrook_center F & ucla_extension_lindbrook_center F & ! ucla_extension_lindbrook_center F ucla_extension_lindbrook_center | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G | ! ucla_extension_lindbrook_center G | ucla_extension_lindbrook_center G ! ucla_extension_lindbrook_center
Out Ground LTL: & & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center & U ! ucla_extension_lindbrook_center U ucla_extension_lindbrook_center F ucla_extension_lindbrook_center
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: & & U ! a U a & U ! a U a & U ! a U a F a
True Lmks: ('UCLA Extension - Lindbrook Center',)
Out Lmks:['UCLA Extension - Lindbrook Center']
Out Grounds: {'UCLA Extension - Lindbrook Center'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a'}
Syntax Error

403
exact_restricted_avoidance ['c'] Input utterance: do not exceed or fall short on three separate visits to Westwood Sporting Goods
True Ground LTL: M & westwood_sporting_goods F & ! westwood_sporting_goods F & westwood_sporting_goods F & ! westwood_sporting_goods F westwood_sporting_goods | ! westwood_sporting_goods G | westwood_sporting_goods G | ! westwood_sporting_goods G | westwood_sporting_goods G | ! westwood_sporting_goods G | westwood_sporting_goods G ! westwood_sporting_goods
Out Ground LTL: & & U ! westwood_sporting_goods U westwood_sporting_goods & U ! westwood_sporting_goods U westwood_sporting_goods & U ! westwood_sporting_goods U westwood_sporting_goods F westwood_sporting_goods
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: & & U ! a U a & U ! a U a & U ! a U a F a
True Lmks: ('Westwood Sporting Goods',)
Out Lmks:['Westwood Sporting Goods']
Out Grounds: {'Westwood Sporting Goods'}
Placeholder Map: {'Westwood Sporting Goods': 'a'}
Syntax Error

404
future_avoidance ['a', 'b'] Input utterance: do not go to Poke Bar, once you have visited Denny's
True Ground LTL: G i dennys X G ! poke_bar
Out Ground LTL: ! F & dennys U poke_bar
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a U b
True Lmks: ("Denny's", 'Poke Bar')
Out Lmks:["Denny's", 'Poke Bar']
Out Grounds: {"Denny's", 'Poke Bar'}
Placeholder Map: {"Denny's": 'a', 'Poke Bar': 'b'}
Syntax Error

405
future_avoidance ['a', 'b'] Input utterance: do not go to Peet's Coffee & Tea, once you have visited Native Foods
True Ground LTL: G i native_foods X G ! peets_coffee_&_tea
Out Ground LTL: ! F & native_foods U peets_coffee_&_tea
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a U b
True Lmks: ('Native Foods', "Peet's Coffee & Tea")
Out Lmks:['Native Foods', "Peet's Coffee & Tea"]
Out Grounds: {'Native Foods', "Peet's Coffee & Tea"}
Placeholder Map: {'Native Foods': 'a', "Peet's Coffee & Tea": 'b'}
Syntax Error

406
future_avoidance ['a', 'b'] Input utterance: never go to Veggie Grill, once you go to U-Mini
True Ground LTL: G i u_mini X G ! veggie_grill
Out Ground LTL: G i u_mini X veggie_grill
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('U-Mini', 'Veggie Grill')
Out Lmks:['Veggie Grill', 'U-Mini']
Out Grounds: {'Veggie Grill', 'U-Mini'}
Placeholder Map: {'Veggie Grill': 'a', 'U-Mini': 'b'}
False

407
future_avoidance ['a', 'b'] Input utterance: never go to bibigo, once you go to Victoria's Secret
True Ground LTL: G i victorias_secret X G ! bibigo
Out Ground LTL: G i victorias_secret X bibigo
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Victoria's Secret", 'bibigo')
Out Lmks:["Victoria's Secret", 'bibigo']
Out Grounds: {"Victoria's Secret", 'bibigo'}
Placeholder Map: {"Victoria's Secret": 'a', 'bibigo': 'b'}
False

408
future_avoidance ['a', 'b'] Input utterance: after you visit Peet's Coffee & Tea, you can not visit Stone Canyon Creek (underground), afterward
True Ground LTL: G i peets_coffee_&_tea X G ! stone_canyon_creek_underground
Out Ground LTL: G e peets_coffee_&_tea X stone_canyon_creek_underground
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ("Peet's Coffee & Tea", 'Stone Canyon Creek (underground)')
Out Lmks:['Stone Canyon Creek (underground)', "Peet's Coffee & Tea"]
Out Grounds: {'Stone Canyon Creek (underground)', "Peet's Coffee & Tea"}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', "Peet's Coffee & Tea": 'b'}
False

409
future_avoidance ['a', 'b'] Input utterance: after you visit Gayley Center, you can not visit London Cleaners, afterward
True Ground LTL: G i gayley_center X G ! london_cleaners
Out Ground LTL: G e gayley_center X london_cleaners
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('Gayley Center', 'London Cleaners')
Out Lmks:['Gayley Center', 'London Cleaners']
Out Grounds: {'Gayley Center', 'London Cleaners'}
Placeholder Map: {'Gayley Center': 'a', 'London Cleaners': 'b'}
False

410
future_avoidance ['a', 'b'] Input utterance: once bibigo, is visited you can not go to Occidental Petroleum Heliport, any more
True Ground LTL: G i bibigo X G ! occidental_petroleum_heliport
Out Ground LTL: G e bibigo X occidental_petroleum_heliport
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('bibigo', 'Occidental Petroleum Heliport')
Out Lmks:['Occidental Petroleum Heliport', 'bibigo']
Out Grounds: {'Occidental Petroleum Heliport', 'bibigo'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'bibigo': 'b'}
False

411
future_avoidance ['a', 'b'] Input utterance: once Gayley & Lindbrook Apartments, is visited you can not go to Gayley Center, any more
True Ground LTL: G i gayley_&_lindbrook_apartments X G ! gayley_center
Out Ground LTL: G e gayley_&_lindbrook_apartments X gayley_center
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('Gayley & Lindbrook Apartments', 'Gayley Center')
Out Lmks:['Gayley Center', 'Gayley & Lindbrook Apartments']
Out Grounds: {'Gayley Center', 'Gayley & Lindbrook Apartments'}
Placeholder Map: {'Gayley Center': 'a', 'Gayley & Lindbrook Apartments': 'b'}
False

412
future_avoidance ['a', 'b'] Input utterance: you can visit Iso Fusion Café, before bibigo, is visited but you can never visit Iso Fusion Café, afterward
True Ground LTL: G i bibigo X G ! iso_fusion_café
Out Ground LTL: G e bibigo X iso_fusion_café
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('bibigo', 'Iso Fusion Café')
Out Lmks:['bibigo', 'Iso Fusion Café']
Out Grounds: {'bibigo', 'Iso Fusion Café'}
Placeholder Map: {'bibigo': 'a', 'Iso Fusion Café': 'b'}
False

413
future_avoidance ['a', 'b'] Input utterance: you can visit Yogurtland, before Nature's Way Café, is visited but you can never visit Yogurtland, afterward
True Ground LTL: G i natures_way_café X G ! yogurtland
Out Ground LTL: G e natures_way_café X yogurtland
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ("Nature's Way Café", 'Yogurtland')
Out Lmks:["Nature's Way Café", 'Yogurtland']
Out Grounds: {"Nature's Way Café", 'Yogurtland'}
Placeholder Map: {"Nature's Way Café": 'a', 'Yogurtland': 'b'}
False

414
future_avoidance ['a', 'b'] Input utterance: after you go to Westwood Sporting Goods, you have to avoid The Gayley Building
True Ground LTL: G i westwood_sporting_goods X G ! the_gayley_building
Out Ground LTL: G i westwood_sporting_goods X the_gayley_building
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Westwood Sporting Goods', 'The Gayley Building')
Out Lmks:['Westwood Sporting Goods', 'The Gayley Building']
Out Grounds: {'Westwood Sporting Goods', 'The Gayley Building'}
Placeholder Map: {'Westwood Sporting Goods': 'a', 'The Gayley Building': 'b'}
False

415
future_avoidance ['a', 'b'] Input utterance: after you go to The Gayley Building, you have to avoid Red Pelican Music
True Ground LTL: G i the_gayley_building X G ! red_pelican_music
Out Ground LTL: G i the_gayley_building X red_pelican_music
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('The Gayley Building', 'Red Pelican Music')
Out Lmks:['Red Pelican Music', 'The Gayley Building']
Out Grounds: {'Red Pelican Music', 'The Gayley Building'}
Placeholder Map: {'Red Pelican Music': 'a', 'The Gayley Building': 'b'}
False

416
future_avoidance ['a', 'b'] Input utterance: you must avoid Occidental Petroleum Heliport, only after you go to Occidental Petroleum Heliport
True Ground LTL: G i ucla_extension_lindbrook_center X G ! occidental_petroleum_heliport
Out Ground LTL: & U ! occidental_petroleum_heliport G occidental_petroleum_heliport
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: & U ! a G a
True Lmks: ('UCLA Extension - Lindbrook Center', 'Occidental Petroleum Heliport')
Out Lmks:['Occidental Petroleum Heliport']
Out Grounds: {'Occidental Petroleum Heliport'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a'}
RER or Grounding Error

417
future_avoidance ['a', 'b'] Input utterance: you must avoid Denny's, only after you go to Denny's
True Ground LTL: G i stone_canyon_creek_underground X G ! dennys
Out Ground LTL: & U ! dennys G dennys
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: & U ! a G a
True Lmks: ('Stone Canyon Creek (underground)', "Denny's")
Out Lmks:["Denny's"]
Out Grounds: {"Denny's"}
Placeholder Map: {"Denny's": 'a'}
RER or Grounding Error

418
future_avoidance ['a', 'b'] Input utterance: once you have gone to bibigo, you must stay away from Parking 32
True Ground LTL: G i bibigo X G ! parking_32
Out Ground LTL: G e bibigo X parking_32
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('bibigo', 'Parking 32')
Out Lmks:['Parking 32', 'bibigo']
Out Grounds: {'Parking 32', 'bibigo'}
Placeholder Map: {'Parking 32': 'a', 'bibigo': 'b'}
False

419
future_avoidance ['a', 'b'] Input utterance: once you have gone to Kinross Building South, you must stay away from 800 Degrees
True Ground LTL: G i kinross_building_south X G ! 800_degrees
Out Ground LTL: G e kinross_building_south X 800_degrees
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('Kinross Building South', '800 Degrees')
Out Lmks:['Kinross Building South', '800 Degrees']
Out Grounds: {'Kinross Building South', '800 Degrees'}
Placeholder Map: {'Kinross Building South': 'a', '800 Degrees': 'b'}
False

420
future_avoidance ['a', 'b'] Input utterance: you must stay away from London Cleaners, once you have gone to Gayley Center
True Ground LTL: G i gayley_center X G ! london_cleaners
Out Ground LTL: G i gayley_center X london_cleaners
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Gayley Center', 'London Cleaners')
Out Lmks:['Gayley Center', 'London Cleaners']
Out Grounds: {'Gayley Center', 'London Cleaners'}
Placeholder Map: {'Gayley Center': 'a', 'London Cleaners': 'b'}
False

421
future_avoidance ['a', 'b'] Input utterance: you must stay away from Stone Canyon Creek (underground), once you have gone to Nature's Way Café
True Ground LTL: G i natures_way_café X G ! stone_canyon_creek_underground
Out Ground LTL: G i natures_way_café X stone_canyon_creek_underground
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Nature's Way Café", 'Stone Canyon Creek (underground)')
Out Lmks:["Nature's Way Café", 'Stone Canyon Creek (underground)']
Out Grounds: {"Nature's Way Café", 'Stone Canyon Creek (underground)'}
Placeholder Map: {"Nature's Way Café": 'a', 'Stone Canyon Creek (underground)': 'b'}
False

422
future_avoidance ['a', 'b'] Input utterance: you can not move to London Cleaners, after you reach Westwood Wilshire
True Ground LTL: G i westwood_wilshire X G ! london_cleaners
Out Ground LTL: G i westwood_village X london_cleaners
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Westwood Wilshire', 'London Cleaners')
Out Lmks:['Westwood Wilshire', 'London Cleaners']
Out Grounds: {'Westwood Village', 'London Cleaners'}
Placeholder Map: {'Westwood Village': 'a', 'London Cleaners': 'b'}
False

423
future_avoidance ['a', 'b'] Input utterance: you can not move to The Gayley Building, after you reach London Cleaners
True Ground LTL: G i london_cleaners X G ! the_gayley_building
Out Ground LTL: G i london_cleaners X the_gayley_building
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('London Cleaners', 'The Gayley Building')
Out Lmks:['London Cleaners', 'The Gayley Building']
Out Grounds: {'London Cleaners', 'The Gayley Building'}
Placeholder Map: {'London Cleaners': 'a', 'The Gayley Building': 'b'}
False

424
future_avoidance ['a', 'b'] Input utterance: after you reach Westwood Sporting Goods, you can not move to Stone Canyon Creek (underground)
True Ground LTL: G i westwood_sporting_goods X G ! stone_canyon_creek_underground
Out Ground LTL: G i westwood_sporting_goods X stone_canyon_creek_underground
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Westwood Sporting Goods', 'Stone Canyon Creek (underground)')
Out Lmks:['Stone Canyon Creek (underground)', 'Westwood Sporting Goods']
Out Grounds: {'Stone Canyon Creek (underground)', 'Westwood Sporting Goods'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Westwood Sporting Goods': 'b'}
False

425
future_avoidance ['a', 'b'] Input utterance: after you reach London Cleaners, you can not move to Ike's Place
True Ground LTL: G i london_cleaners X G ! ikes_place
Out Ground LTL: G i london_cleaners X ikes_place
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('London Cleaners', "Ike's Place")
Out Lmks:['London Cleaners', "Ike's Place"]
Out Grounds: {'London Cleaners', "Ike's Place"}
Placeholder Map: {'London Cleaners': 'a', "Ike's Place": 'b'}
False

426
future_avoidance ['a', 'b'] Input utterance: once you go to Plaza la Reina, you have to avoid Westwood's Village Square, at all costs
True Ground LTL: G i plaza_la_reina X G ! westwoods_village_square
Out Ground LTL: G i plaza_la_reina X westwood_village
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Plaza la Reina', "Westwood's Village Square")
Out Lmks:['Plaza la Reina', "Westwood's Village Square"]
Out Grounds: {'Plaza la Reina', 'Westwood Village'}
Placeholder Map: {'Plaza la Reina': 'a', 'Westwood Village': 'b'}
False

427
future_avoidance ['a', 'b'] Input utterance: once you go to Iso Fusion Café, you have to avoid TCT Foods, at all costs
True Ground LTL: G i iso_fusion_café X G ! tct_foods
Out Ground LTL: G i iso_fusion_café X tct_foods
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Iso Fusion Café', 'TCT Foods')
Out Lmks:['TCT Foods', 'Iso Fusion Café']
Out Grounds: {'TCT Foods', 'Iso Fusion Café'}
Placeholder Map: {'TCT Foods': 'a', 'Iso Fusion Café': 'b'}
False

428
future_avoidance ['a', 'b'] Input utterance: you have to avoid Westwood Wilshire, once you go to Mongol BBQ
True Ground LTL: G i mongol_bbq X G ! westwood_wilshire
Out Ground LTL: G i mongol_bbq X westwood_village
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Mongol BBQ', 'Westwood Wilshire')
Out Lmks:['Westwood Wilshire', 'Mongol BBQ']
Out Grounds: {'Mongol BBQ', 'Westwood Village'}
Placeholder Map: {'Mongol BBQ': 'a', 'Westwood Village': 'b'}
False

429
future_avoidance ['a', 'b'] Input utterance: you have to avoid The Gayley Building, once you go to Denny's
True Ground LTL: G i dennys X G ! the_gayley_building
Out Ground LTL: G i dennys X the_gayley_building
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Denny's", 'The Gayley Building')
Out Lmks:["Denny's", 'The Gayley Building']
Out Grounds: {"Denny's", 'The Gayley Building'}
Placeholder Map: {"Denny's": 'a', 'The Gayley Building': 'b'}
False

430
future_avoidance ['a', 'b'] Input utterance: do not visit bibigo, after London Cleaners, is visited
True Ground LTL: G i london_cleaners X G ! bibigo
Out Ground LTL: ! F & london_cleaners F bibigo
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a F b
True Lmks: ('London Cleaners', 'bibigo')
Out Lmks:['bibigo', 'London Cleaners']
Out Grounds: {'London Cleaners', 'bibigo'}
Placeholder Map: {'London Cleaners': 'a', 'bibigo': 'b'}
False

431
future_avoidance ['a', 'b'] Input utterance: do not visit Stone Canyon Creek (underground), after Westwood Wilshire, is visited
True Ground LTL: G i westwood_wilshire X G ! stone_canyon_creek_underground
Out Ground LTL: G i westwood_village X stone_canyon_creek_underground
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Westwood Wilshire', 'Stone Canyon Creek (underground)')
Out Lmks:['Stone Canyon Creek (underground)', 'Westwood Wilshire']
Out Grounds: {'Stone Canyon Creek (underground)', 'Westwood Village'}
Placeholder Map: {'Stone Canyon Creek (underground)': 'a', 'Westwood Village': 'b'}
False

432
future_avoidance ['a', 'b'] Input utterance: you can go to Iso Fusion Café, but you must not go to TCT Foods, after that
True Ground LTL: G i iso_fusion_café X G ! tct_foods
Out Ground LTL: G i iso_fusion_café X tct_foods
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Iso Fusion Café', 'TCT Foods')
Out Lmks:['TCT Foods', 'Iso Fusion Café']
Out Grounds: {'TCT Foods', 'Iso Fusion Café'}
Placeholder Map: {'TCT Foods': 'a', 'Iso Fusion Café': 'b'}
False

433
future_avoidance ['a', 'b'] Input utterance: you can go to Parking 36, but you must not go to Iso Fusion Café, after that
True Ground LTL: G i parking_36 X G ! iso_fusion_café
Out Ground LTL: G i parking_36 X iso_fusion_café
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Parking 36', 'Iso Fusion Café')
Out Lmks:['Parking 36', 'Iso Fusion Café']
Out Grounds: {'Parking 36', 'Iso Fusion Café'}
Placeholder Map: {'Parking 36': 'a', 'Iso Fusion Café': 'b'}
False

434
future_avoidance ['a', 'b'] Input utterance: any visit to Yogurtland, is not allowed after you visit Peet's Coffee & Tea
True Ground LTL: G i peets_coffee_&_tea X G ! yogurtland
Out Ground LTL: G i peets_coffee_&_tea X yogurtland
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Peet's Coffee & Tea", 'Yogurtland')
Out Lmks:["Peet's Coffee & Tea", 'Yogurtland']
Out Grounds: {"Peet's Coffee & Tea", 'Yogurtland'}
Placeholder Map: {"Peet's Coffee & Tea": 'a', 'Yogurtland': 'b'}
False

435
future_avoidance ['a', 'b'] Input utterance: any visit to Noah's Bagels, is not allowed after you visit Westwood's Village Square
True Ground LTL: G i westwoods_village_square X G ! noahs_bagels
Out Ground LTL: G i westwood_village X noahs_bagels
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Westwood's Village Square", "Noah's Bagels")
Out Lmks:["Westwood's Village Square", "Noah's Bagels"]
Out Grounds: {'Westwood Village', "Noah's Bagels"}
Placeholder Map: {'Westwood Village': 'a', "Noah's Bagels": 'b'}
False

436
future_avoidance ['a', 'b'] Input utterance: once Westwood's Village Square, is reached after that you can never visit London Cleaners
True Ground LTL: G i westwoods_village_square X G ! london_cleaners
Out Ground LTL: G ! london_cleaners G westwood_village
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b G a
True Lmks: ("Westwood's Village Square", 'London Cleaners')
Out Lmks:["Westwood's Village Square", 'London Cleaners']
Out Grounds: {'Westwood Village', 'London Cleaners'}
Placeholder Map: {'Westwood Village': 'a', 'London Cleaners': 'b'}
RER or Grounding Error

437
future_avoidance ['a', 'b'] Input utterance: once Mio Babbo's, is reached after that you can never visit Village Center Newsstand
True Ground LTL: G i mio_babbos X G ! village_center_newsstand
Out Ground LTL: G ! village_center_newsstand G mio_babbos
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b G a
True Lmks: ("Mio Babbo's", 'Village Center Newsstand')
Out Lmks:["Mio Babbo's", 'Village Center Newsstand']
Out Grounds: {"Mio Babbo's", 'Village Center Newsstand'}
Placeholder Map: {"Mio Babbo's": 'a', 'Village Center Newsstand': 'b'}
Syntax Error

438
future_avoidance ['a', 'b'] Input utterance: Occidental Petroleum Heliport, can never be visited once Westwood Sporting Goods, occurs
True Ground LTL: G i westwood_sporting_goods X G ! occidental_petroleum_heliport
Out Ground LTL: G ! westwood_sporting_goods G occidental_petroleum_heliport
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b G a
True Lmks: ('Westwood Sporting Goods', 'Occidental Petroleum Heliport')
Out Lmks:['Occidental Petroleum Heliport', 'Westwood Sporting Goods']
Out Grounds: {'Occidental Petroleum Heliport', 'Westwood Sporting Goods'}
Placeholder Map: {'Occidental Petroleum Heliport': 'a', 'Westwood Sporting Goods': 'b'}
Syntax Error

439
future_avoidance ['a', 'b'] Input utterance: Westwood's Village Square, can never be visited once Parking 36, occurs
True Ground LTL: G i parking_36 X G ! westwoods_village_square
Out Ground LTL: G ! parking_36 G ! westwood_village
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! a G ! b
True Lmks: ('Parking 36', "Westwood's Village Square")
Out Lmks:['Parking 36', "Westwood's Village Square"]
Out Grounds: {'Parking 36', 'Westwood Village'}
Placeholder Map: {'Parking 36': 'a', 'Westwood Village': 'b'}
RER or Grounding Error

440
future_avoidance ['a', 'b'] Input utterance: if you go to Poke Bar, you can never go to London Cleaners, after that
True Ground LTL: G i poke_bar X G ! london_cleaners
Out Ground LTL: G i poke_bar X london_cleaners
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Poke Bar', 'London Cleaners')
Out Lmks:['London Cleaners', 'Poke Bar']
Out Grounds: {'London Cleaners', 'Poke Bar'}
Placeholder Map: {'London Cleaners': 'a', 'Poke Bar': 'b'}
False

441
future_avoidance ['a', 'b'] Input utterance: if you go to Urban Outfitters, you can never go to Westwood Sporting Goods, after that
True Ground LTL: G i urban_outfitters X G ! westwood_sporting_goods
Out Ground LTL: G i urban_outfitters X westwood_sporting_goods
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Urban Outfitters', 'Westwood Sporting Goods')
Out Lmks:['Westwood Sporting Goods', 'Urban Outfitters']
Out Grounds: {'Urban Outfitters', 'Westwood Sporting Goods'}
Placeholder Map: {'Urban Outfitters': 'a', 'Westwood Sporting Goods': 'b'}
False

442
future_avoidance ['a', 'b'] Input utterance: if Parking 32, happens that prevents Subway, from happening afterwards
True Ground LTL: G i parking_32 X G ! subway
Out Ground LTL: G i parking_32 X subway
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Parking 32', 'Subway')
Out Lmks:['Parking 32', 'Subway']
Out Grounds: {'Parking 32', 'Subway'}
Placeholder Map: {'Parking 32': 'a', 'Subway': 'b'}
False

443
future_avoidance ['a', 'b'] Input utterance: if Yogurtland, happens that prevents TCT Foods, from happening afterwards
True Ground LTL: G i yogurtland X G ! tct_foods
Out Ground LTL: G i yogurtland X tct_foods
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Yogurtland', 'TCT Foods')
Out Lmks:['TCT Foods', 'Yogurtland']
Out Grounds: {'TCT Foods', 'Yogurtland'}
Placeholder Map: {'TCT Foods': 'a', 'Yogurtland': 'b'}
False

444
future_avoidance ['a', 'b'] Input utterance: if you visit Parking 36, you are not allowed to reach Westwood Wilshire, afterwards
True Ground LTL: G i parking_36 X G ! westwood_wilshire
Out Ground LTL: G i parking_36 X westwood_village
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Parking 36', 'Westwood Wilshire')
Out Lmks:['Parking 36', 'Westwood Wilshire']
Out Grounds: {'Parking 36', 'Westwood Village'}
Placeholder Map: {'Parking 36': 'a', 'Westwood Village': 'b'}
False

445
future_avoidance ['a', 'b'] Input utterance: if you visit Starbucks, you are not allowed to reach Urban Outfitters, afterwards
True Ground LTL: G i starbucks X G ! urban_outfitters
Out Ground LTL: G i starbucks X urban_outfitters
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Starbucks', 'Urban Outfitters')
Out Lmks:['Starbucks', 'Urban Outfitters']
Out Grounds: {'Starbucks', 'Urban Outfitters'}
Placeholder Map: {'Starbucks': 'a', 'Urban Outfitters': 'b'}
False

446
future_avoidance ['a', 'b'] Input utterance: whenever you observe UCLA Extension - Westwood Village Center, this locks TCT Foods, from becoming true from the next instance
True Ground LTL: G i ucla_extension_westwood_village_center X G ! tct_foods
Out Ground LTL: G i ucla_extension_westwood_village_center X tct_foods
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('UCLA Extension - Westwood Village Center', 'TCT Foods')
Out Lmks:['TCT Foods', 'UCLA Extension - Westwood Village Center']
Out Grounds: {'TCT Foods', 'UCLA Extension - Westwood Village Center'}
Placeholder Map: {'TCT Foods': 'a', 'UCLA Extension - Westwood Village Center': 'b'}
False

447
future_avoidance ['a', 'b'] Input utterance: whenever you observe UCLA Extension - Westwood Village Center, this locks UCLA Extension - Lindbrook Center, from becoming true from the next instance
True Ground LTL: G i ucla_extension_westwood_village_center X G ! ucla_extension_lindbrook_center
Out Ground LTL: G i ucla_extension_westwood_village_center X ucla_extension_lindbrook_center
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('UCLA Extension - Westwood Village Center', 'UCLA Extension - Lindbrook Center')
Out Lmks:['UCLA Extension - Lindbrook Center', 'UCLA Extension - Westwood Village Center']
Out Grounds: {'UCLA Extension - Lindbrook Center', 'UCLA Extension - Westwood Village Center'}
Placeholder Map: {'UCLA Extension - Lindbrook Center': 'a', 'UCLA Extension - Westwood Village Center': 'b'}
False

448
future_avoidance ['a', 'b'] Input utterance: seeing UCLA Extension - Westwood Village Center, locks Native Foods, from being true for all time instances starting from the next one
True Ground LTL: G i ucla_extension_westwood_village_center X G ! native_foods
Out Ground LTL: G ! native_foods
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b
True Lmks: ('UCLA Extension - Westwood Village Center', 'Native Foods')
Out Lmks:['UCLA Extension - Westwood Village Center', 'Native Foods']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Native Foods'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Native Foods': 'b'}
False

449
future_avoidance ['a', 'b'] Input utterance: seeing Parking 36, locks UCLA Extension - Westwood Village Center, from being true for all time instances starting from the next one
True Ground LTL: G i parking_36 X G ! ucla_extension_westwood_village_center
Out Ground LTL: G ! ucla_extension_westwood_village_center
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! a
True Lmks: ('Parking 36', 'UCLA Extension - Westwood Village Center')
Out Lmks:['Parking 36', 'UCLA Extension - Westwood Village Center']
Out Grounds: {'UCLA Extension - Westwood Village Center', 'Parking 36'}
Placeholder Map: {'UCLA Extension - Westwood Village Center': 'a', 'Parking 36': 'b'}
False

450
future_avoidance ['a', 'b'] Input utterance: after you get to Native Foods, you must avoid Plaza la Reina
True Ground LTL: G i native_foods X G ! plaza_la_reina
Out Ground LTL: G i native_foods X plaza_la_reina
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Native Foods', 'Plaza la Reina')
Out Lmks:['Native Foods', 'Plaza la Reina']
Out Grounds: {'Native Foods', 'Plaza la Reina'}
Placeholder Map: {'Native Foods': 'a', 'Plaza la Reina': 'b'}
False

451
future_avoidance ['a', 'b'] Input utterance: after you get to Veggie Grill, you must avoid U-Mini
True Ground LTL: G i veggie_grill X G ! u_mini
Out Ground LTL: G i veggie_grill X u_mini
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Veggie Grill', 'U-Mini')
Out Lmks:['Veggie Grill', 'U-Mini']
Out Grounds: {'Veggie Grill', 'U-Mini'}
Placeholder Map: {'Veggie Grill': 'a', 'U-Mini': 'b'}
False

Language to LTL translation accuracy: 0.5265486725663717


